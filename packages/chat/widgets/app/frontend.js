/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let sleep=require("util").promisify(setTimeout),crypto=require("crypto"),Breadcrumbs=require("./breadcrumbs.js").Breadcrumbs,History=require("./history.js").History,HomePage=require("./home_page.js").HomePage,ChatPage=require("./chat_page.js").ChatPage,getOptions=require("./options.js").get,getChat=require("./chat.js").get,createResizableSplitView=require("./resizable.js").createResizableSplitView,h=require("../../../../devboard/utils/html.js"),svg=require("../../../../devboard/utils/svg.js"),CHAT_CSS="gs-chat.css",SPLIT_VIEW_KEY="gs-chat-split-view-ratio";async function loaded(e){var{widget:t,params:i={}}=e;let a=t.staticURL,r=(await!["/--/css/highlight.js/styles/base16/tomorrow.min.css",a.replace("{file}",CHAT_CSS)].forEach(async e=>{let t=!1;var i=document.createElement("link"),a=(i.rel="stylesheet",i.type="text/css",i.href=e,i.onload=()=>{t=!0},document.head.appendChild(i),(new Date).getTime()+2e3);for(await sleep(25);(new Date).getTime()<a&&!t;)await sleep(25);if(!t)throw`ERROR: Timedout while waiting for ${e} to load`}),null);for(let e=0;e<document.styleSheets.length;e++){var l=document.styleSheets[e].href;if(l.match(/primer/)){r=document.styleSheets[e];break}}if(r){var o=r.cssRules||r.rules;for(let e=0;e<o.length;e++)".btn-outline"===o[e].selectorText&&(o[e].style.backgroundColor="white")}var{noRender:i=!1}=i;i||render(t,e.main.body)}async function render(t,e){document.title="GitSense Chat";var{pathname:i,search:a}=window.location;let[r,l]=i.replace(/^\//,"").split("/");i=new URLSearchParams(a);let o=i.get("ref");var s,d,n,a=i.get("chat");let p=i.get("model");function c(e,t=!1){t&&(document.body.style.overflow="hidden");var i=h.createDiv({});if(e.appendChild(i),!t)return i=h.createDiv({style:{}}),e.appendChild(i),i;document.getElementById("devboard-header").style.display="none";document.querySelector(".tblr-page-body").style.marginTop="10px";var i=document.querySelectorAll(".tblr-container-xxl"),i=(Array.from(i).forEach((e,t)=>{e.style.maxWidth="100%",0<t&&(e.style.padding="0px")}),"calc(100vh)"),a=h.createDiv({style:{display:"inline-block",width:"calc(50% - 100px)",verticalAlign:"middle",marginTop:"10px"}}),r=h.createDiv({style:{display:"inline-block",width:"calc(50% - 100px)",verticalAlign:"middle",marginTop:"10px",textAlign:"right"}}),l=h.createDiv({style:{display:"inline-block",width:"200px",textAlign:"center"}}),t=h.createDiv({append:[a,l,r],style:{padding:t?"0px 15px 15px 15px":"0px 0px 15px 0px",whiteSpace:"nowrap",borderBottom:"1px solid black"}}),o=h.createDiv({id:"left body",style:{display:"inline-block",width:"calc(50% - 1px)",height:i,verticalAlign:"top",padding:"15px 10px 60px 5px",overflow:"auto"}}),i=h.createDiv({style:{display:"inline-block",width:"calc(50% - 1px)",height:i,padding:"15px 5px 60px 10px",overflow:"auto"}}),t=(e.appendChild(t),e.appendChild(o),e.appendChild(i),createResizableSplitView(o,i,SPLIT_VIEW_KEY));return{leftCrumbsBody:a,rightCrumbsBody:r,optionsBody:l,leftChatBody:o,rightChatBody:i,resize:t}}function m(e){e.style.marginTop="135px",new HomePage(t,r,l,o).render(e)}a?(i=await getChat(t,{uuid:a,model:p,maxDepth:0}))?((new History).save(i),s=await getOptions(t),new ChatPage(t,s,i,(s=i,i=0,d=new URLSearchParams(window.location.search),n=d.get("model"),d=(d=d.get("models"))?d.split(","):n?[n]:[],(n=d[i])||s.main_model)).render(c(e))):((new History).rm(a),m(c(e))):m(c(e))}module.exports={loaded:loaded};
