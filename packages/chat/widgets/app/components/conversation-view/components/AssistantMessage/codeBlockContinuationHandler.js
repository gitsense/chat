/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let{ChatUtils,CodeBlockUtils}=require("@gitsense/gsc-utils"),DomUtils=require("../../utils/DomUtils"),CodeBlock=require("../CodeBlock"),MessageService=require("../../services/MessageService"),{findMessages,getMessageById,deleteMessagesByIds}=require("../../utils/MessageUtils");function handleCodeBlockContinuation(e,t,n,o,i){if(ChatUtils.isAnalyzeChat(o.chat,e.model))return!1;var r=t?detectContinuationPrompt(t):null;if(r&&!verifyContinuationOverlap(e,r,n,i))return!0;return!!handleIncompleteCodeBlocks(e,t,n,o,i)||handleCompletedMultipartCodeBlocks(e,t,n,o,i)}function handleCompletedMultipartCodeBlocks(p,e,n,g,C){var{blocks:t,hasIncompleteBlocks:o}=CodeBlockUtils.extractCodeBlocks(p.message,{silent:!0});if(o)return!1;if(1!==t.length)return!1;if("code"!==t[0].type)return!1;if(!t[0].header["Continuation-Part"])return!1;if(p.message.match(/\n### Code Cut Off\n/))return!1;o=g.codeBlockService.getCodeBlocksByMessageId(p.id);if(!o||0===o.length)return!1;if(1<o.length){let e=DomUtils.h.createH3({text:"Continuation Error"}),t=DomUtils.h.createParagraph({text:"This message contains more than one code block.",cls:"multipart-code-notice"});return n.appendChild(e),n.appendChild(t),!1}let m=o[0],f=m.length;t=DomUtils.h.createDiv({cls:"multipart-code-container"});n.appendChild(t);let i=DomUtils.h.createH3({text:"Continuation Complete"}),r=DomUtils.h.createParagraph({text:`This message contains the last part of a ${f}-part code block. Clicking this button will create a new, separate sibling version of this chat with the complete, combined code, keeping only essential messages.`,cls:"multipart-code-notice"});o=DomUtils.h.createButton({cls:"btn btn-primary stitch-code-btn",text:"Fork, stitch and clean",onclick:()=>{try{let o=m[0].blockUUID;var e=m[0].messageId,t=m[0].headerText,n=m.slice(1).map(e=>e.messageId),i=findMessages(g.chat.messages[0],e=>{var t;return!("user"!==e.role||!e.message)&&(e=e.message,t=new RegExp("Block-UUID:\\s*"+o,"i"),e.includes("[CONTINUATION REQUEST - PART"))&&t.test(e)}).map(e=>e.id),r=[...n,...i],s=g.chat.messages[0];if(s){var a=JSON.parse(JSON.stringify(s)),l=deleteMessagesByIds(a,r);if(l){var c=t+`


`+stitchBlocks(m),d=getMessageById(l,e);if(d){let e=CodeBlockUtils.updateCodeBlockByUUID(d.message,o,c);e=e.replace(/\n\n### Code Cut Off\n.*/s,"");var u=o.split("-")[0]+"...";d.message="**Updated Code (Stitched)**\n\n"+`Code block \`${u}\` was stitched together using ${f} parts. `+`Please refer to chat ${g.chat.uuid} to view all the parts.

---

`+e;let n=p.model;var h=findMessages(l,e=>{var t=e.model;return"assistant"!==e.role||t===n});C.forkChat(h,p.real_model||p.model)}else console.error(`Could not find the first message (ID: ${e}) in the cleaned chat tree.`)}else console.error("Cleaning process resulted in a null root node. Original root might have been deleted.")}else console.error("Cannot find root node of the chat.")}catch(e){console.error("Error during stitch and clean process:",e),alert("An error occurred during the stitch and clean process. Check the console for details.")}}});t.appendChild(i),t.appendChild(r),t.appendChild(o)}function handleIncompleteCodeBlocks(o,e,t,i,r){let{hasIncompleteBlocks:n,incompleteBlock:s}=CodeBlockUtils.detectIncompleteCodeBlock(o.message,{silent:!0});var a,l,c;return!!n&&"code"===s.type&&(a=DomUtils.h.createParagraph({text:"The code generation was cut off. Click the button below to complete the remaining implementation.",cls:"incomplete-code-notice"}),l=DomUtils.h.createButton({cls:"btn btn-primary continue-code-btn",text:"Continue Code",onclick:async()=>{if(r.onContinueCodeBlock&&"function"==typeof r.onContinueCodeBlock){let e=o.message;var t=(e=e.replace(/\n---\nWarning: Incomplete response\n/,"")).split(/\n/);t.pop(),e=t.join("\n"),e+="\n```\n\n### Code Cut Off\nThis code was previously cut off and a continuation was requested.";try{await MessageService.updateChatMessage(i.widget,o.id,null,e);var n=CodeBlockUtils.generateContinuationPrompt(s);await r.onContinueCodeBlock(n,o.real_model||o.model)}catch(e){console.error("Failed to continue code block:",e);try{await MessageService.updateChatMessage(i.widget,o.id,null,o.message)}catch(e){console.error("Failed to restore message:",e)}}}else console.warn("No on ContinueCodeBlock handler provided")}}),(c=(c=t.querySelectorAll("pre"))[c.length-1])?(c.parentNode.insertBefore(l,c.nextSibling),c.parentNode.insertBefore(a,c.nextSibling)):(t.appendChild(a),t.appendChild(l)),!0)}function detectContinuationPrompt(e){var t;return e&&e.message&&(e.message.includes("[CONTINUATION REQUEST")||e.message.includes("CONTINUATION REQUEST"))?(t=e.message.match(/\(MUST BE INCLUDED IN YOUR RESPONSE FOR VERIFICATION\):\s*```\w+\s([\s\S]*?)```/))&&t[1]?{requiredLines:t[1].trimEnd(),blockUuid:(t=e.message.match(/Block-UUID:\s*([a-f0-9-]+)/i))?t[1]:null}:(console.warn("Continuation request found but no verification block detected"),[]):null}function verifyContinuationOverlap(t,n,o,i){if(t&&n&&n.requiredLines&&0!==n.requiredLines.length){var e=CodeBlockUtils.extractCodeBlocks(t.message,{silent:!0}),e=e?e.blocks:null;if(!e||0===e.length)return _showContinuationError(o,"This response to a continuation request doesn't contain any code blocks.",t,n,i),!1;if(1<e.length)return _showContinuationError(o,"This response contains multiple code blocks when only one continuation block was expected.",t,n,i),!1;var r=e[0].content.split("\n"),s=n.requiredLines.split("\n");if(r.length<s.length)return _showContinuationError(o,"This continuation block doesn't have enough lines to include the required overlapping content.",t,n,i),!1;for(let e=0;e<s.length;e++){var a=s[e],l=null==r[e]?"null/undefined":r[e];if(a!==l)return _showContinuationError(o,`This continuation block doesn't include the required overlapping lines. Expected line ${e+1}: "${a}" but found: "${l}"`,t,n,i),!1}}return!0}function stitchBlocks(n){if(!n||0===n.length)throw new Error("No blocks provided for stitching");if(!n[0].content)throw new Error("Invalid block format: missing content property");let o=n[0].content.split("\n");for(let e=1;e<n.length;e++){if(!n[e].content)throw new Error(`Invalid block format at index ${e}: missing content property`);var i=o,r=n[e].content.split("\n");let t=0;for(let e=0;e<r.length;e++)if(e>=i.length||i.length-r.length+e<0||r[e].trim()!==i[i.length-r.length+e].trim()){t=e;break}o=o.concat(r.slice(t))}return o.join("\n")}function _showContinuationError(e,t,n,o,i){var r=DomUtils.h.createDiv({cls:"continuation-error-container"}),s=DomUtils.h.createH3({text:"Continuation Error",cls:"continuation-error-message"}),t=DomUtils.h.createParagraph({text:""+t,cls:"continuation-error-message"}),a=DomUtils.h.createParagraph({text:"The code cannot be properly stitched together because the required overlapping lines are missing or incorrect.",cls:"continuation-error-details"}),l=DomUtils.h.createButton({cls:"btn btn-warning retry-continuation-btn",text:"Regenerate Continuation",onclick:()=>{i.onRegenerateContinuation&&"function"==typeof i.onRegenerateContinuation?i.onRegenerateContinuation(n,o):console.warn("No onRegenerateContinuation handler provided")}});r.appendChild(s),r.appendChild(t),r.appendChild(a),r.appendChild(l),e.appendChild(r)}module.exports={handleCodeBlockContinuation:handleCodeBlockContinuation};
