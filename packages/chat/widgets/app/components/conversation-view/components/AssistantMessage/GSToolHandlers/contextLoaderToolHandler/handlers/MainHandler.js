/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let{ChatUtils,MessageUtils,ContextUtils}=require("@gitsense/gsc-utils"),{getToolBlocksByTool,getToolBlockElemsByTool}=require("../../../../../utils/GSToolBlockUtils"),{createContainer,createHeader}=require("../components/Common"),{createSelectedInfo,createSelectedTables}=require("../components/SelectedItemsComponents"),createInputs=require("../components/InputComponents").createInputs,{createAction,enableAction,disableAction}=require("../components/ActionComponents"),registerTreeTableHandler=require("./TreeTableHandler").registerTreeTableHandler,AnalyzeGroupsBuilder=require("../components/AnalyzeGroupsBuilder"),{getStoredOptions,saveOptions}=require("../utils/StorageUtils"),{arrayToTree,formatSelectedItemsInfo,chatApi}=require("../../../../../Dependencies"),DomUtils=require("../../../../../utils/DomUtils"),{CONTEXT_LOADER_TOOL,DEFAULT_CONTENT_TYPE,DEFAULT_CONTENT_OPTION,TOGGLE_LINK_TEXT,DEFAULT_COLLAPSIBLE,DEFAULT_START_COLLAPSED,ACTION_TYPES}=require("../constants");async function handleContextLoaderTool(a,l,T,e){if(!a||null==a.message||!l||!T)return console.error("handleContextLoaderTool: Missing required parameters."),!1;if(!T.chat||!T.chat.messages||!T.chat.messages[0])return console.error("handleContextLoaderTool: Invalid chat context."),!1;if("function"!=typeof T.registerForTreeTableStateChanges||"function"!=typeof T.unregisterForTreeTableStateChanges)return console.error("handleContextLoaderTool: TreeTable state change registration functions not found in context."),!1;if(T.renderedMessage[a.id]?.gitsenseChatTools?.contextLoader)return!1;var o=getToolBlocksByTool(a.message,CONTEXT_LOADER_TOOL);if(0===o.length)return!1;if(1!==o.length)return console.warn("More than one context loader tool defined. Update message to ensure there is only one."),!1;var r=getToolBlockElemsByTool(l,CONTEXT_LOADER_TOOL);if(r.length){if(1!==r.length)return console.warn("There should only be one context loader tool block, but we found "+r.length),!1;r[0].parentNode.removeChild(r[0])}r=o[0].toolData;let h=r.config||{header:{},status:{},actions:{show:!0,type:"button",load:{className:"btn btn-primary",text:"Load selected"}},collapsible:DEFAULT_COLLAPSIBLE,startCollapsed:DEFAULT_START_COLLAPSED};var o=r.id?"gs-chat-tool:"+r.tool+":"+r.id:null,i=getStoredOptions(o);let y=i?.contentType||DEFAULT_CONTENT_TYPE,C=i?.contentOption||DEFAULT_CONTENT_OPTION;try{let g={container:null,filter:null,filterHeader:null,selectedHeader:null,selectedInfo:null,toggleLink:null,contentWrapper:null,analyzeBuilderHeader:null,analyzeBuilderOptions:null,analyzeBuilderGroups:null,analyzeBuilderGroupsContainer:null,actions:{container:null,load:null,code:null,plan:null,copy:null,paste:null,mergeImported:null,mergeWorking:null,deleteContexts:null},registeredCallback:null},e=()=>{if(g.registeredCallback&&"function"==typeof T.unregisterForTreeTableStateChanges)try{T.unregisterForTreeTableStateChanges(g.registeredCallback)}catch(e){console.error("Error unregistering TreeTable state change callback:",e)}for(var e in g.toggleLink&&(g.toggleLink.removeEventListener("click",g.toggleLink.onclick),g.toggleLink.onclick=null),g.container&&g.container.parentElement&&g.container.remove(),g)g[e]=null;g=null};var s,c,d,p=(e,t)=>{let{selectedItems:n,html:a}=formatSelectedItemsInfo(e,y,C,"short"),l=new Map(n.map(e=>[e.id,e]));var o,r,e=t.filter(e=>!l.get(e.id)),i=(g.selectedInfo&&(e.length?(t=e.filter(e=>"git-blob"===e.type).length,e=e.filter(e=>"git-blob"!==e.type).length,o=[],t&&o.push(t+" file"+(1===t?"":"s")),e&&o.push(e+" tree"+(1===e?"":"s")),a=(a.match(/no selected/i)?a+" matched":"Matched "+a.toLowerCase())+". &nbsp;"+`<span style='border:1px solid #FF9800;background-color:#FFF3E0;color: #212121;border-radius:3px;padding:3px 5px;font-size:.95em'>Filter settings excluded  ${o.join(" and ")}.</span>`):0===n.length&&(a=h.selected?.info?.text||"No items selected. Select one or more items from the 'Repositories' tree."),g.selectedInfo.innerHTML=a),g.actions||{}),s=[ACTION_TYPES.MERGE_IMPORTED,ACTION_TYPES.MERGE_WORKING,ACTION_TYPES.DELETE_CONTEXTS];for(r in i){var c=i[r];!c||"container"===r||s.includes(r)||(r===ACTION_TYPES.PASTE||n.length&&c.disabled?enableAction(c):0!==n.length||c.disabled||disableAction(c))}g.analyzeBuilderGroups&&(t=g.analyzeBuilderOptions.api.getInputValues(),0===n.length?(g.analyzeBuilderHeader.style.display="none",g.analyzeBuilderOptions.elem.style.display="none",g.analyzeBuilderGroupsContainer.style.display="none",g.analyzeBuilderGroups.update({items:[],options:t})):(g.analyzeBuilderHeader.style.display=null,g.analyzeBuilderOptions.elem.style.display="flex",g.analyzeBuilderGroupsContainer.style.display=null,g.analyzeBuilderGroups.update({items:n,options:t,contentType:y,contentOption:C,context:T})))},u={message:a,context:T,config:h,contextLoader:r,components:g,contentType:y,contentOption:C,storageId:o,cleanup:e,updateStates:p};if(g.registeredCallback=registerTreeTableHandler(u),g.container=createContainer(h),g.contentWrapper=DomUtils.h.createDiv({cls:"context-loader-content-wrapper"}),h.collapsible&&(g.toggleLink=DomUtils.h.createLink({text:TOGGLE_LINK_TEXT,href:"#",style:{display:"block",textAlign:"center",cursor:"pointer",fontSize:"0.9em",marginTop:"10px"}}),g.container.appendChild(g.toggleLink),g.toggleLink.onclick=e=>{e.preventDefault();var e="none"===g.contentWrapper.style.display,t=g.toggleLink.innerText,t=t.match(/Show/)?t.replace(/Show/,"Hide"):t.replace(/Hide/,"Show");g.contentWrapper.style.display=e?null:"none",g.toggleLink.innerText=t}),h.filter&&h.filter.inputs&&(i.contentType&&(s=h.filter.inputs.find(e=>"context"===e.id))&&(s.defaultValue=i.contentType+"::"+i.contentOption),g.filterHeader=createHeader({text:"Filters"},3),g.filter=createInputs(h.filter.inputs,()=>{g.registeredCallback&&g.registeredCallback()}),g.contentWrapper.appendChild(g.filterHeader),g.contentWrapper.appendChild(g.filter.elem)),g.selectedHeader=h.selected?.header?createHeader(h.selected.header):null,g.selectedInfo=h.selected?.info?createSelectedInfo(h.selected.info):null,g.selectedHeader&&g.container.appendChild(g.selectedHeader),g.selectedInfo&&g.contentWrapper.appendChild(g.selectedInfo),Object.keys(h.actions||{}).length&&(g.actions.container=DomUtils.h.createDiv({style:{display:"flex",gap:"15px",alignItems:"center"}}),g.contentWrapper.appendChild(g.actions.container),c=h.actions,d={message:a,config:h,registeredCallback:g.registeredCallback,cleanup:e,context:T,contextLoader:r,contentType:y,contentOption:C,filter:g.filter},c.load&&(d.elemType=c.load.type,g.actions.load=createAction("load",d),g.actions.container.appendChild(g.actions.load)),c.plan&&(d.elemType=c.plan.type,g.actions.plan=createAction("plan",d),g.actions.container.appendChild(g.actions.plan)),c.code&&(d.elemType=c.code.type,g.actions.code=createAction("code",d),g.actions.container.appendChild(g.actions.code)),c.copy&&(d.elemType=c.copy.type,g.actions.copy=createAction("copy",d),g.actions.container.appendChild(g.actions.copy)),c.paste)&&(d.elemType=c.paste.type,g.actions.paste=createAction("paste",d),g.actions.container.appendChild(g.actions.paste)),h.analyzeBuilder){var m=T.chat;if(!ChatUtils.isAnalyzeChat(m))return void console.error("Analyze builder can only be used in a Analyze Chat");var f=ChatUtils.getChatMessages(m).find(e=>"assistant"===e.role),{analyzer:E,content:O,instructions:x}=MessageUtils.parseAnalyzeMessage(f.message);let t={};h.analyzeBuilder.inputs.forEach(e=>t[e.id]=e),g.analyzeBuilderHeader=createHeader({text:"Analyze"}),g.analyzeBuilderOptions=createInputs(h.analyzeBuilder.inputs,()=>{if(!g.analyzeBuilderGroups)throw new Error("Analyze builder triggered an update but no components.analyzeBuilderGroups defined");g.analyzeBuilderGroups.update({contentType:y,contentOption:C,options:g.analyzeBuilderOptions.api.getInputValues()})}),g.analyzeBuilderGroupsContainer=DomUtils.h.createDiv({}),g.analyzeBuilderGroups=new AnalyzeGroupsBuilder(g.analyzeBuilderGroupsContainer,E,O,x,T),g.contentWrapper.appendChild(g.analyzeBuilderHeader),g.contentWrapper.appendChild(g.analyzeBuilderOptions.elem),g.contentWrapper.appendChild(g.analyzeBuilderGroupsContainer)}var L=ChatUtils.getChatMessages(T.chat),b=L.filter(e=>0<getToolBlocksByTool(e.message,CONTEXT_LOADER_TOOL).length),A=L.filter(e=>MessageUtils.isContextMessage(e.message)),I=0<b.length&&b[b.length-1].id===a.id,B=A.length;let t=new Set,n=new Set;L.forEach(e=>{MessageUtils.isContextMessage(e.message)&&ContextUtils.extractContextSections(e.message).forEach(e=>{e=e["chat id"];e&&(n.has(e)&&t.add(e),n.add(e))})});var k=n.size,S=t.size;return(h.showManage||null==h.showManage)&&I&&1<=B&&0<k&&_renderManageSection(g.contentWrapper,B,k,S,g.actions,u),h.collapsible&&h.startCollapsed&&(g.contentWrapper.style.display="none"),l.appendChild(g.container),h.chatIds?setTimeout(()=>{let d=6,p=250,u=async(t=1)=>{try{var n=[],a=[],l=T.getTreeTableStateId();for(let e=0;e<h.chatIds.length;e++){var o,r,i,s=h.chatIds[e],c=T.findNode(s,l);c||((r=[...(o=await chatApi.getGitRefChatByFamilyMember(T.widget,{id:s})).descendants]).unshift(o),i=arrayToTree(r,"desc",o.id),T.addChildrenToNode(o.id,i,l),c=T.findNode(s,l))?n.push(c):a.push(s)}a.length?console.error("The following chat IDs are not valid: "+a.join(",")):g.registeredCallback(n,{selectedType:y,selectedOption:C})}catch(e){t<=d?setTimeout(()=>{u(t+1)},p):console.error("Unable to determine nodes based on their IDs: "+e.message)}};setTimeout(u,p)},500):T.registerForTreeTableStateChanges(g.registeredCallback),p([],[]),g.container.appendChild(g.contentWrapper),!0}catch(e){return console.error("handleContextLoaderTool: Error creating or registering UI elements:",e),"function"==typeof cleanup&&cleanup(),!1}}function _renderManageSection(e,t,n,a,l,o){var r=DomUtils.h,i=r.createDiv({style:{marginTop:"20px",borderTop:"1px solid #ddd"}}),e=(e.appendChild(i),createHeader({text:"Manage"},3)),e=(i.appendChild(e),r.createParagraph({html:`This chat contains ${t} context messages with ${n} unique files, and ${a} overlapping files.`,style:{marginBottom:"15px"}})),n=(i.appendChild(e),r.createDiv({style:{display:"flex",gap:"20px",alignItems:"center"}})),a=(i.appendChild(n),1===t?"":"Merge and"),e=createAction(ACTION_TYPES.MERGE_IMPORTED,{...o,elemType:"link",config:{actions:{mergeImported:{text:a+" Update (Imported)"}}}}),r=(n.appendChild(e),l.mergeImported=e,createAction(ACTION_TYPES.MERGE_WORKING,{...o,elemType:"link",config:{actions:{mergeWorking:{text:a+" Update (Working Directory)"}}}}));n.appendChild(r),l.mergeWorking=r,1<t&&(i=createAction(ACTION_TYPES.DELETE_CONTEXTS,{...o,elemType:"link",config:{actions:{deleteContexts:{text:"Delete All Contexts Except Last",queryClass:"gsc-delete-all-contexts-except-last-link"}}}}),n.appendChild(i),l.deleteContexts=i)}module.exports={handleContextLoaderTool:handleContextLoaderTool};
