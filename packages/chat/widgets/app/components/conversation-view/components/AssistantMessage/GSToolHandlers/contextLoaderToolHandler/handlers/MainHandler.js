/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let{CodeBlockUtils,ChatUtils,MessageUtils,ContextUtils,GSToolBlockUtils}=require("@gitsense/gsc-utils"),{getToolBlocksByTool,getToolBlockElemsByTool}=require("../../../../../utils/GSToolBlockUtils"),{createContainer,createHeader}=require("../components/Common"),{createSelectedInfo,createSelectedTables}=require("../components/SelectedItemsComponents"),createInputs=require("../components/InputComponents").createInputs,{createAction,enableAction,disableAction}=require("../components/ActionComponents"),InsightsConfigManager=require("../../../../MetadataInsights/InsightsConfigManager"),registerTreeTableHandler=require("./TreeTableHandler").registerTreeTableHandler,AnalyzeGroupsBuilder=require("../components/AnalyzeGroupsBuilder"),{getStoredOptions,saveOptions}=require("../utils/StorageUtils"),{arrayToTree,formatSelectedItemsInfo,chatApi,getAnalyzerSchema}=require("../../../../../Dependencies"),DomUtils=require("../../../../../utils/DomUtils"),MessageService=require("../../../../../services/MessageService"),{CONTEXT_LOADER_TOOL,DEFAULT_CONTENT_TYPE,DEFAULT_CONTENT_OPTION,TOGGLE_LINK_TEXT,DEFAULT_COLLAPSIBLE,DEFAULT_START_COLLAPSED,ACTION_TYPES}=require("../constants");async function handleContextLoaderTool(a,n,h,e){if(!a||null==a.message||!n||!h)return console.error("handleContextLoaderTool: Missing required parameters."),!1;if(!h.chat||!h.chat.messages||!h.chat.messages[0])return console.error("handleContextLoaderTool: Invalid chat context."),!1;if("function"!=typeof h.registerForTreeTableStateChanges||"function"!=typeof h.unregisterForTreeTableStateChanges)return console.error("handleContextLoaderTool: TreeTable state change registration functions not found in context."),!1;if(h.renderedMessage[a.id]?.gitsenseChatTools?.contextLoader)return!1;var o=getToolBlocksByTool(a.message,CONTEXT_LOADER_TOOL);if(0===o.length)return!1;if(1!==o.length)return console.warn("More than one context loader tool defined. Update message to ensure there is only one."),!1;var l=getToolBlockElemsByTool(n,CONTEXT_LOADER_TOOL);if(l.length){if(1!==l.length)return console.warn("There should only be one context loader tool block, but we found "+l.length),!1;l[0].parentNode.removeChild(l[0])}let r=o[0].toolData,i=n;if(r.config.renderTo){let e,t=null;"object"==typeof r.config.renderTo&&r.config.renderTo.id?(e=r.config.renderTo.id,t=r.config.renderTo.style):"string"==typeof r.config.renderTo&&(e=r.config.renderTo);var s;for(s of n.querySelectorAll("p, div, span"))if(s.textContent.match(`\\[\\[GSC_RENDER_TARGET:${e}\\]\\]`)){if(i=s,t)for(var d in t)i.style[d]=t[d];i.innerHTML="";break}i===n&&console.warn(`Context Loader: Render target '[[GSC_RENDER_TARGET:${e}]]' not found. Appending to contentBody.`)}let T=r.config||{header:{},status:{},actions:{show:!0,type:"button",load:{className:"btn btn-primary",text:"Load selected"}},collapsible:DEFAULT_COLLAPSIBLE,startCollapsed:DEFAULT_START_COLLAPSED};l=r.id?"gs-chat-tool:"+r.tool+":"+r.id:null,o=getStoredOptions(l);let y=o?.contentType||DEFAULT_CONTENT_TYPE,C=o?.contentOption||DEFAULT_CONTENT_OPTION;try{let u={container:null,filter:null,filterHeader:null,selectedHeader:null,selectedInfo:null,toggleLink:null,contentWrapper:null,insightsContainer:null,insightsManager:null,analyzeBuilderHeader:null,analyzeBuilderOptions:null,analyzeBuilderGroups:null,analyzeBuilderGroupsContainer:null,actions:{container:null,load:null,code:null,plan:null,copy:null,paste:null,mergeImported:null,mergeWorking:null,deleteContexts:null},registeredCallback:null},e=()=>{if(u.registeredCallback&&"function"==typeof h.unregisterForTreeTableStateChanges)try{h.unregisterForTreeTableStateChanges(u.registeredCallback)}catch(e){console.error("Error unregistering TreeTable state change callback:",e)}for(var e in u.insightsManager&&(u.insightsManager.cleanup(),u.insightsManager=null),u.toggleLink&&(u.toggleLink.removeEventListener("click",u.toggleLink.onclick),u.toggleLink.onclick=null),u.container&&u.container.parentElement&&u.container.remove(),u)u[e]=null;u=null};var c=(e,t)=>{let{selectedItems:n,html:a}=formatSelectedItemsInfo(e,y,C,"short"),o=new Map(n.map(e=>[e.id,e]));var l,r,e=t.filter(e=>!o.get(e.id)),i=(u.selectedInfo&&(e.length?(c=e.filter(e=>"git-blob"===e.type).length,e=e.filter(e=>"git-blob"!==e.type).length,l=[],c&&l.push(c+" file"+(1===c?"":"s")),e&&l.push(e+" tree"+(1===e?"":"s")),a=(a.match(/no selected/i)?a+" matched":"Matched "+a.toLowerCase())+". &nbsp;"+`<span style='border:1px solid #FF9800;background-color:#FFF3E0;color: #212121;border-radius:3px;padding:3px 5px;font-size:.95em'>Filter settings excluded  ${l.join(" and ")}.</span>`):0===n.length&&(a=T.selected?.info?.text||"No items selected. Select one or more items from the 'Repositories' tree."),u.selectedInfo.innerHTML=a),u.actions||{}),s=[ACTION_TYPES.MERGE_IMPORTED,ACTION_TYPES.MERGE_WORKING,ACTION_TYPES.DELETE_CONTEXTS];for(r in i){var d=i[r];!d||"container"===r||s.includes(r)||(r===ACTION_TYPES.PASTE||n.length&&d.disabled?enableAction(d):0!==n.length||d.disabled||disableAction(d))}if(u.analyzeBuilderGroups){var c=u.analyzeBuilderOptions.api.getInputValues();if(0===n.length)return u.analyzeBuilderHeader.style.display="none",u.analyzeBuilderOptions.elem.style.display="none",u.analyzeBuilderGroupsContainer.style.display="none",void u.analyzeBuilderGroups.update({items:[],options:c});u.analyzeBuilderHeader.style.display=null,u.analyzeBuilderOptions.elem.style.display="flex",u.analyzeBuilderGroupsContainer.style.display=null,u.analyzeBuilderGroups.update({items:n,options:c,contentType:y,contentOption:C,context:h})}u.insightsManager&&u.insightsManager.updateSelectedItems&&"function"==typeof u.insightsManager.updateSelectedItems&&(e=t.filter(e=>"git-blob"===e.type),u.insightsManager.updateSelectedItems(e))},p=ChatUtils.getChatMessages(h.chat),g=p.filter(e=>0<getToolBlocksByTool(e.message,CONTEXT_LOADER_TOOL).length),f=p.filter(e=>MessageUtils.isContextMessage(e.message)),m=(0<g.length&&(g[g.length-1].id,a.id),f.length);let t=new Set,n=new Set;p.forEach(e=>{MessageUtils.isContextMessage(e.message)&&ContextUtils.extractContextSections(e.message).forEach(e=>{e=e["chat id"];e&&(n.has(e)&&t.add(e),n.add(e))})});var E,O,x,I,L,A=n.size,b=t.size,S={message:a,context:h,config:T,contextLoader:r,components:u,contentType:y,contentOption:C,storageId:l,cleanup:e,updateStates:c},B=(u.registeredCallback||(u.registeredCallback=registerTreeTableHandler(S)),!1!==T.showActions&&Object.keys(T.actions||{}).length),_=!1!==T.showAnalzyerBuilder&&T.analyzeBuilder,k=!1!==T.showFilter&&T.filter&&T.filter.inputs,z=T.showManage,D=T.showInsights;if(u.container=createContainer(T),u.contentWrapper=DomUtils.h.createDiv({cls:"context-loader-content-wrapper"}),T.collapsible&&(u.toggleLink=DomUtils.h.createLink({text:TOGGLE_LINK_TEXT,href:"#",style:{display:"block",textAlign:"center",cursor:"pointer",fontSize:"0.9em",marginTop:"10px"}}),u.container.appendChild(u.toggleLink),u.toggleLink.onclick=e=>{e.preventDefault();var e="none"===u.contentWrapper.style.display,t=u.toggleLink.innerText,t=t.match(/Show/)?t.replace(/Show/,"Hide"):t.replace(/Hide/,"Show");u.contentWrapper.style.display=e?null:"none",u.toggleLink.innerText=t}),k&&(o.contentType&&(E=T.filter.inputs.find(e=>"context"===e.id))&&(E.defaultValue=o.contentType+"::"+o.contentOption),u.filterHeader=createHeader({text:"Filters"},3),u.filter=createInputs(T.filter.inputs,()=>{u.registeredCallback&&u.registeredCallback()}),u.contentWrapper.appendChild(u.filterHeader),u.contentWrapper.appendChild(u.filter.elem)),u.selectedHeader=T.selected?.header?createHeader(T.selected.header):null,u.selectedInfo=T.selected?.info?createSelectedInfo(T.selected.info):null,u.selectedHeader&&u.container.appendChild(u.selectedHeader),u.selectedInfo&&u.contentWrapper.appendChild(u.selectedInfo),B&&(u.actions.container=DomUtils.h.createDiv({style:{display:"flex",gap:"15px",alignItems:"center"}}),u.contentWrapper.appendChild(u.actions.container),O=T.actions,x={message:a,config:T,registeredCallback:u.registeredCallback,cleanup:e,context:h,contextLoader:r,contentType:y,contentOption:C,filter:u.filter},O.load&&(x.elemType=O.load.type,u.actions.load=createAction("load",x),u.actions.container.appendChild(u.actions.load)),O.plan&&(x.elemType=O.plan.type,u.actions.plan=createAction("plan",x),u.actions.container.appendChild(u.actions.plan)),O.code&&(x.elemType=O.code.type,u.actions.code=createAction("code",x),u.actions.container.appendChild(u.actions.code)),O.copy&&(x.elemType=O.copy.type,u.actions.copy=createAction("copy",x),u.actions.container.appendChild(u.actions.copy)),O.paste)&&(x.elemType=O.paste.type,u.actions.paste=createAction("paste",x),u.actions.container.appendChild(u.actions.paste)),_){var M=h.chat;if(!ChatUtils.isAnalyzeBuilderChat(M))return void console.error("Analyze builder can only be used in a Analyze Builder Chat");var v=ChatUtils.getChatMessages(M).find(e=>"assistant"===e.role),{analyzer:w,content:N,instructions:U}=MessageUtils.parseAnalyzeMessage(v.message);let t={};T.analyzeBuilder.inputs.forEach(e=>t[e.id]=e),u.analyzeBuilderHeader=createHeader({text:"Analyze"}),u.analyzeBuilderOptions=createInputs(T.analyzeBuilder.inputs,()=>{if(!u.analyzeBuilderGroups)throw new Error("Analyze builder triggered an update but no components.analyzeBuilderGroups defined");u.analyzeBuilderGroups.update({contentType:y,contentOption:C,options:u.analyzeBuilderOptions.api.getInputValues()})}),u.analyzeBuilderGroupsContainer=DomUtils.h.createDiv({}),u.analyzeBuilderGroups=new AnalyzeGroupsBuilder(a,u.analyzeBuilderGroupsContainer,w,N,U,h),u.contentWrapper.appendChild(u.analyzeBuilderHeader),u.contentWrapper.appendChild(u.analyzeBuilderOptions.elem),u.contentWrapper.appendChild(u.analyzeBuilderGroupsContainer)}return z&&(I=!B&&!_&&!k,_renderManageSection(u.contentWrapper,m,A,b,u.actions,S,I)),a.kids&&!a.kids.length||!ChatUtils.isAnalyzeBuilderChat(h.chat)||(u.container.style.display="none"),T.collapsible&&T.startCollapsed&&(u.contentWrapper.style.display="none"),i.appendChild(u.container),T.chatIds&&T.chatIds.length?setTimeout(()=>{let c=6,p=250,g=async(t=1)=>{try{var n=[],a=[],o=h.getTreeTableStateId();for(let e=0;e<T.chatIds.length;e++){var l,r,i,s=T.chatIds[e],d=h.findNode(s,o);d||((r=[...(l=await chatApi.getGitRefChatByFamilyMember(h.widget,{id:s})).descendants]).unshift(l),i=arrayToTree(r,"desc",l.id),h.addChildrenToNode(l.id,i,o),d=h.findNode(s,o))?n.push(d):a.push(s)}a.length?console.error("The following chat IDs are not valid: "+a.join(",")):u.registeredCallback(n,{selectedType:y,selectedOption:C})}catch(e){t<=c?setTimeout(()=>{g(t+1)},p):console.error("Unable to determine nodes based on their IDs: "+e.message)}};setTimeout(g,p)},500):h.registerForTreeTableStateChanges(u.registeredCallback),u.container.appendChild(u.contentWrapper),D&&(u.insightsContainer=DomUtils.h.createDiv({style:{marginTop:"20px"}}),u.contentWrapper.appendChild(u.insightsContainer),(L=T.insights?{...T.insights}:{}).analyzerId&&(L.analyzer=await getAnalyzerSchema(h.widget,L.analyzerId),L.analyzer.name=L.analyzerId.split("::").shift(),L.analyzer.id=L.analyzerId),u.insightsManager=new InsightsConfigManager(u.insightsContainer,h,L,{showOptions:L.showOptions||!1,onSave:(e,t,n)=>{e=e?e.map(e=>e.id):[],t=t?t.id:null;_handleSave(a.id,r,e,t,n,h)},onClear:()=>{_handleClear(a.id,r,h)}})),c([],[]),!0}catch(e){return console.error("handleContextLoaderTool: Error creating or registering UI elements:",e),"function"==typeof cleanup&&cleanup(),!1}}function _getContextBuilderNodes(e,n){let a=[];return e&&Array.isArray(e)&&e.forEach(e=>{var t=n.findNode(e);t?a.push(t):console.warn("_getContextBuilderNodes: Node not found for chat ID: "+e)}),0<a.length?a:e}async function _handleSave(t,e,n,a,o,l){var r={...e};r.config={...r.config,chatIds:n,insights:{showOptions:e.config?.insights?.showOptions||void 0,analyzerId:a,selectedMetadataFields:o}};n=ChatUtils.getChatMessages(l.chat).find(e=>e.id===t);n?(e=GSToolBlockUtils.replaceToolBlock(n.message,CONTEXT_LOADER_TOOL,r,CodeBlockUtils),await MessageService.updateChatMessage(l.widget,t,null,e),l.updateChat()):console.error(`_handleSaveInsightsConfig: Message with ID ${t} not found.`)}async function _handleClear(t,e,n){e={...e};e.config&&e.config.insights&&(delete e.config.insights,delete e.config.chatIds);var a=ChatUtils.getChatMessages(n.chat).find(e=>e.id===t),a=GSToolBlockUtils.replaceToolBlock(a.message,CONTEXT_LOADER_TOOL,e,CodeBlockUtils);await MessageService.updateChatMessage(n.widget,t,null,a),n.updateChat()}function _renderManageSection(e,t,n,a,o,l,r){var i=DomUtils.h,s=i.createDiv({style:{marginTop:r?"0px":"20px",borderTop:r?null:"1px solid #ddd"}}),e=(e.appendChild(s),createHeader({text:"Manage"+(r?" Context":"")},r?1:3)),r=(r&&(e.style.marginTop="0px"),s.appendChild(e),i.createParagraph({html:`This chat contains ${t} context messages with ${n} unique files, and ${a} overlapping files.`,style:{marginBottom:"15px"}}));s.appendChild(r),0!==t&&(e=i.createDiv({style:{display:"flex",gap:"20px",alignItems:"center"}}),s.appendChild(e),n=1===t?"":"Merge and",a=createAction(ACTION_TYPES.MERGE_IMPORTED,{...l,elemType:"link",config:{actions:{mergeImported:{text:n+" Update (Imported)"}}}}),e.appendChild(a),o.mergeImported=a,r=createAction(ACTION_TYPES.MERGE_WORKING,{...l,elemType:"link",config:{actions:{mergeWorking:{text:n+" Update (Working Directory)"}}}}),e.appendChild(r),o.mergeWorking=r,1<t)&&(i=createAction(ACTION_TYPES.DELETE_CONTEXTS,{...l,elemType:"link",config:{actions:{deleteContexts:{text:"Delete All Contexts Except Last",queryClass:"gsc-delete-all-contexts-except-last-link"}}}}),e.appendChild(i),o.deleteContexts=i)}function DebounceHandleContextLoaderTool(t=500){let n,a=0;this.id=(new Date).getTime(),this.exec=(...e)=>{Date.now()-a<t&&clearTimeout(n),n=setTimeout(async()=>{await handleContextLoaderTool.apply(this,e),a=Date.now()},t)}}module.exports={handleContextLoaderTool:handleContextLoaderTool,DebounceHandleContextLoaderTool:DebounceHandleContextLoaderTool};
