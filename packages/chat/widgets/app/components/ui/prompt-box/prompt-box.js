/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let promptBoxStyles=require("./prompt-box.styles"),GSC_PROMPT_BOX_CONSTANTS=require("./constants").GSC_PROMPT_BOX_CONSTANTS,stylesInjected=!1;class PromptBox{constructor(e={}){this.defaultOptions={title:e.title||GSC_PROMPT_BOX_CONSTANTS.DEFAULT_TITLE,width:e.width||GSC_PROMPT_BOX_CONSTANTS.DEFAULT_WIDTH,height:e.height||GSC_PROMPT_BOX_CONSTANTS.DEFAULT_HEIGHT,zIndex:e.zIndex||GSC_PROMPT_BOX_CONSTANTS.DEFAULT_Z_INDEX,closeOnOverlayClick:void 0!==e.closeOnOverlayClick?e.closeOnOverlayClick:GSC_PROMPT_BOX_CONSTANTS.DEFAULT_CLOSE_ON_OVERLAY_CLICK,showCloseButton:void 0!==e.showCloseButton?e.showCloseButton:GSC_PROMPT_BOX_CONSTANTS.DEFAULT_SHOW_CLOSE_BUTTON,customClass:e.customClass||"",container:e.container||document.body},this.elements={},this.currentOnCloseCallback=null,this.injectStyles(),this.render(),this.bindEvents()}injectStyles(){var e;stylesInjected||((e=document.createElement("style")).textContent=promptBoxStyles,document.head.appendChild(e),stylesInjected=!0)}render(){var e=document.createElement("div"),t=(e.classList.add(GSC_PROMPT_BOX_CONSTANTS.OVERLAY_CLASS),e.style.zIndex=this.defaultOptions.zIndex,`
            <div class="${GSC_PROMPT_BOX_CONSTANTS.CONTENT_CLASS}">
                <div class="${GSC_PROMPT_BOX_CONSTANTS.HEADER_CLASS}">
                    <h3 class="${GSC_PROMPT_BOX_CONSTANTS.TITLE_CLASS}">${this.escapeHtml(this.defaultOptions.title)}</h3>
                    <button class="${GSC_PROMPT_BOX_CONSTANTS.CLOSE_BUTTON_CLASS}" aria-label="Close prompt">&times;</button>
                </div>
                <div class="${GSC_PROMPT_BOX_CONSTANTS.BODY_CLASS}">
                    <!-- Content will be injected here by the show() method -->
                </div>
            </div>
        `);e.innerHTML=t,this.defaultOptions.container.appendChild(e),this.elements.overlay=e,this.elements.content=e.querySelector("."+GSC_PROMPT_BOX_CONSTANTS.CONTENT_CLASS),this.elements.header=e.querySelector("."+GSC_PROMPT_BOX_CONSTANTS.HEADER_CLASS),this.elements.title=e.querySelector("."+GSC_PROMPT_BOX_CONSTANTS.TITLE_CLASS),this.elements.closeButton=e.querySelector("."+GSC_PROMPT_BOX_CONSTANTS.CLOSE_BUTTON_CLASS),this.elements.body=e.querySelector("."+GSC_PROMPT_BOX_CONSTANTS.BODY_CLASS),this.elements.overlay.style.display=GSC_PROMPT_BOX_CONSTANTS.DISPLAY_HIDDEN,this.defaultOptions.showCloseButton||(this.elements.closeButton.style.display="none")}bindEvents(){this.elements.closeButton.addEventListener("click",()=>{this.hide()}),this.elements.overlay.addEventListener("click",e=>{e.target===this.elements.overlay&&this.defaultOptions.closeOnOverlayClick&&this.hide()}),this.escapeKeyListener=e=>{"Escape"===e.key&&this.isVisible()&&this.hide()},document.addEventListener("keydown",this.escapeKeyListener)}isVisible(){return this.elements.overlay.style.display!==GSC_PROMPT_BOX_CONSTANTS.DISPLAY_HIDDEN}_updateContent(e,t,s=!1){for(;e.firstChild;)e.removeChild(e.firstChild);null!=t&&(s&&"string"==typeof t?e.innerHTML=t:"string"==typeof t||t instanceof String?e.appendChild(document.createTextNode(t)):t instanceof Node?e.appendChild(t):(console.error("PromptBox: Content must be a string or DOM Node.",t),e.textContent="Error: Invalid content provided."))}_applyVisualSettings(e){var t;void 0!==e.zIndex?this.elements.overlay.style.zIndex=e.zIndex:void 0!==this.defaultOptions.zIndex&&(this.elements.overlay.style.zIndex=this.defaultOptions.zIndex),void 0!==e.width?(t="number"==typeof e.width?e.width+"px":e.width,this.elements.content.style.width=t):void 0!==this.defaultOptions.width&&(t="number"==typeof this.defaultOptions.width?this.defaultOptions.width+"px":this.defaultOptions.width,this.elements.content.style.width=t),void 0!==e.width&&"number"==typeof e.width?this.elements.content.style.maxWidth=2*e.width+"px":void 0!==this.defaultOptions.width&&"number"==typeof this.defaultOptions.width?this.elements.content.style.maxWidth=2*this.defaultOptions.width+"px":this.elements.content.style.maxWidth=GSC_PROMPT_BOX_CONSTANTS.DEFAULT_MAX_WIDTH,void 0!==e.height?(t="number"==typeof e.height?e.height+"px":e.height,this.elements.content.style.height=t):void 0!==this.defaultOptions.height&&(t="number"==typeof this.defaultOptions.height?this.defaultOptions.height+"px":this.defaultOptions.height,this.elements.content.style.height=t),void 0!==e.showCloseButton?this.elements.closeButton.style.display=e.showCloseButton?"":"none":void 0!==this.defaultOptions.showCloseButton&&(this.elements.closeButton.style.display=this.defaultOptions.showCloseButton?"":"none")}show(e={},t){e={...this.defaultOptions,...e};void 0!==e.title&&this._updateContent(this.elements.title,e.title),void 0!==e.content&&this._updateContent(this.elements.body,e.content,e.isHtmlContent||!1),this._applyVisualSettings(e),e.customClass&&this.elements.overlay.classList.add(e.customClass),this.currentOnCloseCallback=t,this.elements.overlay.style.display=GSC_PROMPT_BOX_CONSTANTS.DISPLAY_VISIBLE,document.body.style.overflow="hidden"}hide(){this.isVisible()&&(this.elements.overlay.style.display=GSC_PROMPT_BOX_CONSTANTS.DISPLAY_HIDDEN,document.body.style.overflow="","function"==typeof this.currentOnCloseCallback)&&this.currentOnCloseCallback()}destroy(){this.elements.closeButton.removeEventListener("click",this.hide),this.elements.overlay.removeEventListener("click",this.handleOverlayClick),document.removeEventListener("keydown",this.escapeKeyListener),this.elements.overlay&&this.elements.overlay.parentNode&&this.elements.overlay.parentNode.removeChild(this.elements.overlay),this.elements={},this.currentOnCloseCallback=null,this.escapeKeyListener=null}escapeHtml(e){return"string"!=typeof e?"":e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}}module.exports={PromptBox:PromptBox};
