/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let initStyles=require("./styles/index.js").initStyles,createTreeTableState=require("./state/treeTableState").createTreeTableState,createTableHeader=require("./components/tableHeader").createTableHeader,createTableBody=require("./components/tableBody").createTableBody,createPagination=require("./components/pagination/pagination").createPagination,{setupDynamicUpdates,expandAllNodesWithChildren}=require("./components/tableUtils"),{handleNodeExpansion,handleExpandToChild,handleExpandToLatest}=require("./components/tableHandlers"),{groupNodesByLatestTimestamp,findNodeById,arrayToTree}=require("./utils/treeUtils"),extendStateWithSelectionOptions=require("./components/selectionManagement/selectionState").extendStateWithSelectionOptions,createSelectionManagement=require("./components/selectionManagement/").createSelectionManagement,{chevronRightSvg,chevronDownSvg}=require("./constants");function TreeTable(d,e,t={}){let{decorator:l={},rowsPerPage:a=10,showHeader:i=!0,showPagination:r=!0,styles:n=null,columns:o=[],autoExpandRoot:s=!1,currentNodeId:c=null,toggleButtonInColumn:h=!1,indentBase:g=30,onAddContext:u=null,onSelectionChange:p=null,onSelectionStateChange:S=null,visualDayBreaks:C=!0,sortRootBy:b="updated_at",sortRootOrder:y="desc",chatApi:m=null,batchChatsSize:N=25,showSelectionCheckboxes:f=!1,showContextBuilderAddButton:v=!0,showContextBuilderSaveButton:x=!0,showContextBuilderCopyButton:L=!0}=t;initStyles(n,g);var w,t=[{key:"current_node_indicator",label:"",visible:!1,width:"20px"},{key:"name",label:"Name",visible:!0,width:"40%",render:(e,t,a)=>{t=t.name?.(e)||e.name,e=document.createElement("span");return e.className="node-name",a&&"object"==typeof t&&(e.appendChild(a),t.style.verticalAlign="middle"),"string"==typeof t?e.textContent=t:e.appendChild(t),e}},{key:"chats",label:"Chats",visible:!0,width:"20%"},{key:"created_at",label:"Created At",visible:!0,width:"20%",render:(e,t)=>t.createdAt?.(e)||e.created_at},{key:"latest_child",label:"Latest Child",visible:!0,width:"20%"},{key:"toggle_button",label:"",visible:h,width:"20px"},{key:"actions",label:"Actions",visible:!0,width:"20%"},{key:"selection",label:"",visible:!1,width:"20px"}];null!==c&&(w=findNodeById(d,c))&&(w.current_node=!0);let P=t.map(t=>{var e=o.find(e=>e.key===t.key);return e?{...t,...e}:t}),T=P.filter(e=>e.visible);T.map(e=>e.width);if(!(e instanceof Element))throw new Error("Container must be a DOM element");let B=createTreeTableState(d,a),I=(B=extendStateWithSelectionOptions(B),document.createElement("div")),E=(I.className="tree-table-container",e.innerHTML="",document.createElement("div")),k=(E.className="scrollable-table-container",P.find(e=>"selection"===e.key)?.visible||!1),D=k?createSelectionManagement({state:B,chatApi:m,batchChatsSize:N,showCheckboxes:f,showContextBuilderAddButton:v,showContextBuilderCopyButton:L,showContextBuilderSaveButton:x,onAddContext:(e,t)=>{u&&"function"==typeof u&&u(e,t)},onConfigChange:()=>{M(),D.updateSelectionUI(),S&&S(B.getSelectedNodes(),B.selectionOptions)}}):{element:document.createElement("div"),updateSelectionUI:()=>{}};function R(){k&&D.updateSelectionUI&&D.updateSelectionUI();B.getSelectedNodes();q()}function q(){I.querySelectorAll('input[type="checkbox"]').forEach(e=>{e.checked=B.isNodeSelected(parseInt(e.closest("tr").dataset.id))})}e.appendChild(D.element),e.appendChild(E);let A={state:B,toggleButtonInColumn:h,chatApi:m,toggleChildren:(e,t)=>{handleNodeExpansion({nodeId:e,button:t,container:I,state:B,decorator:l,columns:T,handlers:A})},toggleNodeSelection:async(e,t)=>{var a=B.findNodeById(e);a&&("git-ref"!==a.type||a.kids&&0!==a.kids.length||B.hasFetchedDescendants(e)||!A.chatApi?.getGitRefChatDescendants||(B.addFetchedDescendants(e),a=await A.chatApi.getGitRefChatDescendants(e),B.addChildrenToNode(e,a)),B.toggleNodeSelection(e,t),q(),R(),p&&(a=B.getSelectedNodes().length,e=B.getSelectedNodes(),p(a,e)),S)&&S(B.getSelectedNodes(),B.selectionOptions)},expandToChild:(e,t)=>handleExpandToChild({rootNodeId:e,childNodeId:t,data:B.getData(),container:I,state:B,decorator:l,columns:T,handlers:A}),expandToLatestChild:e=>{handleExpandToLatest({rootNodeId:e,data:B.getData(),container:I,state:B,decorator:l,columns:T,handlers:A})},expandAllNodesWithChildren:()=>{expandAllNodesWithChildren({container:I,state:B,decorator:l,columns:T,handlers:A})},changePage:e=>{B.setCurrentPage(e),M()},changePageSize:e=>{B.setCurrentPage(1),B.setRowsPerPage(e),M()}};function M(){I.innerHTML="";var e=document.createElement("table"),t=(e.className="tree-table",d.filter(e=>0===e.parent_id)),a=(B.getCurrentPage()-1)*B.getRowsPerPage(),n=a+B.getRowsPerPage(),a=t.slice(a,n);let o=groupNodesByLatestTimestamp(a);var n=Object.keys(o).find(e=>0<o[e].length)||"",n=(i&&e.appendChild(createTableHeader({columns:T,dayBreakGroup:n})),createTableBody({data:B.getData(),currentPage:B.getCurrentPage(),rowsPerPage:B.getRowsPerPage(),decorator:l,handlers:A,columns:T,visualDayBreaks:C,sortRootBy:b,sortRootOrder:y})),n=(e.appendChild(n),t.length),t=Math.ceil(n/B.getRowsPerPage()),t=createPagination({currentPage:B.getCurrentPage(),totalPages:t,totalItems:n,itemsPerPage:B.getRowsPerPage(),onPageChange:A.changePage,onPageSizeChange:A.changePageSize});I.appendChild(e),E.innerHTML="",E.appendChild(I),r&&E.appendChild(t),B.getData().forEach(e=>{var t;B.isNodeExpanded(e.id)&&(t=I.querySelector(`tr[data-id="${e.id}"]`))&&(t=t.querySelector(".expand-button"))&&("collapsed"===t.dataset.state||"false"===t.dataset.expanded)&&A.toggleChildren(e.id,t)}),s&&0<a.length&&(n=a[0],e=I.querySelector(`tr[data-id="${n.id}"]`))&&(t=e.querySelector(".expand-button"))&&("collapsed"===t.dataset.state||"false"===t.dataset.expanded)&&A.toggleChildren(n.id,t),R(),q()}return M(),setupDynamicUpdates({container:I,state:B,decorator:l}),{refresh:()=>{M()},destroy:()=>{B.clearUpdateInterval(),e.innerHTML=""},goToPage:e=>{A.changePage(e)},getCurrentPage:()=>B.getCurrentPage(),getRowsPerPage:()=>B.getRowsPerPage(),showColumn:t=>{var e=P.find(e=>e.key===t);e&&(e.visible=!0,M())},hideColumn:t=>{var e=P.find(e=>e.key===t);e&&(e.visible=!1,M())},expandNode:e=>{var t=I.querySelector(`tr[data-id="${e}"]`);t&&(t=t.querySelector(".expand-button"))&&("collapsed"===t.dataset.state||"false"===t.dataset.expanded)&&A.toggleChildren(e,t)},collapseNode:e=>{var t=I.querySelector(`tr[data-id="${e}"]`);t&&(t=t.querySelector(".expand-button"))&&("expanded"===t.dataset.state||"true"===t.dataset.expanded)&&A.toggleChildren(e,t)},expandToChild:(e,t)=>handleExpandToChild({rootNodeId:e,childNodeId:t,data:B.getData(),container:I,state:B,decorator:l,columns:T,handlers:A}),expandToLatestChild:e=>{handleExpandToLatest({rootNodeId:e,data:B.getData(),container:I,state:B,decorator:l,columns:T,handlers:A})},expandAllNodesWithChildren:()=>{expandAllNodesWithChildren({container:I,state:B,decorator:l,columns:T,handlers:A})},updateData:e=>{B=createTreeTableState(e,B.getRowsPerPage()),B=extendStateWithSelectionOptions(B),M()},addChildrenToNode:(e,t,a)=>{B.addChildrenToNode(e,t,a)},findNode:(e,t)=>findNodeById(B.getNodeMap(),e,B.buildNodeMap,t),getNodePath:e=>findNodeById(B.getNodeMap(),e,B.buildNodeMap)?getPathToNode(B.getData()[0],e):null,showSelectionColumn:()=>{var e=P.find(e=>"selection"===e.key);e&&(e.visible=!0,M())},hideSelectionColumn:()=>{var e=P.find(e=>"selection"===e.key);e&&(e.visible=!1,M())},getStateId:()=>B.getId(),getSelectedNodes:()=>B.getSelectedNodes(),setRecursiveSelection:e=>{B.setRecursiveSelection(e),M()},setFileSelectionEnabled:e=>{B.setFileSelectionEnabled(e),M()},setDirectorySelectionEnabled:e=>{B.setDirectorySelectionEnabled(e),M()},resetSelectionOptions:()=>{B.setRecursiveSelection(!0),B.setFileSelectionEnabled(!0),B.setDirectorySelectionEnabled(!0),B.clearSelections(),M()},updateSelectionUI:()=>{R()},saveCurrentSelection:(e="Untitled",t=!1)=>{D&&D.saveCurrentSelection&&D.saveCurrentSelection(e,t)},async showContextBuilder(a,n,o,d,l={}){l={showAdd:!0,showCopy:!0,showSave:!0,...l};var i=D.contextBuilderModal;if(i){let t=null;if(a){var r=[];t=[];for(let e=0;e<a.length;e++){var s,c,h=a[e],g=B.findNodeById(h);g||((c=[...(s=await m.getGitRefChatByFamilyMember(h)).descendants]).unshift(s),c=arrayToTree(c,"desc",s.id),B.addChildrenToNode(s.id,c),g=B.findNodeById(h))?t.push(g):badNodeIds.push(h)}if(r.length)throw new Error("No nodes with the ids found: "+JSON.stringify(r))}else t=B.getSelectedNodes();r=n||"overview",n=o||B.selectionOptions.selectedOption;let e=[];"file content"===r?e=t.filter(e=>"git-blob"===e.type):"overview"===r&&(e=t),0<e.length?i.show(e,r,n,d,l):console.warn(`No ${"file content"===r?"git-blob files":"nodes"} selected`)}else console.error("No contextBuilderModal instance defined in selectionManagementComponent")},getLoadedFiles(){return B.getLoadedFiles()},clearLoadedFiles(){B.clearLoadedFiles()},restoreSelectionFromIds(e,t){if(!e||0===e.length)return!1;B.clearSelections(),t&&(B.selectionOptions={...t});let a=0;return e.forEach(e=>{B.findNodeById(e)&&(B.toggleNodeSelection(e,!0),a++)}),M(),q(),0<a}}}module.exports=TreeTable;
