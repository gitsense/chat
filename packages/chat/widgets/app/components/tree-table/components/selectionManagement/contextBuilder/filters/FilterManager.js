/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let FilterState=require("./FilterState").FilterState,filterConfig=require("./config/filterConfig").filterConfig,LanguageFilterLogic=require("./types/language/LanguageFilterLogic").LanguageFilterLogic,LanguageFilter=require("./types/language/LanguageFilter").LanguageFilter,KeywordsFilterLogic=require("./types/keywords/KeywordsFilterLogic").KeywordsFilterLogic,PathFilterLogic=require("./types/path/PathFilterLogic").PathFilterLogic,PathFilter=require("./types/path/PathFilter").PathFilter,KeywordsFilter=require("./types/keywords/KeywordsFilter").KeywordsFilter,SearchFilterLogic=require("./types/search/SearchFilterLogic").SearchFilterLogic,MetadataFilterLogic=require("./types/metadata/MetadataFilterLogic").MetadataFilterLogic,SearchFilter=require("./types/search/SearchFilter").SearchFilter,normalizeText=require("./utils/filterUtils").normalizeText;class FilterManager{constructor({contextBuilderTable:e,filterUIContainers:t,chatApi:i,onSearchExecute:a}){this.contextBuilderTable=e,this.filterUIContainers=t,this.chatApi=i,this.onSearchExecute=a,this.onFilterStatsUpdate=null,this.allItems=[],this.activeFilters=[],this.filterState=new FilterState,this.debounceTimer=null,this.debounceDelay=200}initialize(e,t,l,i){this.allItems=e,this.onFilterStatsUpdate=t,this.activeFilters=[],this.filterState.reset(),null!=i&&(this.debounceDelay=i),filterConfig.filterOrder.forEach(a=>{var r=filterConfig.filters[a];let e=null;if(r&&r.enabled){let t=null,i=null;r=this.filterUIContainers[a];if(r){if("language"===a)t=new LanguageFilterLogic,e=t.extractFilterData(this.allItems),(i=new LanguageFilter({container:r,onFilterChange:this.handleFilterChange.bind(this)})).render(e,this.filterState.getFilterState(a));else if("keywords"===a){let e=(t=new KeywordsFilterLogic).extractFilterData(this.allItems);(i=new KeywordsFilter({container:r,onFilterChange:this.handleFilterChange.bind(this)})).render(e,this.filterState.getFilterState(a))}else"path"===a?(t=new PathFilterLogic,e=t.extractFilterData(this.allItems),(i=new PathFilter({container:r,onFilterChange:this.handleFilterChange.bind(this)})).render(e,this.filterState.getFilterState(a))):"search"===a?(t=new SearchFilterLogic,(i=new SearchFilter({container:r,onFilterChange:this.handleFilterChange.bind(this),onSearchExecute:this.onSearchExecute})).applyState(this.filterState.getFilterState(a)||{})):"metadata"===a&&(t=new MetadataFilterLogic,(i=l).initializeAnalyzerDropdown(),i.onSearchTrigger=this.executeMetadataSearch.bind(this),i.chatApi=this.chatApi,i.applyState(this.filterState.getFilterState(a)||null));t&&i&&this.activeFilters.push({id:a,logic:t,ui:i,data:e})}else console.warn(`Filter UI container not found for filter ID: ${a}. Skipping initialization.`)}})}handleFilterChange(){this.activeFilters.forEach(e=>{e.ui&&"function"==typeof e.ui.getState&&this.filterState.updateFilterState(e.id,e.ui.getState())}),this.debounceTimer&&clearTimeout(this.debounceTimer),this.debounceTimer=setTimeout(()=>{this.applyFilters(),"function"==typeof this.onFilterStatsUpdate&&this.onFilterStatsUpdate()},this.debounceDelay)}async executeMetadataSearch(e,t){var i=this.activeFilters.find(e=>e.id===t)?.ui;if(i)if(this.chatApi&&"function"==typeof this.chatApi.search){i.setSearchInProgress(!0),i.hideSearchMessage();try{var a=await this.chatApi.search(e),r=a?.results?.messages||[],l=a?.totalCounts?.messages||0,s=r.map(e=>e.messages_chat_id);500<l?i.showSearchMessage(`Search returned ${l} matches. Displaying the first 500. Consider refining your query for more focused results.`):0===l?i.showSearchMessage("No items matched your metadata filter criteria.",!1):i.hideSearchMessage(),this.filterState.updateFilterState(t,{matchingItemIds:s}),this.applyFilters(),"function"==typeof this.onFilterStatsUpdate&&this.onFilterStatsUpdate()}catch(e){i.showSearchMessage("Search failed: "+(e.message||"Unknown error"),!0),this.filterState.updateFilterState(t,{matchingItemIds:[]}),this.applyFilters(),"function"==typeof this.onFilterStatsUpdate&&this.onFilterStatsUpdate()}finally{i.setSearchInProgress(!1)}}else console.error("FilterManager: chatApi or search function is not available."),i.showSearchMessage("Search failed: Chat API not available.",!0);else console.error("FilterManager: MetadataFilter UI instance not found for ID: "+t)}applyFilters(){if(this.allItems&&0!==this.allItems.length){let a=this.filterState.getCriteria();var e=this.allItems.filter(e=>{var t,i=a.metadata;if(i&&Array.isArray(i.matchingItemIds)&&!i.matchingItemIds.includes(e.id))return!1;for(t of this.activeFilters)if(!t.logic.applyFilter(e,a[t.id]))return!1;return!0}).map(e=>e.id);this.contextBuilderTable.updateDisplayedItems(e)}else this.contextBuilderTable.updateDisplayedItems([])}resetFilters(){this.activeFilters.forEach(e=>{e.ui&&"function"==typeof e.ui.reset&&e.ui.reset()}),this.filterState.reset(),this.applyFilters(),"function"==typeof this.onFilterStatsUpdate&&this.onFilterStatsUpdate()}setFiltersDisabled(t){this.activeFilters.forEach(e=>{e.ui&&"function"==typeof e.ui.setDisabled&&"metadata"!==e.id&&e.ui.setDisabled(t)})}}module.exports={FilterManager:FilterManager};
