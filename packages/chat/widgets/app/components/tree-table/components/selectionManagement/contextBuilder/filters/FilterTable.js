/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

class FilterTable{constructor({container:t,data:e,nameColumnHeader:s,sortColumn:i,sortDirection:l,onSelectionChange:n,initialSelectedIds:h=[],inputPlaceholder:a}){this.container=t,this.onSelectionChange=n,this.nameColumnHeader=s,this.sortColumn=i||null,this.sortDirection=l||"asc",this.disabled=!1,this.filterInput=null,this.filterText="",this.inputPlaceholder=a,this.minFilterLength=2,this.displayMode="all",this.data=e,this.selectedIds=new Set(h),this.table=document.createElement("table"),this.table.className="filter-table",this.table.style.tableLayout="fixed",this.thead=null,this.tbody=null,this.showAllButton=null,this.showSelectedButton=null,this.resetButton=null,this.debounceTimer=null,this.itemRowMap=new Map,this.container.appendChild(this.table),this.render()}render(){this.table.innerHTML="",this.itemRowMap.clear(),this.filterText="",this.createTableHeader(),this.createTableBody(),this.renderRows()}createTableHeader(){this.thead=this.table.createTHead();var t=this.thead.insertRow(),e=document.createElement("th"),s=(e.className="col-checkbox",document.createElement("input")),s=(s.type="checkbox",s.id="filter-table-select-all",s.addEventListener("change",t=>{this.handleSelectAllChange(t.target.checked)}),e.appendChild(s),t.appendChild(e),document.createElement("th")),e=(s.className="col-name",s.textContent=this.nameColumnHeader,s.style.cursor="pointer",s.addEventListener("click",()=>this.handleSortClick("name")),t.appendChild(s),document.createElement("th")),s=(e.className="col-items",e.textContent="",e.style.cursor="pointer",e.addEventListener("click",()=>this.handleSortClick("count")),t.appendChild(e),this.updateSelectAllCheckboxState(),this.thead.insertRow()),t=s.insertCell(),e=(t.colSpan=2,t.style.padding="8px",t.style.gap="12px",s.insertCell()),s=(e.style.padding="8px",e.style.textAlign="right",e.style.textOverflow="clip",document.createElement("div"));s.style.display="flex",s.style.gap="10px",t.appendChild(s),this.showAllButton=document.createElement("button"),this.showAllButton.textContent="All",this.showAllButton.className="filter-table-display-button",this.showAllButton.classList.add("active"),this.showAllButton.addEventListener("click",this.handleShowAllClick.bind(this)),s.appendChild(this.showAllButton),this.showSelectedButton=document.createElement("button"),this.showSelectedButton.textContent="Selected",this.showSelectedButton.className="filter-table-display-button",this.showSelectedButton.addEventListener("click",this.handleShowSelectedClick.bind(this)),s.appendChild(this.showSelectedButton),this.resetButton=document.createElement("button"),this.resetButton.textContent="Reset",this.resetButton.className="filter-table-reset-button",this.resetButton.addEventListener("click",()=>{this.reset()}),e.appendChild(this.resetButton);t=this.thead.insertRow().insertCell();t.colSpan=3,t.style.padding="0",this.filterInput=document.createElement("input"),this.filterInput.type="text",this.filterInput.placeholder="Filter options...",this.filterInput.className="filter-table-input",this.filterInput.style.width="100%",this.filterInput.style.boxSizing="border-box",this.filterInput.style.padding="8px",this.filterInput.addEventListener("keyup",this.handleFilterInput.bind(this)),t.appendChild(this.filterInput)}createTableBody(){this.tbody=this.table.createTBody()}renderRows(){var t,e;this.tbody&&(this.tbody.innerHTML="",this.itemRowMap.clear(),t=[...this.data],this.sortColumn&&t.sort((t,e)=>{t=t[this.sortColumn],e=e[this.sortColumn];return t<e?"asc"===this.sortDirection?-1:1:e<t?"asc"===this.sortDirection?1:-1:0}),0===(t=t.filter(t=>{var e;return!this.filterText||this.filterText.length<this.minFilterLength||(e=this.filterText.toLowerCase(),t.name.toLowerCase().includes(e))}).filter(t=>"selected"!==this.displayMode||this.selectedIds.has(t.id))).length?((e=this.tbody.insertRow().insertCell()).colSpan=3,e.textContent=`No ${this.nameColumnHeader.toLowerCase()}s found.`,e.style.textAlign="center",e.style.fontStyle="italic"):t.forEach(e=>{var t=this.tbody.insertRow(),s=(t.dataset.id=e.id,this.itemRowMap.set(e.id,t),t.insertCell());let i=document.createElement("input");i.type="checkbox",i.checked=this.selectedIds.has(e.id),i.addEventListener("change",t=>{this.handleItemSelectionChange(e.id,t.target.checked)}),i.disabled=this.disabled,s.style.textOverflow="inherit",s.style.padding="12px",s.appendChild(i);var s=t.insertCell(),l=document.createElement("a"),s=(l.href="#",l.textContent=e.name,l.title=e.name,l.style.color="black",l.addEventListener("click",t=>{t.preventDefault(),i.checked=!i.checked;t=new Event("change");i.dispatchEvent(t)}),s.style.padding="12px",s.style.paddingLeft="5px",s.appendChild(l),t.insertCell());s.textContent=e.count,s.style.textAlign="right",s.style.padding="12px"}))}handleItemSelectionChange(t,e){e?this.selectedIds.add(t):this.selectedIds.delete(t),this.updateSelectAllCheckboxState(),this.notifySelectionChange()}handleSelectAllChange(s){this.selectedIds.clear(),s&&this.data.forEach(t=>this.selectedIds.add(t.id)),this.itemRowMap.forEach((t,e)=>{t=t.querySelector('input[type="checkbox"]');t&&(t.checked=s)}),this.notifySelectionChange()}handleSortClick(t){this.sortColumn===t?this.sortDirection="asc"===this.sortDirection?"desc":"asc":(this.sortColumn=t,this.sortDirection="asc"),this.renderRows()}handleFilterInput(){var t=this.filterInput.value.trim();this.filterText!==t&&(this.filterText=t,this.debounceTimer&&clearTimeout(this.debounceTimer),this.debounceTimer=setTimeout(()=>{this.renderRows()},50))}handleShowAllClick(){"all"!==this.displayMode&&(this.displayMode="all",this.updateDisplayButtonStyles(),this.renderRows())}handleShowSelectedClick(){"selected"!==this.displayMode&&(this.displayMode="selected",this.updateDisplayButtonStyles(),this.renderRows())}updateSelectAllCheckboxState(){var t,e,s=this.thead.querySelector("#filter-table-select-all");s&&(t=this.data.length,e=this.selectedIds.size,s.checked=0<t&&t===e,s.disabled=0===t)}notifySelectionChange(){"function"==typeof this.onSelectionChange&&this.onSelectionChange(Array.from(this.selectedIds))}updateData(t){this.data=t,this.filterText="",this.displayMode="all",this.selectedIds.clear(),this.render()}setSelectedIds(t){this.selectedIds=new Set(t),this.itemRowMap.forEach((t,e)=>{t=t.querySelector('input[type="checkbox"]');t&&(t.checked=this.selectedIds.has(e))}),this.updateSelectAllCheckboxState()}getSelectedIds(){return Array.from(this.selectedIds)}clearSelections(){this.selectedIds.clear(),this.itemRowMap.forEach(t=>{t=t.querySelector('input[type="checkbox"]');t&&(t.checked=!1)}),this.updateSelectAllCheckboxState(),this.notifySelectionChange()}reset(){this.clearSelections()}setDisabled(e){this.disabled=e,this.itemRowMap.forEach(t=>{t=t.querySelector('input[type="checkbox"]');t&&(t.disabled=e)});var t=this.thead.querySelector("#filter-table-select-all");t&&(t.disabled=e||0===this.data.length),this.filterInput&&(this.filterInput.disabled=e),this.resetButton&&(this.resetButton.disabled=e),this.updateDisplayButtonStyles(),e?this.table.classList.add("disabled"):this.table.classList.remove("disabled")}updateDisplayButtonStyles(){var t="gray";this.showAllButton&&(this.showAllButton.classList.toggle("active","all"===this.displayMode&&!this.showAllButton.disabled),this.showAllButton.style.color="all"!==this.displayMode||this.showAllButton.disabled?t:""),this.showSelectedButton&&(this.showSelectedButton.classList.toggle("active","selected"===this.displayMode&&!this.showSelectedButton.disabled),this.showSelectedButton.style.color="selected"!==this.displayMode||this.showSelectedButton.disabled?t:""),this.resetButton&&(this.resetButton.style.color=this.resetButton.disabled?t:"")}}module.exports={FilterTable:FilterTable};
