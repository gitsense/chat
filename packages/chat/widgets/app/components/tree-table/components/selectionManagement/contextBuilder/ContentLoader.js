/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

function createContentLoader({controls:p,chatApi:u,batchSize:h=25}){let g=[],m={"review::overview":null},f={},v=!1,y="file-content",w="imported",C={contentType:y,contentOption:w,totalItems:0,loadedCount:0,errorCount:0,totalBytes:0,totalTokens:0,startTime:null,endTime:null};function n(){p.updateStats(C)}function r(e){C={contentType:y,contentOption:w,totalItems:e,loadedCount:0,errorCount:0,totalBytes:0,totalTokens:0,startTime:new Date,endTime:null},n()}function b(e){"loaded"===e.status?(C.loadedCount++,C.totalBytes+=e.size||0,C.totalTokens+=e.tokenCount||0):"error"===e.status&&C.errorCount++,n()}function T(e,t){e={id:e.id,type:e.type,name:e.name,path:e.path||"path/to/"+e.name,meta:e.meta,error:t,status:"error",contentType:y};g.push(e),b(e)}return{loadContent:async function(i,c,t,l,d){if(i&&0!==i.length){var a=c.startsWith("review::")?c.split("::").pop():c,o=t.startsWith("review::")?t.split("::").pop():t,a=(y=a,w=o,C.contentType=a.charAt(0).toUpperCase()+a.slice(1),C.contentOption=o.charAt(0).toUpperCase()+o.slice(1),i.map(e=>e.id));let e=c+`::${t}::`+a.join(",");if(m[e])r((g=m[e]).length),g.forEach(e=>b(e)),n(),"function"==typeof l&&l(g);else{r(i.length),g=[],v=!0;let s=async t=>{if(v){var a=c.startsWith("review::"),o="file content"===c,n="overview"===c,r=i.slice(t,t+(a?1e3:h));if(0===r.length)C.endTime=new Date,v=!1,"function"==typeof l&&(m[e]=g,l(g));else{try{a?await(async e=>{try{if(u&&"function"==typeof u.getTinyChatOverviewPurpose){var t=e.map(e=>e.id);let h=await u.getTinyChatOverviewPurpose(t);e.forEach(n=>{let{id:e,uuid:t,meta:a}=n,{overview:o,repo:r}=h[e]||{};if(o){let{id:e,meta:t}=n;var{size:s,path:i,name:c,language:l,highlight:d,commit:p}=t||{};let{overview:a,repo:o=null}=h[e]||{};console.log(a),n.repo=o,f[e]=a.purpose;c={id:e,chat_id:a.chat_id,purpose:a.purpose,keywords:a.keywords,name:c,repo:o,path:i,size:s,chat:a.chat_uuid,language:l,highlight:d,tokenCount:n.meta?.tokens?.content?.estimate||0,commit:p,type:n.type,metadata:{created:n.created_at,updated:n.updated_at},status:"loaded",contentType:y,contentOption:w};g.push(c),b(c)}else T(n,o?.error||"Failed to load review overview")})}else console.warn("chatApi or getTinyChatOverviewPurpose not available for review batch processing.")}catch(t){console.error("Error processing review batch:",t),e.forEach(e=>{T(e,t.message||"Failed to load file batch")})}return Promise.resolve()})(r):o?await(async e=>{try{if(u&&"function"==typeof u.getGitBlobChatMessagesByChatIds){var t=e.map(e=>e.id),a="working directory"===w;let h=await u.getGitBlobChatMessagesByChatIds(t,a);e.forEach(e=>{var t,a,o,n,r,s,i,c,l=e.id,{message:d=null,repo:p=null}=h[l]||{};d.content?({size:t,path:a,name:o,language:n,highlight:r,commit:s,type:i,tokens:c}=d.meta||{},l={id:l,purpose:f[l],chatId:d.chat_id,parentId:d.parent_id,messageId:d.id,messageUpdatedAt:d.updated_at,name:o,repo:p,path:a,size:t,language:n,highlight:r,content:d.content,tokenCount:c?.content?.estimate||0,type:i,metadata:{created:e.created_at,updated:e.updated_at},status:"loaded",contentType:y,contentOption:w},g.push(l),b(l)):T(e,d?.error||"Failed to load file content")})}else console.warn("chatApi or getGitBlobChatMessagesByChatIds not available for file batch processing.")}catch(t){console.error("Error processing file batch:",t),e.forEach(e=>{T(e,t.message||"Failed to load file batch")})}return Promise.resolve()})(r):n&&await(async e=>{try{if(u&&"function"==typeof u.getChatOverviewMessagesByChatIds){var t=e.map(e=>e.id);let r=await u.getChatOverviewMessagesByChatIds(t,w);e.forEach((e,t)=>{var a=e.id,{message:o=null,repo:n=null}=r[a]||{},a={id:a,name:e.name,repo:n||"N/A",path:e.path||"path/to/"+e.name,size:e.size||o.content.length,chatId:o.chat_id,parentId:o.parent_id,messageUpdatedAt:o.updated_at,language:"markdown",highlight:"md",content:o.content,tokenCount:o.meta?.tokens?.analysis?.[o.type]?.estimate||0,type:e.type,metadata:{created:e.created_at,updated:e.updated_at},status:"loaded",contentType:y,contentOption:w};g.push(a),b(a)}),"function"==typeof onProgress&&onProgress(C.loadedCount,C.totalItems)}else console.warn("chatApi or getChatOverviewMessagesByChatIds not available for overview batch processing.")}catch(t){console.error("Error processing overview batch:",t),e.forEach(e=>T(e,t.message||"Failed to load overview batch"))}return Promise.resolve()})(r)}catch(t){console.error("[ContentLoader.js::loadContent::processBatch] Error processing batch:",t),console.error(`Error processing ${c} batch:`,t),r.forEach(e=>{T(e,t.message||`Failed to load ${c} batch`)}),v=!1}let e=t+r.length;a=Math.min(100,Math.floor(e/i.length*100));p.progress.set(a),"function"==typeof d&&d(C.loadedCount,C.totalItems),v&&setTimeout(()=>s(e),50)}}};s(0)}}else console.warn("No items provided to context builder for type: "+c)},getLoadedItems:function(){return g},stopLoading:function(){v=!1},getStats:function(){return C},getCachedItems:function(e,t){return m[e+"::"+t]||null}}}module.exports={createContentLoader:createContentLoader};
