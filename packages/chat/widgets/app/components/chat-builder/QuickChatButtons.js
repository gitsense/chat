/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let ChatUtils=require("@gitsense/gsc-utils").ChatUtils,{h,newChatTree,setChat,updateChats,getAnalyzeChatMenuOptions,getAnalyzers,deleteAnalyzer}=require("./Dependencies"),AnalyzersModal=require("./modals/AnalyzersModal"),NewChatModal=require("./modals/NewChatModal"),quickChatButtonStyles=require("./styles/quickChatButtons"),EditChatsTreeModal=require("./modals/EditChatsTreeModal"),{handleAddContextMessage,handleAddSearchMessage,handleCreateNewNewAnalyzerChat,handleCreateNewAnalyzeChat,handleCreateNewAnalyzeDataChat,handleCreateNewCodeChat,handleCreateNewContextChat,handleCreateNewContextBuilderAskAiChat,handleCreateNewDraftChat,handleCreateNewFixPatchChat,handleCreateNewDemosChat,handleCreateNewHelpChat,handleCreateNewNotesChat,handleCreateNewPlanChat,handleCreateNewSearchChat,handleCreateNewChatTree}=require("./handlers/newChatHandler");function QuickChatButtons(e,b,t={}){let{widget:z,chat:M,rootChat:A,inSideBySide:L,settings:D}=b,{design:n="default"}=t,o={color:"black",fontWeight:"normal",minWidth:"calc(25% - 8px)",maxWidth:"calc(25% - 8px)"},l={display:"inline-block",color:"black",padding:"8px 15px",border:"1px solid #ccc",borderRadius:"20px",cursor:"pointer",textDecoration:"none",minWidth:"100px",marginRight:"12px"},S=null,v=null,G=null,E=null,q=null,B=null,O=null,R=null,U=null,F=null,H=null,I=null,P=null,W=null,_=null,$=null,Q=null,X=null,Y=null;var a,t="quick-chat-buttons-styles";document.getElementById(t)||((a=document.createElement("style")).id=t,a.textContent=quickChatButtonStyles.quickOptionsMenu,document.head.appendChild(a));let j=document.createElement("div"),J=(j.className="quick-options-menu",j.innerHTML=`
        <ul>
            <li><button class="new-message-option">New message</button></li>
            <li><button class="new-chat-option">New Chat</button></li>
        </ul>
    `,document.body.appendChild(j),null);function K(e,t={}){let a=h.createButton({html:e,cls:"btn btn-outline",style:"pill"===n?{...l,...t}:{...o,...t}});return a.onmouseover=()=>{a.style.color="white"},a.onmouseout=()=>{a.style.color="black"},a}function V(){j.classList.remove("visible"),document.removeEventListener("click",Z),J=null}function Z(e){j.contains(e.target)||e.target.closest(".btn-outline")||V()}function ee(t,a){let n=new NewChatModal(t,M,D.prompts,D.models,b,{includeGitSenseNotes:!1,nodes:a.params?.nodes,contentType:a.params?.contentType,contentOption:a.params?.contentOption,fakeLLMs:"draft"===t?D.fakeLLMs:null,useDefault:null==a.params?.useDefault||a.params.useDefault,defaultModel:M?M.main_model:null,name:a.params?.name,model:a.params?.model,parser:a.params?.parser,output:a.params?.output,goLabel:a.params?.goLabel,uniqueAnalyzerId:a.params?.uniqueAnalyzerId,batchSize:a.params?.batchSize,autoSave:a.params?.autoSave,showExtractedMetadata:a.params?.showExtractedMetadata,contextLoadingTitle:a.params?.contextLoadingTitle,contextLoadedTitle:a.params?.contextLoadedTitle,treeType:a.params?.treeType},{onGo:async e=>{"analyze"===t?handleCreateNewAnalyzeChat(a,e,b,e=>{n.destroy(),a.params?.onDone&&"function"==typeof a.params.onDone?a.params.onDone(e):setTimeout(()=>{setChat(e,L)},25)}):"context-builder-ask-ai"===t?handleCreateNewContextBuilderAskAiChat(a,e,b,e=>{n.destroy(),setTimeout(()=>{setChat(e,L)},25)}):"code"===t?handleCreateNewCodeChat(a,e,b,e=>{n.destroy(),a.onDone&&a.onDone(),setTimeout(()=>{setChat(e,L)},25)}):"context"===t?handleCreateNewContextChat(a,e,b,e=>{n.destroy(),a.onDone&&a.onDone(),setTimeout(()=>{setChat(e,L)},25)}):"draft"===t?handleCreateNewDraftChat(a,e,b,e=>{n.destroy(),setTimeout(()=>{setChat(e,L)},25)}):"help"===t?handleCreateNewHelpChat(a,e,b,e=>{n.destroy(),setTimeout(()=>{setChat(e,L)},25)}):"fix-patch"===t?console.error("Fix-patch handler not centralized yet."):"new-analyzer"===t?handleCreateNewNewAnalyzerChat(a,e,b,e=>{n.destroy(),a.params?.onDone&&"function"==typeof a.params.onDone?a.params.onDone(e):setTimeout(()=>{setChat(e,L)},25)}):"notes"===t?handleCreateNewNotesChat(a,e,b,e=>{n.destroy(),setTimeout(()=>{setChat(e,L)},25)}):"plan"===t?handleCreateNewPlanChat(a,e,b,e=>{n.destroy(),setTimeout(()=>{setChat(e,L)},25)}):"search"===t?handleCreateNewSearchChat(a,e,b,e=>{n.destroy(),setTimeout(()=>{setChat(e,L)},25)}):"tree"===t?handleCreateNewChatTree(a,e,b,e=>{n.destroy(),a.onSuccess&&"function"==typeof a.onSuccess&&a.onSuccess(),setTimeout(()=>{setChat(e,L)},25)}):console.error(`Unknown chat type "${t}" for modal handler.`)}});n.render()}this.render=T=>{e.forEach(t=>{var n,e,a,o,r,l,s,d,i,c,h,p,C,u,y=t.type;if("analyze"===y.toLowerCase())(async(e,l)=>{S=K(l.label||"Analyze",l.style||{}),e.appendChild(S),S.onclick=async()=>{let t=l.params||{};var e=await getAnalyzeChatMenuOptions(b.widget);let a=null==D.defaultModelCanBeUsedForAnalyzing||D.defaultModelCanBeUsedForAnalyzing;var n=D.models.filter(e=>a||e.canBeUsedForAnalyzing?e:void 0);let o=new NewChatModal(l.type,M,D.prompts,n,b,{includeGitSenseNotes:!1,name:t.name,model:t.model,nodes:t.nodes,goLabel:t.goLabel,analyzeOptions:e,uniqueAnalyzerId:t.uniqueAnalyzerId,batchSize:t.batchSize,autoSave:t.autoSave,showExtractedMetadata:t.showExtractedMetadata,contentType:t.contentType,contentOption:t.contentOption,contextLoadingTitle:t.contextLoadingTitle,contextLoadedTitle:t.contextLoadedTitle,goOnReady:t.goOnReady},{onGo:async e=>{handleCreateNewAnalyzeChat(l,e,b,e=>{o.destroy(),t.onDone&&"function"==typeof t.onDone?t.onDone(e):setTimeout(()=>{setChat(e,L)},25)})}});o.render()}})(T,t);else if("analyze-data"===y.toLowerCase())(async(e,a)=>{v=K(a.label||"Analyze Data",a.style||{}),e.appendChild(v),v.onclick=async()=>{let t=new NewChatModal("analyze-data",M,D.prompts,D.models,b,{includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewAnalyzeDataChat(a,e,b,e=>{t.destroy(),a.onDone&&a.onDone(),setTimeout(()=>{setChat(e,L)},25)})}});t.render()}})(T,t);else if("code"===y.toLowerCase())C=T,u=t,E=K(u.label||"Code",u.style||{}),C.appendChild(E),E.onclick=()=>{let t=new NewChatModal("code",M,D.prompts,D.models,b,{includeGitSenseNotes:!1,nodes:u.params?.nodes,contentType:u.params?.contentType,contentOption:u.params?.contentOption},{onGo:async e=>{handleCreateNewCodeChat(u,e,b,e=>{t.destroy(),u.onDone&&u.onDone(),setTimeout(()=>{setChat(e,L)},25)})}});t.render()};else if("condense"===y.toLowerCase())C=T,p=t,q=K(p.label||"Condense",p.style||{}),C.appendChild(q),q.onclick=()=>{handleCreateNewCondense(p,b,e=>{p.onNewMessage&&p.onNewMessage(e)})};else if("context"===y.toLowerCase())c=T,h=t,B=K(h.label||"Context",h.style||{}),c.appendChild(B),h.newChat?B.onclick=()=>{let t=new NewChatModal("context",M,D.prompts,D.models,b,{includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewContextChat(h,e,b,e=>{t.destroy(),h.onDone&&h.onDone(),setTimeout(()=>{setChat(e,L)},25)})}});t.render()}:B.onclick=()=>{handleAddContextMessage(h,b,e=>{h.onNewMessage&&h.onNewMessage(e)})};else if("context-builder-ask-ai"===y.toLowerCase())c=T,i=t,G=K(i.label||"Context Builder - Ask AI",i.style||{}),c.appendChild(G),G.onclick=()=>{let t=new NewChatModal("context-builder-ask-ai",M,D.prompts,D.models,b,{includeGitSenseNotes:!1,context:i.params?.context},{onGo:async e=>{handleCreateNewContextBuilderAskAiChat(i,e,b,e=>{t.destroy(),setTimeout(()=>{setChat(e,L)},25)})}});t.render()};else if("draft"===y.toLowerCase())s=T,d=t,O=K(d.label||"Draft",d.style||{}),s.appendChild(O),O.onclick=()=>ee("draft",d);else if("edit"===y.toLowerCase())s=T,l=t,R=K(l.label||"Edit",l.style||{}),s.appendChild(R),R.onclick=()=>{let t=new EditChatsTreeModal(z,M,A,async e=>{await updateChats(z,e),t.destroy(),window.location.reload()});t.render()};else if("fix-patch"===y.toLowerCase())l=T,r=t,U=K(r.label||"Fix Patch",r.style||{}),l.appendChild(U),U.onclick=()=>{var e=[{type:"system",name:M.prompt}];let s=new NewChatModal("fix-patch",M,e,D.models,b,{includeGitSenseNotes:!1},{onGo:async e=>{var t=e.model,a=(r.params||{}).messageId;if(!a)throw new Error("No message id provided");var n=ChatUtils.getChatMessages(M),o=[];for(let e=1;e<n.length;e++){var l={...n[e]};if("assistant"===l.role&&(l.model=t,l.real_model)&&(l.real_model=t),o.push(l),l.id===a)break}e.messages=o,handleCreateNewFixPatchChat(r,e,b,e=>{s.destroy(),setTimeout(()=>{setChat(e,L)},25)})}});s.render()};else if("help"===y.toLowerCase()){var m=T;var w=t;F=K(w.label||"Help",w.style||{}),m.appendChild(F),w.params?w.params.treeType="Help":w.params={treeType:"Help"},F.onclick=e=>{e.preventDefault(),ee("help",w)}}else if("demos"===y.toLowerCase())m=T,o=t,H=K(o.label||"GitSense Chat Demos",o.style||{}),m.appendChild(H),H.onclick=()=>{let t=new NewChatModal("demos",M,D.prompts,D.models,b,{includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewDemosChat(o,e,b,e=>{t.destroy(),o.onDone&&o.onDone(),setTimeout(()=>{setChat(e,L)},25)})}});t.render()};else if("new-analyzer"===y.toLowerCase())(async(e,n)=>{I=K(n.label||"New Analyzer",n.style||{}),e.appendChild(I),I.onclick=async()=>{let t=n.params||{},a=new NewChatModal(n.type,M,D.prompts,D.models,b,{includeGitSenseNotes:!1,name:t.name,goOnReady:t.goOnReady},{onGo:async e=>{handleCreateNewNewAnalyzerChat(n,e,b,e=>{a.destroy(),t.onDone&&"function"==typeof t.onDone?t.onDone(e):setTimeout(()=>{setChat(e,L)},25)})}});a.render()}})(T,t);else if("analyzers"===y.toLowerCase())(async(e,t)=>{P=K(t.label||"Analyzers",t.style||{}),e.appendChild(P),P.onclick=async()=>{var e=await getAnalyzers(b.widget);let n=new AnalyzersModal(e,b,D.prompts,D.models,{onClose:()=>{n.destroy()},onNewAnalyzer:()=>{n.destroy(),ee("new-analyzer",{type:"new-analyzer"})},onDeleteAnalyzer:async e=>{try{var t=await deleteAnalyzer(b.widget,e),a=await getAnalyzers(b.widget);n.updateAnalyzers(a),t.success||n.updateErrorMessage(t.error)}catch(e){n.updateErrorMessage(e.message||e)}}});n.render()}})(T,t);else if("notes"===y.toLowerCase()){var N=T;var f=t;W=K(f.label||"Notes",f.style||{}),N.appendChild(W);let e=[{name:"GitSense Notes",default:!0}];W.onclick=()=>{let t=new NewChatModal("notes",M,D.prompts,e,b,{showRelations:!!M,fakeLLMs:0,useDefault:!0,includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewNotesChat(f,e,b,e=>{t.destroy(),setTimeout(()=>{setChat(e,L)},25)})}});t.render()}}else if("plan"===y.toLowerCase())N=T,a=t,_=K(a.label||"Plan",a.style||{}),N.appendChild(_),_.onclick=()=>{ee("plan",a)};else if("repos"===y.toLowerCase())e=T,g=t,Q=K(g.label||"Repositories",g.style||{}),e.appendChild(Q),Q.onclick=()=>{setChat({uuid:"repositories",main_model:"GitSense Notes"})};else if("task"===y.toLowerCase()){var g=T;var k=t;X=K(k.label||"Task",k.style||{}),k.params?k.params.treeType="Task":k.params={treeType:"Task"},g.appendChild(X),X.onclick=()=>{ee("tree",k)}}else if("search"===y.toLowerCase())e=T,n=t,$=K(n.label||"Ask or Search",n.style||{}),e.appendChild($),$.onclick=()=>{var e,a,t;M?(e=$,a=n,J=a,e=e.getBoundingClientRect(),j.style.top=e.bottom+window.scrollY+5+"px",j.style.left=e.left+window.scrollX+"px",j.classList.add("visible"),e=j.querySelector(".new-message-option"),t=j.querySelector(".new-chat-option"),e.replaceWith(e.cloneNode(!0)),t.replaceWith(t.cloneNode(!0)),e=j.querySelector(".new-message-option"),t=j.querySelector(".new-chat-option"),e.addEventListener("click",()=>{V();var e=a.type;let t=a.onNewMessage&&"function"==typeof a.onNewMessage?a.onNewMessage:null;if("context"===e)handleAddContextMessage(a,b,e=>{t&&t(e)});else{if("search"!==e)throw new Error("Unsupported new message option for type "+e);handleAddSearchMessage(a,b,e=>{t&&t(e)})}}),t.addEventListener("click",()=>{V(),ee(a.type,a)}),setTimeout(()=>{document.addEventListener("click",Z)},0)):ee(n.type,n)};else{if("organize"!==y.toLowerCase())throw new Error(`Unrecognized button type "${y}"`);var y=T,x=t,t="Organize";Y=K(x.label||"Organize",x.style||{}),y.appendChild(Y),x.params?x.params.treeType=t:x.params={treeType:t},Y.onclick=()=>{ee("tree",x)}}})},this.click=(e,t)=>{e=e.type;if("analyze"===e)S.click(t);else if("context-builder-ask-ai"===e)G.click(t);else if("code"===e)E.click(t);else if("fix-patch"===e)U.click(t);else if("help"===e)F.click(t);else if("demos"===e)H.click(t);else{if("plan"!==e)throw new Error(`Clicking ${e} button not supported yet.`);_.click(t)}},this.update=e=>{b.chat=e}}module.exports=QuickChatButtons;
