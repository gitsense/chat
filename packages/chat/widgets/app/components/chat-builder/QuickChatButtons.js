/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let ChatUtils=require("@gitsense/gsc-utils").ChatUtils,{h,newChatTree,setChat,updateChats,getAnalyzeChatMenuOptions,getAnalyzers,deleteAnalyzer}=require("./Dependencies"),AnalyzersModal=require("./modals/AnalyzersModal"),NewChatModal=require("./modals/NewChatModal"),quickChatButtonStyles=require("./styles/quickChatButtons"),EditChatsTreeModal=require("./modals/EditChatsTreeModal"),{handleAddManageContextMessage,handleAddMetadataInsightsMessage,handleAddSearchMessage,handleCreateNewNewAnalyzerChat,handleCreateNewAnalyzeChat,handleCreateNewAnalyzeDataChat,handleCreateNewCodeChat,handleCreateNewMetadataInsightsChat,handleCreateNewContextBuilderAskAiChat,handleCreateNewDraftChat,handleCreateNewFixPatchChat,handleCreateNewDemosChat,handleCreateNewHelpChat,handleCreateNewNotesChat,handleCreateNewPlanChat,handleCreateNewSearchChat,handleCreateNewChatTree}=require("./handlers/newChatHandler");function QuickChatButtons(e,x,t={}){let{widget:L,chat:A,rootChat:D,inSideBySide:v,settings:S}=x,{design:r="default"}=t,d={color:"black",fontWeight:"normal",minWidth:"calc(25% - 8px)",maxWidth:"calc(25% - 8px)"},i={display:"inline-block",color:"black",padding:"8px 15px",border:"1px solid #ccc",borderRadius:"20px",cursor:"pointer",textDecoration:"none",minWidth:"100px",marginRight:"12px"},E=null,G=null,q=null,B=null,O=null,I=null,R=null,U=null,F=null,H=null,P=null,W=null,_=null,$=null,Q=null,X=null,Y=null,j=null,J=null,K=null;var a,t="quick-chat-buttons-styles";document.getElementById(t)||((a=document.createElement("style")).id=t,a.textContent=quickChatButtonStyles.quickOptionsMenu,document.head.appendChild(a));let n=document.createElement("div"),o=(n.className="quick-options-menu",n.innerHTML=`
        <ul>
            <li><button class="new-message-option">New message</button></li>
            <li><button class="new-chat-option">New Chat</button></li>
        </ul>
    `,document.body.appendChild(n),null);function V(e,t={}){let a=h.createButton({html:e,cls:"btn btn-outline",style:"pill"===r?{...i,...t}:{...d,...t}});return a.onmouseover=()=>{a.style.color="white"},a.onmouseout=()=>{a.style.color="black"},a}function Z(e,a){o=a;var e=e.getBoundingClientRect(),e=(n.style.top=e.bottom+window.scrollY+5+"px",n.style.left=e.left+window.scrollX+"px",n.classList.add("visible"),n.querySelector(".new-message-option")),t=n.querySelector(".new-chat-option"),e=(e.replaceWith(e.cloneNode(!0)),t.replaceWith(t.cloneNode(!0)),n.querySelector(".new-message-option")),t=n.querySelector(".new-chat-option");e.addEventListener("click",()=>{l();var e=a.type;let t=a.onNewMessage&&"function"==typeof a.onNewMessage?a.onNewMessage:null;if("metadata-insights"===e)handleAddMetadataInsightsMessage(a,x,e=>{t&&t(e)});else{if("search"!==e)throw new Error("Unsupported new message option for type "+e);handleAddSearchMessage(a,x,e=>{t&&t(e)})}}),t.addEventListener("click",()=>{l(),ee(a.type,a)}),setTimeout(()=>{document.addEventListener("click",s)},0)}function l(){n.classList.remove("visible"),document.removeEventListener("click",s),o=null}function s(e){n.contains(e.target)||e.target.closest(".btn-outline")||l()}function ee(t,a){let n=new NewChatModal(t,A,S.prompts,S.models,x,{includeGitSenseNotes:!1,nodes:a.params?.nodes,contentType:a.params?.contentType,contentOption:a.params?.contentOption,fakeLLMs:"draft"===t?S.fakeLLMs:null,useDefault:null==a.params?.useDefault||a.params.useDefault,defaultModel:A?A.main_model:null,name:a.params?.name,model:a.params?.model,parser:a.params?.parser,output:a.params?.output,goLabel:a.params?.goLabel,analyzerId:a.params?.analyzerId,batchSize:a.params?.batchSize,autoSave:a.params?.autoSave,showExtractedMetadata:a.params?.showExtractedMetadata,contextLoadingTitle:a.params?.contextLoadingTitle,contextLoadedTitle:a.params?.contextLoadedTitle,treeType:a.params?.treeType},{onGo:async e=>{"analyze"===t?handleCreateNewAnalyzeChat(a,e,x,e=>{n.destroy(),a.params?.onDone&&"function"==typeof a.params.onDone?a.params.onDone(e):setTimeout(()=>{setChat(e,v)},25)}):"context-builder-ask-ai"===t?handleCreateNewContextBuilderAskAiChat(a,e,x,e=>{n.destroy(),setTimeout(()=>{setChat(e,v)},25)}):"code"===t?handleCreateNewCodeChat(a,e,x,e=>{n.destroy(),a.onDone&&a.onDone(),setTimeout(()=>{setChat(e,v)},25)}):"metadata-insights"===t?handleCreateNewMetadataInsightsChat(a,e,x,e=>{n.destroy(),a.onDone&&a.onDone(),setTimeout(()=>{setChat(e,v)},25)}):"draft"===t?handleCreateNewDraftChat(a,e,x,e=>{n.destroy(),setTimeout(()=>{setChat(e,v)},25)}):"help"===t?handleCreateNewHelpChat(a,e,x,e=>{n.destroy(),setTimeout(()=>{setChat(e,v)},25)}):"fix-patch"===t?console.error("Fix-patch handler not centralized yet."):"new-analyzer"===t?handleCreateNewNewAnalyzerChat(a,e,x,e=>{n.destroy(),a.params?.onDone&&"function"==typeof a.params.onDone?a.params.onDone(e):setTimeout(()=>{setChat(e,v)},25)}):"notes"===t?handleCreateNewNotesChat(a,e,x,e=>{n.destroy(),setTimeout(()=>{setChat(e,v)},25)}):"plan"===t?handleCreateNewPlanChat(a,e,x,e=>{n.destroy(),setTimeout(()=>{setChat(e,v)},25)}):"search"===t?handleCreateNewSearchChat(a,e,x,e=>{n.destroy(),setTimeout(()=>{setChat(e,v)},25)}):"tree"===t?handleCreateNewChatTree(a,e,x,e=>{n.destroy(),a.onSuccess&&"function"==typeof a.onSuccess&&a.onSuccess(),setTimeout(()=>{setChat(e,v)},25)}):console.error(`Unknown chat type "${t}" for modal handler.`)}});n.render()}this.render=T=>{e.forEach(t=>{var e,a,n,o,l,r,s,d,i,c,h,p,C,u,y,m=t.type;if("analyze"===m.toLowerCase())(async(e,l)=>{E=V(l.label||"Analyze",l.style||{}),e.appendChild(E),E.onclick=async()=>{let t=l.params||{};var e=await getAnalyzeChatMenuOptions(x.widget);let a=null==S.defaultModelCanBeUsedForAnalyzing||S.defaultModelCanBeUsedForAnalyzing;var n=S.models.filter(e=>a||e.canBeUsedForAnalyzing?e:void 0);let o=new NewChatModal(l.type,A,S.prompts,n,x,{includeGitSenseNotes:!1,name:t.name,model:t.model,nodes:t.nodes,goLabel:t.goLabel,analyzeOptions:e,analyzerId:t.analyzerId,batchSize:t.batchSize,autoSave:t.autoSave,showExtractedMetadata:t.showExtractedMetadata,contentType:t.contentType,contentOption:t.contentOption,contextLoadingTitle:t.contextLoadingTitle,contextLoadedTitle:t.contextLoadedTitle,goOnReady:t.goOnReady},{onGo:async e=>{handleCreateNewAnalyzeChat(l,e,x,e=>{o.destroy(),t.onDone&&"function"==typeof t.onDone?t.onDone(e):setTimeout(()=>{setChat(e,v)},25)})}});o.render()}})(T,t);else if("analyze-data"===m.toLowerCase())(async(e,a)=>{G=V(a.label||"Analyze Data",a.style||{}),e.appendChild(G),G.onclick=async()=>{let t=new NewChatModal("analyze-data",A,S.prompts,S.models,x,{includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewAnalyzeDataChat(a,e,x,e=>{t.destroy(),a.onDone&&a.onDone(),setTimeout(()=>{setChat(e,v)},25)})}});t.render()}})(T,t);else if("analyzers"===m.toLowerCase())(async(e,t)=>{q=V(t.label||"Analyzers",t.style||{}),e.appendChild(q),q.onclick=async()=>{var e=await getAnalyzers(x.widget);let n=new AnalyzersModal(e,x,S.prompts,S.models,{onClose:()=>{n.destroy()},onNewAnalyzer:()=>{n.destroy(),ee("new-analyzer",{type:"new-analyzer"})},onDeleteAnalyzer:async e=>{try{var t=await deleteAnalyzer(x.widget,e),a=await getAnalyzers(x.widget);n.updateAnalyzers(a),t.success||n.updateErrorMessage(t.error)}catch(e){n.updateErrorMessage(e.message||e)}}});n.render()}})(T,t);else if("code"===m.toLowerCase())u=T,y=t,O=V(y.label||"Code",y.style||{}),u.appendChild(O),O.onclick=()=>{let t=new NewChatModal("code",A,S.prompts,S.models,x,{includeGitSenseNotes:!1,nodes:y.params?.nodes,contentType:y.params?.contentType,contentOption:y.params?.contentOption},{onGo:async e=>{handleCreateNewCodeChat(y,e,x,e=>{t.destroy(),y.onDone&&y.onDone(),setTimeout(()=>{setChat(e,v)},25)})}});t.render()};else if("condense"===m.toLowerCase())u=T,C=t,I=V(C.label||"Condense",C.style||{}),u.appendChild(I),I.onclick=()=>{handleCreateNewCondense(C,x,e=>{C.onNewMessage&&C.onNewMessage(e)})};else if("context-builder-ask-ai"===m.toLowerCase())h=T,p=t,B=V(p.label||"Context Builder - Ask AI",p.style||{}),h.appendChild(B),B.onclick=()=>{let t=new NewChatModal("context-builder-ask-ai",A,S.prompts,S.models,x,{includeGitSenseNotes:!1,context:p.params?.context},{onGo:async e=>{handleCreateNewContextBuilderAskAiChat(p,e,x,e=>{t.destroy(),setTimeout(()=>{setChat(e,v)},25)})}});t.render()};else if("demos"===m.toLowerCase())h=T,c=t,R=V(c.label||"GitSense Chat Demos",c.style||{}),h.appendChild(R),R.onclick=()=>{let t=new NewChatModal("demos",A,S.prompts,S.models,x,{includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewDemosChat(c,e,x,e=>{t.destroy(),c.onDone&&c.onDone(),setTimeout(()=>{setChat(e,v)},25)})}});t.render()};else if("draft"===m.toLowerCase())d=T,i=t,U=V(i.label||"Draft",i.style||{}),d.appendChild(U),U.onclick=()=>ee("draft",i);else if("edit"===m.toLowerCase())d=T,s=t,F=V(s.label||"Edit",s.style||{}),d.appendChild(F),F.onclick=()=>{let t=new EditChatsTreeModal(L,A,D,async e=>{await updateChats(L,e),t.destroy(),window.location.reload()});t.render()};else if("fix-patch"===m.toLowerCase())s=T,r=t,H=V(r.label||"Fix Patch",r.style||{}),s.appendChild(H),H.onclick=()=>{var e=[{type:"system",name:A.prompt}];let s=new NewChatModal("fix-patch",A,e,S.models,x,{includeGitSenseNotes:!1},{onGo:async e=>{var t=e.model,a=(r.params||{}).messageId;if(!a)throw new Error("No message id provided");var n=ChatUtils.getChatMessages(A),o=[];for(let e=1;e<n.length;e++){var l={...n[e]};if("assistant"===l.role&&(l.model=t,l.real_model)&&(l.real_model=t),o.push(l),l.id===a)break}e.messages=o,handleCreateNewFixPatchChat(r,e,x,e=>{s.destroy(),setTimeout(()=>{setChat(e,v)},25)})}});s.render()};else if("help"===m.toLowerCase()){var w=T;var g=t;P=V(g.label||"Help",g.style||{}),w.appendChild(P),g.params?g.params.treeType="Help":g.params={treeType:"Help"},P.onclick=e=>{e.preventDefault(),ee("help",g)}}else if("new-analyzer"===m.toLowerCase())(async(e,n)=>{W=V(n.label||"New Analyzer",n.style||{}),e.appendChild(W),W.onclick=async()=>{let t=n.params||{},a=new NewChatModal(n.type,A,S.prompts,S.models,x,{includeGitSenseNotes:!1,name:t.name,goOnReady:t.goOnReady},{onGo:async e=>{handleCreateNewNewAnalyzerChat(n,e,x,e=>{a.destroy(),t.onDone&&"function"==typeof t.onDone?t.onDone(e):setTimeout(()=>{setChat(e,v)},25)})}});a.render()}})(T,t);else if("manage-context"===m.toLowerCase())w=T,l=t,_=V(l.label||"Manage Context",l.style||{}),w.appendChild(_),_.onclick=()=>{handleAddManageContextMessage(l,x,e=>{l.onNewMessage&&l.onNewMessage(e)})};else if("metadata-insights"===m.toLowerCase())f=T,o=t,$=V(o.label||"Metadata Insights",o.style||{}),f.appendChild($),$.onclick=()=>{A?Z($,o):ee(o.type,o)};else if("notes"===m.toLowerCase()){var f=T;var N=t;Q=V(N.label||"Notes",N.style||{}),f.appendChild(Q);let e=[{name:"GitSense Notes",default:!0}];Q.onclick=()=>{let t=new NewChatModal("notes",A,S.prompts,e,x,{showRelations:!!A,fakeLLMs:0,useDefault:!0,includeGitSenseNotes:!1},{onGo:async e=>{handleCreateNewNotesChat(N,e,x,e=>{t.destroy(),setTimeout(()=>{setChat(e,v)},25)})}});t.render()}}else if("plan"===m.toLowerCase())a=T,n=t,X=V(n.label||"Plan",n.style||{}),a.appendChild(X),X.onclick=()=>{ee("plan",n)};else if("repos"===m.toLowerCase())a=T,k=t,j=V(k.label||"Repositories",k.style||{}),a.appendChild(j),j.onclick=()=>{setChat({uuid:"repositories",main_model:"GitSense Notes"})};else if("task"===m.toLowerCase()){var k=T;var M=t;J=V(M.label||"Task",M.style||{}),M.params?M.params.treeType="Task":M.params={treeType:"Task"},k.appendChild(J),J.onclick=()=>{ee("tree",M)}}else if("search"===m.toLowerCase())b=T,e=t,Y=V(e.label||"Ask or Search",e.style||{}),b.appendChild(Y),Y.onclick=()=>{A?Z(Y,e):ee(e.type,e)};else{if("organize"!==m.toLowerCase())throw new Error(`Unrecognized button type "${m}"`);var b=T,z=t,m="Organize";K=V(z.label||"Organize",z.style||{}),b.appendChild(K),z.params?z.params.treeType=m:z.params={treeType:m},K.onclick=()=>{ee("tree",z)}}})},this.click=(e,t)=>{e=e.type;if("analyze"===e)E.click(t);else if("context-builder-ask-ai"===e)B.click(t);else if("code"===e)O.click(t);else if("fix-patch"===e)H.click(t);else if("help"===e)P.click(t);else if("demos"===e)R.click(t);else{if("plan"!==e)throw new Error(`Clicking ${e} button not supported yet.`);X.click(t)}},this.update=e=>{x.chat=e}}module.exports=QuickChatButtons;
