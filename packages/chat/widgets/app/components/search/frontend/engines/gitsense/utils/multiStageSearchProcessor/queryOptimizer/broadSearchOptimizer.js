/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let{MessageUtils,CodeBlockUtils,GSToolBlockUtils}=require("@gitsense/gsc-utils"),{chatApi,StreamingService}=require("../../../../../Dependencies"),updateConfig=require("../../../../../utils/updateConfig").updateConfig,handleSearchError=require("../../searchUtils/errorHandler").handleSearchError,{SEARCH_FLOW_BLOCK,SEARCH_TYPE_TO_OPTIMIZATION_PROFILE}=require("../../../../../../common/gitsense/constants"),{QUERY_OPTIMIZATION,SEARCH_EXECUTION_ORCHESTRATION,COMPLETED}=require("../../../../../../common/gitsense/searchStates"),CHAT_NAME_PREFIX=require("../constants").CHAT_NAME_PREFIX,STATE_TYPE=QUERY_OPTIMIZATION;async function initiate(s,i,n,o,d,c){var e,{chat:l,widget:h}=o;if(c.type!==STATE_TYPE||null!==c.started_at||null!==c.finished_at)e="Invalid state for initiate: "+c.type,await handleSearchError(s,i,c,e,n,o,d);else{c.started_at=(new Date).toISOString(),await updateConfig(s,i,o),d.startStage(STATE_TYPE);try{var u=STATE_TYPE;let e=null,t=null;try{e=await fetchSystemPrompt(u,o,i.data.searchCriteria.query),t=await fetchUserInstructions(u,o)}catch(e){return void await handleSearchError(s,i,c,e.message||"Failed to fetch optimization prompts.",n,o,d)}var p=MessageUtils.getMessagesBeforeId(l.main_model,l.messages[0],s.id);let a=[];p.forEach(e=>{a.push({role:e.role,message:e.message})}),0<a.length&&"system"===a[0].role?a[0].message="<replace with system message>":a.unshift({role:"system",message:"<replace with system message>"}),a.push({role:"user",message:t}),a.push({role:"assistant",message:null});var g={parentId:l.id,name:`${CHAT_NAME_PREFIX} ${s.id} - State: `+c.type,systemMessageName:""+c.type,systemMessage:e,model:i.data.searchCriteria.aiAssistant,temperature:0,forkedFromMessageId:(0<p.length?p[p.length-1]:l.messages[0]).id,messages:a};let r=null;try{r=await chatApi.newChat(h,g)}catch(e){var m="Failed to create thinking chat for query optimization. "+e.message;return void await handleSearchError(s,i,c,m,n,o,d)}c.thinking_chat={id:r.id,uuid:r.uuid,method:"stream",created_at:(new Date).toISOString(),started_at:null,finished_at:null},await updateConfig(s,i,o),o.updateChat&&"function"==typeof o.updateChat?o.updateChat():console.warn("broadSearchOptimizer.initiate: Unable to update chat since it is not defined in the context")}catch(e){console.error("broadSearchOptimizer.initiate: Unhandled error:",e),await handleSearchError(s,i,c,e.message||"An unexpected error occurred during query optimization initiation.",n,o,d)}}}async function monitor(r,s,i,n,o,d){var a=n.widget;if(null===d.started_at||null!==d.finished_at)c=`State ${d.type} is currently not in progress`,await handleSearchError(r,s,d,c,i,n,o);else{let t=d.thinking_chat;if(t&&t.uuid)if(null!==t.finished_at)c=`Thinking chat instance for state ${d.type} is already finished`,await handleSearchError(r,s,d,c,i,n,o);else if("stream"!==t.method)c="Streaming is the only supported thinking chat method for the state "+d.type,await handleSearchError(r,s,d,c,i,n,o);else{let e=null;try{e=await chatApi.get(a,t.uuid)}catch(e){var c=`Failed to get thinking chat (${t.uuid}): `+e.message;return void await handleSearchError(r,s,d,c,i,n,o)}var a=e.messages[0],c=MessageUtils.getLastMessage(a);if(null!==c.message)console.warn("broadSearchOptimizer Monitor: Last thinking chat message is not null. Processing completed message."),await processCompletedOptimizationMessage(c,r,s,d,i,n,o);else try{var l=new StreamingService({widget:n.widget,settings:n.settings,chat:e,message:c,onMessage:function(e,t){o.updateStageProgress(d.type,`(Characters received: ${e.length})`)},onComplete:(e,t,a)=>processCompletedOptimizationMessage(e,r,s,d,i,n,o,t,a),onError:e=>{console.error("broadSearchOptimizer Streaming error:",e),t.finished_at=(new Date).toISOString(),t.error=e.message||"Streaming error",handleSearchError(r,s,d,t.error,i,n,o)}});t.started_at=(new Date).toISOString(),await updateConfig(r,s,n),l.startStreaming()}catch(e){t.finished_at=(new Date).toISOString();a="Streaming setup failed: "+(t.error=e).message;await handleSearchError(r,s,d,a,i,n,o)}}else c="No thinking chat UUID found for state "+d.type,await handleSearchError(r,s,d,c,i,n,o)}}async function processCompletedOptimizationMessage(a,r,s,i,n,o,d,e,t){i.thinking_chat.finished_at=i.finished_at=(new Date).toISOString();var c=d._getDuration(i.created_at,i.finished_at),l=CodeBlockUtils.extractCodeBlocks(a.message,{silent:!0}).blocks,h=l.filter(e=>e.type===SEARCH_FLOW_BLOCK),l=l.findIndex(e=>e.type===SEARCH_FLOW_BLOCK);if(1!==h.length)u={message:`LLM did not return exactly one '${SEARCH_FLOW_BLOCK}' block. Found ${h.length}.`,response:a.message},await handleSearchError(r,s,i,u,n,o,d);else{var u=h[0];let e;try{e=JSON.parse(u.content)}catch(e){var h=`Failed to parse '${SEARCH_FLOW_BLOCK}' block: `+e.message;return void await handleSearchError(r,s,i,h,n,o,d)}let t=null;if("search-queries"!==e.type)if("unanswerable"===e.type)a.message=CodeBlockUtils.deleteCodeBlockByIndex(a.message,l),d.completeStage(i.type,`(${c} seconds)`),t=d.renderFinalAnswer("### Unaswerable\n"+(e.reason||"The request is unanswerable."));else if("clarification-needed"===e.type)a.message=CodeBlockUtils.deleteCodeBlockByIndex(a.message,l),d.completeStage(i.type,`(${c} seconds)`),t=d.renderFinalAnswer("### Clarification Needed\nThe AI assistant responded with the following:\n"+`> ${e.reason||"The request is unanswerable."}
`);else if("answered"===e.type){a.message=CodeBlockUtils.deleteCodeBlockByIndex(a.message,l),d.completeStage(i.type,`(${c} seconds)`);u=""===a.message.trim()?"The LLM stated that the query can be answered, but provided none. "+(e.reason?`This was the reason given
>${e.reason}

`:"")+"Please review the links in the `Details` section above or follow the Chat instructions below to learn more.":a.message;t=d.renderFinalAnswer(`### Answer
`+u)}else{if("constructed-query"!==e.type)return h=`Unexpected '${SEARCH_FLOW_BLOCK}' type from optimization LLM: ${e.type}. Expected 'search-queries'.`,void await handleSearchError(r,s,i,h,n,o,d);a.message=CodeBlockUtils.deleteCodeBlockByIndex(a.message,l),d.completeStage(i.type,`(${c} seconds)`),t=d.renderFinalAnswer(`### Constructed Search Command

Here is the search command based on your request. You can copy and paste it into the chat input to execute it, or modify it as needed.

\`\`\`search-query
${e.data.query}
\`\`\``)}if(t)s.states.push({type:COMPLETED,created_at:(new Date).toISOString(),finished_at:(new Date).toISOString(),reason:e.type}),r.message=t+"\n\n"+r.message,await updateConfig(r,s,o),o.updateChat&&"function"==typeof o.updateChat?o.updateChat():console.warn("broadSearchOptimizer: Unable to update chat since it is not defined in the context");else if(e.data&&Array.isArray(e.data.queries)&&0!==e.data.queries.length){for(var p of e.data.queries)if("string"!=typeof p.type||"string"!=typeof p.query)return void await handleSearchError(r,s,i,"Invalid query object structure in 'data.queries'. Each object must have 'type' and 'query' string properties.",n,o,d);a.message=CodeBlockUtils.deleteCodeBlockByIndex(a.message,l);u=e.data.queries.map(e=>{var t;return e.query.match(/profile:/)||((t=SEARCH_TYPE_TO_OPTIMIZATION_PROFILE[e.type])?e.query=`profile:${t} `+e.query:console.warn(`broadSearchOptimizer: An unrecognized search type "${type}" was used`)),e}),h={type:SEARCH_EXECUTION_ORCHESTRATION,created_at:(new Date).toISOString(),started_at:null,finished_at:null,queries_to_execute:u,parent_thinking_chat_id:i.thinking_chat.id,parent_thinking_chat_uuid:i.thinking_chat.uuid,user_query:s.data.searchCriteria.query};s.states.push(h),await updateConfig(r,s,o),d.completeStage(i.type,`(${c} seconds)`),o.updateChat&&"function"==typeof o.updateChat?o.updateChat():console.warn("broadSearchOptimizer.processCompletedOptimizationMessage: Unable to update chat since it is not defined in the context")}else await handleSearchError(r,s,i,"Flow block type is 'search-queries' but 'data.queries' is missing, not an array, or empty.",n,o,d)}}async function fetchSystemPrompt(e,t,a){var r=t.widget,r=r.dataURL,s=new URLSearchParams,a=(s.set("action","generate-search-system-prompt"),s.set("instruction-set",e),s.set("user-query",a||""),t.chat?.id&&s.set("current-chat-id",t.chat.id),r+"?"+s.toString()),t=await fetch(a);if(!t.ok)throw console.error(`Failed to fetch system prompt for ${e}: HTTP status `+t.status),new Error("Unable to load system prompt.");r=await t.json();if("success"!==r.status)throw console.error(`Failed to get system prompt for ${e}: `+r.data),new Error("Unable to load system prompt.");return r.data}async function fetchUserInstructions(e,t){var t=t.widget,t=t.dataURL,a=new URLSearchParams,t=(a.set("action","get-search-user-instructions"),a.set("instruction-set",e),t+"?"+a.toString()),a=await fetch(t);if(!a.ok)throw console.error(`Failed to fetch user instructions for ${e}: HTTP status `+a.status),new Error("Unable to load user instructions.");t=await a.json();if("success"!==t.status)throw console.error(`Failed to get user instructions for ${e}: `+t.data),new Error("Unable to load user instructions.");return t.data.split("\n\n\n").pop()}module.exports={STATE_TYPE:STATE_TYPE,initiate:initiate,monitor:monitor};
