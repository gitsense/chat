/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let ChatUtils=require("@gitsense/gsc-utils").ChatUtils,chatApi=require("../../../../../../Dependencies").chatApi,updateConfig=require("../../../../../../utils/updateConfig").updateConfig,handleSearchError=require("../../../searchUtils/errorHandler").handleSearchError,CHAT_NAME_PREFIX=require("../../constants").CHAT_NAME_PREFIX,{RESULTS_REVIEW_ORCHESTRATION,ERROR}=require("../../../../../../../common/gitsense/searchStates"),{extractRawResultsData,identifyUniqueItems}=require("./dataExtraction"),{selectBatchForReview,formatReviewBatch,getTokenLimitForStage}=require("./batchSelection"),{fetchReviewUserInstructions,fetchReviewSystemPrompt}=require("./promptFetching"),transitionToNextReviewStage=require("./stateTransitions").transitionToNextReviewStage,STATE_TYPE=RESULTS_REVIEW_ORCHESTRATION;async function initiate(i,s,n,o,c){var h=o.widget,e=s.states||[],t=e.filter(e=>e.type===STATE_TYPE);let _=e[e.length-1];if(_.progressStage=STATE_TYPE+(1===t.length?"":t.length),_.type!==STATE_TYPE||null!==_.started_at||null!==_.finished_at)e="Invalid state for initiate: "+_.type,await handleSearchError(i,s,_,e,n,o,c);else try{_.started_at=(new Date).toISOString(),_.last_batch_promising_items=[],await updateConfig(i,s,o),c.startStage(_.progressStage);var l=_.user_query,d=_.final_queries,a=_.raw_results_chat_uuid,r=_.parent_thinking_chat_id,g=_.parent_thinking_chat_uuid;if(l&&Array.isArray(d)&&0!==d.length&&a&&g&&r){let e;try{e=await chatApi.get(h,a)}catch(e){var u=`Failed to get raw search results chat (${a}): `+(e?.message||e||"Unknown error");return void await handleSearchError(i,s,_,u,n,o,c)}var m=extractRawResultsData(e),w=identifyUniqueItems(m),p=(_.items_identified_for_review=w,d.some(e=>"meta-search"===e.type));if(p){_.current_review_stage="meta-search";var v,S=w.reduce((e,t)=>{t=JSON.stringify(t.extracted_metadata_fields||{});return e+Math.ceil(t.length/4)+100},0),f=getTokenLimitForStage("meta-search");if(f<S)return v=`The total size of meta-search results (${S} tokens) exceeds the configured limit (${f} tokens). Please adjust the search settings to increase the token limit for meta-search review.`,void await handleSearchError(i,s,_,v,n,o,c);_.items_processed_in_stage={message:[]}}else _.current_review_stage="tiny-overviews",_.current_batch_index=0,_.items_processed_in_stage={message:[]},_.total_tokens_processed_in_stage=0,_.total_batches_in_stage=0;var E=getTokenLimitForStage(_.current_review_stage),{batchItems:R,totalItemsInStage:T,batchTokenCount:y}=selectBatchForReview(_.items_identified_for_review,_.current_review_stage,_.items_processed_in_stage,E,m,_.last_batch_promising_items);if(0===R.length)await transitionToNextReviewStage(i,s,_,o,c);else{R.forEach(e=>{_.items_processed_in_stage[e.source_type].push(e.id)}),_.total_tokens_processed_in_stage+=y,_.total_batches_in_stage=0<R.length?Math.ceil(T/R.length):0;var A,k=formatReviewBatch(R,m);let r;try{r=await chatApi.get(h,g)}catch(e){var C=`Failed to get parent thinking chat (${g}): `+(e?.message||e||"Unknown error");return void await handleSearchError(i,s,_,C,n,o,c)}if(r){let e=null,t=null;try{var I=_.type+"-"+_.current_review_stage;e=await fetchReviewUserInstructions(I,o),t=await fetchReviewSystemPrompt(I,o,s,l,d)}catch(e){return void await handleSearchError(i,s,_,e.message||"Failed to fetch review prompts.",n,o,c)}var U=[],q=(U.push({role:"system",message:"<replace with system message>"}),U.push({role:"assistant",message:`## Search Results Review - Stage: ${_.current_review_stage}, Batch: ${_.current_batch_index+1}

`+k}),U.push({role:"user",message:e}),U.push({role:"assistant",message:null}),{parentId:r.id,name:`${CHAT_NAME_PREFIX} ${i.id} State: ${_.type}-${_.current_review_stage}-batch-`+(_.current_batch_index+1),systemMessageName:_.type+"-"+_.current_review_stage,systemMessage:t,model:s.data.searchCriteria.aiAssistant,temperature:0,forkedFromMessageId:r.messages[0].id,messages:U});let a;try{a=await chatApi.newChat(h,q)}catch(e){var x="Failed to create review thinking chat: "+(e?.message||e||"Unknown error");return void await handleSearchError(i,s,_,x,n,o,c)}_.thinking_chat={id:a.id,uuid:a.uuid,method:"stream",created_at:(new Date).toISOString(),started_at:null,finished_at:null},_.reviews||(_.reviews=[]),_.reviews.push(_.thinking_chat);var F=ChatUtils.getChatMessages(a).find(e=>e.message?.includes("## Search Results Review - Stage:"));F&&(_.formatted_results_message_id=F.id),await updateConfig(i,s,o),o.updateChat&&"function"==typeof o.updateChat?o.updateChat():console.warn("resultsReviewOrchestrator/initiate: Unable to update chat since it is not defined in the context")}else A=`No thinking chat with the UUID ${g} found`,await handleSearchError(i,s,_,A,n,o,c)}}else await handleSearchError(i,s,_,"Missing required data in review orchestration state object.",n,o,c)}catch(e){console.error("resultsReviewOrchestrator/initiate: Unhandled error:",e),await handleSearchError(i,s,_,e?.message||e||"An unexpected error occurred during review initiation.",n,o,c)}}module.exports={initiate:initiate};
