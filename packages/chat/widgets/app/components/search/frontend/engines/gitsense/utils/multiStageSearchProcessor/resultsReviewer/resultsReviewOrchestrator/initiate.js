/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let ChatUtils=require("@gitsense/gsc-utils").ChatUtils,chatApi=require("../../../../../../Dependencies").chatApi,updateConfig=require("../../../../../../utils/updateConfig").updateConfig,handleSearchError=require("../../../searchUtils/errorHandler").handleSearchError,CHAT_NAME_PREFIX=require("../../constants").CHAT_NAME_PREFIX,{RESULTS_REVIEW_ORCHESTRATION,ERROR}=require("../../../../../../../common/gitsense/searchStates"),{META_SEARCH_REVIEW_STAGE,META_INSIGHTS_REVIEW_STAGE}=require("./constants"),{extractRawResultsData,identifyUniqueItems}=require("./dataExtraction"),{selectBatchForReview,formatReviewBatch,getTokenLimitForStage}=require("./batchSelection"),{fetchReviewUserInstructions,fetchReviewSystemPrompt}=require("./promptFetching"),transitionToNextReviewStage=require("./stateTransitions").transitionToNextReviewStage,STATE_TYPE=RESULTS_REVIEW_ORCHESTRATION;async function initiate(s,n,o,_,c){var h=_.widget,e=n.states||[],t=e.filter(e=>e.type===STATE_TYPE);let g=e[e.length-1];if(g.progressStage=STATE_TYPE+(1===t.length?"":t.length),g.type!==STATE_TYPE||null!==g.started_at||null!==g.finished_at)e="Invalid state for initiate: "+g.type,await handleSearchError(s,n,g,e,o,_,c);else try{g.started_at=(new Date).toISOString(),g.last_batch_promising_items=[],await updateConfig(s,n,_),c.startStage(g.progressStage);var d=g.user_query,l=g.final_queries,u=g.raw_results_chat_uuid,a=g.parent_thinking_chat_id,w=g.parent_thinking_chat_uuid;if(d&&Array.isArray(l)&&0!==l.length&&u&&w&&a){let e;try{e=await chatApi.get(h,u)}catch(e){var m=`Failed to get raw search results chat (${u}): `+(e?.message||e||"Unknown error");return void await handleSearchError(s,n,g,m,o,_,c)}var v=extractRawResultsData(e),E=l.some(e=>"meta-search"===e.type),S=l.some(e=>"meta-insights"===e.type);let t=[],a=0,r=0;if(S){g.current_review_stage=META_INSIGHTS_REVIEW_STAGE,g.items_identified_for_review=[],g.items_processed_in_stage={},g.total_tokens_processed_in_stage=0,g.total_batches_in_stage=1;var p=getTokenLimitForStage(g.current_review_stage),f=selectBatchForReview([],g.current_review_stage,{},p,v,[]);if(t=f.batchItems,a=f.totalItemsInStage,r=f.batchTokenCount,0===t.length)return void await handleSearchError(s,n,g,"Meta-insights data is too large or not found for review.",o,_,c)}else{var T=identifyUniqueItems(v);if(g.items_identified_for_review=T,E){g.current_review_stage=META_SEARCH_REVIEW_STAGE;var R,A=T.reduce((e,t)=>{t=JSON.stringify(t.extracted_metadata_fields||{});return e+Math.ceil(t.length/4)+100},0),I=getTokenLimitForStage(META_SEARCH_REVIEW_STAGE);if(I<A)return R=`The total size of meta-search results (${A} tokens) exceeds the configured limit (${I} tokens). Please adjust the search settings to increase the token limit for meta-search review.`,void await handleSearchError(s,n,g,R,o,_,c);g.items_processed_in_stage={message:[]},g.current_batch_index=0}else g.current_review_stage="tiny-overviews",g.current_batch_index=0,g.items_processed_in_stage={message:[]},g.total_tokens_processed_in_stage=0,g.total_batches_in_stage=0;var y=getTokenLimitForStage(g.current_review_stage),C=selectBatchForReview(g.items_identified_for_review,g.current_review_stage,g.items_processed_in_stage,y,v,g.last_batch_promising_items);if(t=C.batchItems,a=C.totalItemsInStage,r=C.batchTokenCount,0===t.length)return void await transitionToNextReviewStage(s,n,g,_,c)}g.current_review_stage!==META_INSIGHTS_REVIEW_STAGE&&(t.forEach(e=>{g.items_processed_in_stage[e.source_type]||(g.items_processed_in_stage[e.source_type]=[]),g.items_processed_in_stage[e.source_type].push(e.id)}),g.total_tokens_processed_in_stage+=r,g.total_batches_in_stage=0<t.length?Math.ceil(a/t.length):0);var k,b=formatReviewBatch(t,v);let i;try{i=await chatApi.get(h,w)}catch(e){var M=`Failed to get parent thinking chat (${w}): `+(e?.message||e||"Unknown error");return void await handleSearchError(s,n,g,M,o,_,c)}if(i){let e=null,t=null;try{var U=g.type+"-"+g.current_review_stage;e=await fetchReviewUserInstructions(U,_),t=await fetchReviewSystemPrompt(U,_,n,d,l)}catch(e){return void await handleSearchError(s,n,g,e.message||"Failed to fetch review prompts.",o,_,c)}var q=[],F=(q.push({role:"system",message:"<replace with system message>"}),q.push({role:"assistant",message:`## Search Results Review - Stage: ${g.current_review_stage}, Batch: ${g.current_batch_index+1}

`+b}),q.push({role:"user",message:e}),q.push({role:"assistant",message:null}),{parentId:i.id,name:`${CHAT_NAME_PREFIX} ${s.id} State: ${g.type}-${g.current_review_stage}-batch-`+(g.current_batch_index+1),systemMessageName:g.type+"-"+g.current_review_stage,systemMessage:t,model:n.data.searchCriteria.aiAssistant,temperature:0,forkedFromMessageId:i.messages[0].id,messages:q});let a;try{a=await chatApi.newChat(h,F)}catch(e){var x="Failed to create review thinking chat: "+(e?.message||e||"Unknown error");return void await handleSearchError(s,n,g,x,o,_,c)}g.thinking_chat={id:a.id,uuid:a.uuid,method:"stream",created_at:(new Date).toISOString(),started_at:null,finished_at:null},g.reviews||(g.reviews=[]),g.reviews.push(g.thinking_chat);var N=ChatUtils.getChatMessages(a).find(e=>e.message?.includes("## Search Results Review - Stage:"));N&&(g.formatted_results_message_id=N.id),await updateConfig(s,n,_),_.updateChat&&"function"==typeof _.updateChat?_.updateChat():console.warn("resultsReviewOrchestrator/initiate: Unable to update chat since it is not defined in the context")}else k=`No thinking chat with the UUID ${w} found`,await handleSearchError(s,n,g,k,o,_,c)}else await handleSearchError(s,n,g,"Missing required data in review orchestration state object.",o,_,c)}catch(e){console.error("resultsReviewOrchestrator/initiate: Unhandled error:",e),await handleSearchError(s,n,g,e?.message||e||"An unexpected error occurred during review initiation.",o,_,c)}}module.exports={initiate:initiate};
