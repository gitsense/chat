/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let updateConfig=require("../utils/updateConfig").updateConfig,h=require("../Dependencies").h;function setupEventHandlers(e,c,n,i){if(c&&n&&i){c.__context=i,c.__config=n,c.__message=e,c.addEventListener("search-tool:element-change",async e=>{var n=e.detail.name,t=c.__config,a=c.__context,o=c.__message,e=e.target;let r=!1;if(t.engine&&t.engine.dynamicElementHandlers&&"function"==typeof t.engine.dynamicElementHandlers[n])try{await t.engine.dynamicElementHandlers[n](e,c,t,a),r=!0}catch(e){console.error(`Error executing dynamic handler for "${n}":`,e)}var e=findElementConfigByName(n,t),i=e&&t.actions&&t.actions[e.name]?t.actions[e.name]:null,l=c.querySelector('[name="aiEnabledCheckbox"]'),s=c.querySelector('[name="searchTargetProfileSelect"]').parentNode;if(l.checked?s.style.display="none":s.style.display="flex",i)try{await handleAction(o,i,e,c,t,a),r=!0}catch(e){console.error(`Error executing action handler for "${n}" (action type: ${i.type}):`,e)}r?await updateConfig(o,t,a):console.warn(`No dynamic handler or general action configured for element "${n}" on change, and no config update needed.`)}),c.addEventListener("click",async e=>{var n=e.target,t=c.__config,a=c.__context,o=c.__message;n.classList.contains("search-tool-input-control")?handleInputControlClick(n,c,t,a):"A"===n.tagName&&n.closest(".gitsense-search-results-container")&&n.href&&n.href.includes("?page=")?(e.preventDefault(),handlePaginationClick(e,c,t,a)):(n=(e=n.__elementConfig?n:n.closest("[__elementConfig]"))?e.__elementConfig:null)&&n.name&&t.actions&&t.actions[n.name]&&"input"!==n.type&&await handleAction(o,t.actions[n.name],n,c,t,a)});let o=c.querySelector('textarea[name="queryInput"]');if(o&&o.addEventListener("keydown",e=>{var n,t,a;"Enter"!==e.key||e.shiftKey||(e.preventDefault(),e=c.__config,n=c.__context,t=c.__message,(a=e.actions[o.name])&&"search"===a.type&&handleAction(t,a,o.__elementConfig,c,e,n))}),o){let e=c.querySelector('[name="queryHintMessage"]');e&&o.addEventListener("input",()=>{0<o.value.trim().length?(e.style.display="block",e.textContent="Press Enter to search."):e.style.display="none"})}n=c.querySelector('input[name="aiEnabledCheckbox"]');n&&n.addEventListener("change",async e=>{c.__config;e=e.target,e=new CustomEvent("search-tool:element-change",{detail:{name:e.name,value:e.checked},bubbles:!0});c.dispatchEvent(e)});let r=c.querySelector('a[name="showSearchHelpLink"]');r&&r.addEventListener("click",async e=>{e.preventDefault();let n=c.querySelector(".gitsense-search-help");var t,a,o;n?"none"===n.style.display?(n.style.display=null,r.innerText="Hide Help"):(n.style.display="none",r.innerText="Show Help"):(e=i.widget.dataURL,(a=new URLSearchParams).set("action","get-search-help"),e=e+"?"+a.toString(),(a=await fetch(e)).ok?({status:a,data:o}=await a.json(),"success"!==a?console.error(`Failed to retrieve search help document from ${e}: `+o):([t,a]=o.split(/-->\n\n\n/),o=i.md.render(a),n=h.createDiv({cls:"gitsense-search-help",html:o,style:{borderTop:"1px solid #ddd",marginTop:"20px"}}),c.appendChild(n),r.innerText="Hide Help")):console.error("Failed to retrieve search help document from "+e))})}else console.error("setupEventHandlers: Missing container, config, or context.")}function handleInputControlClick(e,n,t,a){var o=e.dataset.controlType,r=e.__associatedInput;if(r)switch(o){case"caseSensitive":case"regex":var i="enabled"===e.dataset.state?"disabled":"enabled";e.dataset.state=i,e.style.color="enabled"==i?"#000":"#aaa";break;case"clear":r.value=""}else console.warn("handleInputControlClick: Associated input element not found for control:",e)}function findElementConfigByName(a,e){let o=e=>{for(var n of e)if(Array.isArray(n)){var t=o(n);if(t)return t}else if(n.name===a)return n;return null};var n;for(n of[e.layout,...(e.sections||[]).map(e=>e.layout)].filter(Boolean))for(var t of n)if("row"===t.type&&Array.isArray(t.elements)){t=o(t.elements);if(t)return t}return null}async function handleAction(e,n,t,a,o,r){if(n&&n.type)switch(n.type){case"search":"button"===t?.type&&"searchButton"===t?.name&&(i=a.closest("form"))&&i.addEventListener("submit",e=>e.preventDefault());var i=a.querySelector('[name="targetSelect"]'),l=o.engine.collectCriteria(a,o);if(i&&(i=i.__dropdownInstance?i.__dropdownInstance.getValue():i.value,l.query.trim().startsWith("in:")||(l.query="in:"+i+(l.query?" "+l.query.trim():""))),o.data={searchCriteria:l},""===l.query.trim())return(i=a.querySelector('[name="queryHintMessage"]'))?(i.style.display="block",void(i.textContent="Empty searches are currently not supported.")):void 0;await updateConfig(e,o,r),r.updateChat&&"function"==typeof r.updateChat?r.updateChat():console.warn("handleAction: Unable to update chat since it is not defined in the context");break;case"toggle-visibility":l=a.querySelector(`[name="${n.target}"]`);l?(i="none"===l.style.display,l.style.display=i?"block":"none","link"===t.type&&(element.textContent=i?"Hide advanced options":"Show advanced options")):console.warn(`handleAction: Toggle visibility target element not found: "${n.target}"`);break;default:console.warn(`handleAction: Unrecognized action type "${n.type}"`)}else console.warn("handleAction: Invalid action configuration:",n)}async function handlePaginationClick(e,n,t,a){console.log("Pagination link clicked. Need to implement pagination handling.")}module.exports={setupEventHandlers:setupEventHandlers};
