/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let fs=require("fs").promises,path=require("path"),knex=require("knex"),SearchParser=require("./SearchParser"),SearchBuilder=require("./SearchBuilder"),SearchExecutor=require("./SearchExecutor"),{readPromptTemplate,loadAndFormatAllProfiles,loadAndFormatAllAnalyzersForPrompt,readMarkdownContentAfterHeader}=require("./utils/promptUtils"),{getAvailableGitReposAndBranches,formatGitReposAndBranchesForPrompt,getGitChatTypesFromSchema,formatGitChatTypesForPrompt}=require("./utils/gitInfoUtils"),getDBPath=require("../Dependencies").getDBPath,{QUERY_OPTIMIZATION,RESULTS_REVIEW_ORCHESTRATION}=require("../../common/gitsense/searchStates"),DEBUG_QUERY="TRUE"===process.env.GSC_DEBUG_QUERY?.toUpperCase(),DEBUG_PARSER="TRUE"===process.env.GSC_DEBUG_PARSER?.toUpperCase(),DEBUG_BUILDER="TRUE"===process.env.GSC_DEBUG_BUILDER?.toUpperCase(),DEBUG_EXECUTOR="TRUE"===process.env.GSC_DEBUG_EXECUTOR?.toUpperCase(),search=async r=>{var{query:r,"current-chat-id":t,"results-per-page":e,page:s}=r,a=knex({client:"sqlite3",connection:{filename:getDBPath()},useNullAsDefault:!0}),o=new SearchParser,i=new SearchBuilder(a),n=new SearchExecutor(a);try{DEBUG_QUERY&&(console.log("QUERY"),console.log(r));var c=o.parse(r,{resultsPerPage:e,page:s}),l=(DEBUG_PARSER&&(console.log("PARSED QUERY"),console.log(JSON.stringify(c,null,2))),await i.build(c,t,"main")),E=(DEBUG_BUILDER&&(console.log("SEARCH BUILDER CRITERIA"),console.log(JSON.stringify(l.searchCriteria,null,2)),console.log("SEARCH BUILDER OUTPUT"),console.log(JSON.stringify(l.finalTopLevelOutputs,null,2))),await n.execute(l)),R=(E.query=r,DEBUG_EXECUTOR&&(console.log("SEARCH EXECUTOR RESULTS"),console.log(JSON.stringify(E,null,2))),l.originalSnippetsRequested);if(R&&0<E.totalResultsReturned){var p=E.results.messages.map(e=>e.messages_id),u=E.results.codeBlocks.map(e=>code_blocks_id);if(0===p.length&&0===u.length)E.searchCriteria=c;else{let e=r;0<p.length&&(e+=" msg-id:"+p.join(",")),0<u.length&&(e+=" block-id:"+u.join(",")),DEBUG_QUERY&&(console.log("SNIPPET QUERY"),console.log(e));var h=o.parse(e,{}),S=await i.build(h,t,"snippets"),T=await n.execute(S);E.results=T.results}}return{status:"success",data:E}}catch(e){return console.trace(e),console.error("Search Error: "+e.message||e),{status:"failed",error:e.message||e}}finally{await a.destroy()}},generateSearchSystemPrompt=async r=>{var{"instruction-set":t,"user-query":s,"generated-query":a,"current-chat-id":o}=r,r={[QUERY_OPTIMIZATION]:QUERY_OPTIMIZATION+"-instructions.md",[RESULTS_REVIEW_ORCHESTRATION+"-meta-search"]:RESULTS_REVIEW_ORCHESTRATION+"-instructions-meta-search.md",[RESULTS_REVIEW_ORCHESTRATION+"-tiny-overviews"]:RESULTS_REVIEW_ORCHESTRATION+"-instructions-tiny-overviews.md",[RESULTS_REVIEW_ORCHESTRATION+"-short-overviews"]:RESULTS_REVIEW_ORCHESTRATION+"-instructions-short-overviews.md",[RESULTS_REVIEW_ORCHESTRATION+"-direct-snippets"]:RESULTS_REVIEW_ORCHESTRATION+"-instructions-direct-snippets.md"}[t];if(!r)throw new Error("Unsupported search prompt instruction set: "+t);var i=knex({client:"sqlite3",connection:{filename:getDBPath()},useNullAsDefault:!0});try{let e=await readPromptTemplate(r);switch(t){case QUERY_OPTIMIZATION:case RESULTS_REVIEW_ORCHESTRATION+"-meta-search":case RESULTS_REVIEW_ORCHESTRATION+"-tiny-overviews":case RESULTS_REVIEW_ORCHESTRATION+"-short-overviews":case RESULTS_REVIEW_ORCHESTRATION+"-direct-snippets":let r="No specific chat context available.";if(null!=o){var n=await i("chats").select("type","meta","parent_id").where("id",o).first();if(n&&(r=`You are currently in a chat of type: \`${n.type}\`.`,n.type.startsWith("git-")))try{var c,l,E=JSON.parse(n.meta);"git-repo"===n.type&&E.owner&&E.name?r+=` This chat is associated with the Git repository: \`${E.owner}/${E.name}\`.`:"git-ref"===n.type&&"branch"===E.type&&E.name&&n.parent_id&&(c=await i("chats").select("meta").where("id",n.parent_id).first())&&c.meta&&(l=JSON.parse(c.meta)).owner&&l.name&&(r+=` This chat is associated with the \`${E.name}\` branch in the Git repository: \`${l.owner}/${l.name}\`.`)}catch(e){console.error(`Error parsing meta for current chat ID ${o}:`,e),r+=" (Error retrieving detailed Git context.)"}}var R=await loadAndFormatAllProfiles(),p=await getAvailableGitReposAndBranches(i),u=formatGitReposAndBranchesForPrompt(p),h=await getGitChatTypesFromSchema(),S=await loadAndFormatAllAnalyzersForPrompt(),T=formatGitChatTypesForPrompt(h);e=(e=(e=(e=(e=(e=(e=e.replace("[User's original natural language query goes here]",s)).replace("[LLM-generated structured search query goes here]",a)).replace("[Placeholder for current chat context]",r)).replace("[Placeholder for the formatted list of available search profiles]",R)).replace("[Placeholder for the formatted list of available Git repositories and branches]",u)).replace("[Placeholder for the formatted list of available GitSense Chat Analyzers]",S)).replace("[Placeholder for the list of supported git-* chat types]",T);break;default:throw new Error("Unsupported search prompt instruction set: "+t)}return{status:"success",data:e}}catch(e){throw console.error("Error generating search system prompt:",e),new Error("Failed to generate search system prompt.")}finally{await i.destroy()}},getSearchUserInstruction=async e=>{var e=e["instruction-set"],r={[QUERY_OPTIMIZATION]:QUERY_OPTIMIZATION+"-user-instructions.md",[RESULTS_REVIEW_ORCHESTRATION+"-meta-search"]:RESULTS_REVIEW_ORCHESTRATION+"-user-instructions-meta-search.md",[RESULTS_REVIEW_ORCHESTRATION+"-tiny-overviews"]:RESULTS_REVIEW_ORCHESTRATION+"-user-instructions-tiny-overviews.md",[RESULTS_REVIEW_ORCHESTRATION+"-short-overviews"]:RESULTS_REVIEW_ORCHESTRATION+"-user-instructions-short-overviews.md",[RESULTS_REVIEW_ORCHESTRATION+"-direct-snippets"]:RESULTS_REVIEW_ORCHESTRATION+"-user-instructions-direct-snippets.md"}[e];if(!r)throw new Error("Unsupported search instructionSet: "+e);try{return{status:"success",data:await readPromptTemplate(r)}}catch(e){return console.error(`Error reading user instruction file "${r}":`,e),{status:"failed",error:"Failed to retrieve user instructions: "+e.message}}},getSearchHelp=async e=>{var r=path.join(__dirname,"../../docs/gitsense/search-help.md");try{return{status:"success",data:await fs.readFile(r,"utf8")}}catch(e){return{status:"failed",data:e}}};module.exports={search:search,generateSearchSystemPrompt:generateSearchSystemPrompt,getSearchUserInstruction:getSearchUserInstruction,getSearchHelp:getSearchHelp};
