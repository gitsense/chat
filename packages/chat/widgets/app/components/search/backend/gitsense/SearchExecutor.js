/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let sqlite3=require("sqlite3"),exec=require("child_process").exec,fs=require("fs").promises,path=require("path"),logSqlQuery=require("./utils/sqlDebugUtils").logSqlQuery;class SearchExecutor{constructor(e){this.db=e,this.useSqlite3Cli="true"===process.env.GSC_USE_SQLITE3_CLI}async execute(e){let{finalQuery:t,searchCriteria:i}=e;try{let e=t.toString();logSqlQuery(e,"original_query",!0);let l;if(this.useSqlite3Cli){let t=this.db.client.connectionSettings.filename,c=path.join(require("os").tmpdir(),`query_${Date.now()}.sql`);return new Promise((o,a)=>{fs.writeFile(c,e,"utf8").then(()=>{var e=`sqlite3 "${t}" -json < "${c}"`;console.log("Executing via CLI: "+e),exec(e,(e,t,r)=>{if(e)console.error("SearchExecutor: SQLite3 CLI execution error:",e),console.error("SearchExecutor: SQLite3 CLI stderr:",r),a(new Error("SQLite3 CLI execution failed: "+e.message));else try{l=JSON.parse(t);var s=this.processRawResults(l,i);o(s)}catch(e){console.error("SearchExecutor: Failed to parse SQLite3 CLI JSON output:",e),console.error("SearchExecutor: SQLite3 CLI stdout:",t),a(new Error("Failed to parse SQLite3 CLI JSON output."))}finally{fs.unlink(c).catch(e=>{console.error("SearchExecutor: Failed to delete temporary query file:",e)})}})}).catch(e=>{console.error("SearchExecutor: Failed to write temporary query file:",e),a(new Error("Failed to write temporary query file."))})})}return console.log("Executing via Knex..."),l=await t.select(),this.processRawResults(l,i)}catch(e){throw console.error("Database error during search execution:",e),logSqlQuery(t.toString(),void 0,!0),new Error("Error executing search query.")}}processRawResults(c,l){if(l.isMetaInsights){let t=[],r=l.valueField||"insight_value",s=l.countField||"value_count",e=(c.forEach(e=>{void 0!==e[r]&&void 0!==e[s]?t.push({value:e[r],count:e[s]}):console.warn("SearchExecutor: Unexpected row format for meta-insights:",e)}),t.length),o=void 0!==l.pagination?.offset&&0<e?Math.floor(l.pagination.offset/e)+1:1,a=0<e&&0<l.pagination?.limit?Math.ceil(e/l.pagination.limit):0<e?1:0;return{searchCriteria:l,pagination:{currentPage:o,totalPages:a,totalResults:e,resultsPerPage:e},results:t,totalResultsReturned:e}}let r={chats:[],messages:[],codeBlocks:[]},e={chats:0,messages:0,codeBlocks:0},s=0;0<c.length&&(t=c[0],e={chats:t.total_chat_matches||0,messages:t.total_message_matches||0,codeBlocks:t.total_code_block_matches||0},c.forEach(t=>{try{var e=JSON.parse(t.result_json);switch(e.source_type=t.source_type,e.fts_rank=t.fts_rank,e.result_chat_id=t.result_chat_id,e.chat_path=t.path,delete t.source_type,delete t.fts_rank,delete t.path,delete t.total_chat_matches,delete t.total_message_matches,delete t.total_code_block_matches,s++,e.source_type){case"chat":r.chats.push(e);break;case"message":r.messages.push(e);break;case"code-block":r.codeBlocks.push(e);break;default:console.warn("SearchExecutor: Unknown source_type encountered:",e.source_type,"Result:",e)}}catch(e){console.error("SearchExecutor: Failed to parse result_json:",e,"Row:",t),r.push({error:"Failed to parse result data",raw:t}),s++}}));var t=e.chats+e.messages+e.codeBlocks,c=s;let o=void 0!==l.pagination?.offset&&0<c?Math.floor(l.pagination.offset/c)+1:1,a=0<c?Math.ceil(t/c):0;return{searchCriteria:l,pagination:{currentPage:o,totalPages:a,totalResults:t,resultsPerPage:c},totalCounts:e,results:r,totalResultsReturned:s}}}module.exports=SearchExecutor;
