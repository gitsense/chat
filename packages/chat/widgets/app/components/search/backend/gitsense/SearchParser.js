/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

class SearchParser{stopWords=new Set(["a","an","the","and","or","not","is","are","was","were","be","been","being","have","has","had","do","does","did","will","would","shall","should","can","could","may","might","must","it","its","of","on","in","for","with","as","at","by","from","up","down","out","off","over","under","again","further","then","once","here","there","when","where","why","how","all","any","both","each","few","more","most","other","some","such","no","nor","only","own","same","so","than","too","very","s","t","can","just","don","should","now","d","ll","m","o","re","ve","y","ain","aren","couldn","didn","doesn","hadn","hasn","haven","isn","ma","mightn","mustn","needn","shan","shouldn","wasn","weren","won","wouldn","term","print","find","get","show","list","me","let","will","that","this","what","how","who","where","when","why"]);minKeywordLength=2;filterAliasMap={"chats.created_at":"chats.created_at","chats.type":"chats.type","chats.meta.git_path":"chats.meta.git_path","chats.meta.language":"chats.meta.language","chats.name":"chats.name","messages.created_at":"messages.created_at","messages.type":"messages.type","messages.meta.published_date":"messages.meta.published_date",fts_rank:"fts_rank","code_blocks.uuid":"code_blocks.uuid","code_blocks.id":"code_blocks.id","messages.id":"messages.id","messages.role":"messages.role","chats.meta.commit.timestamp":"chats.meta.commit.timestamp"};parse(s,e={}){if(null==s||"string"!=typeof s)throw new Error("No search query defined.");var n,{}=e,i=s.match(/profile:([a-zA-Z0-9_-]+)/i),o=i?i[1].toLowerCase():null,p="meta-search"===o,h="meta-insights"===o;let u={profile:null,keywords:[],phrases:[],targets:[],filters:{},nullFilters:{},notNullFilters:{},scope:null,sortBy:[],options:{},booleanLogic:null,warnings:[],codeBlockSearchType:null,repoFullNames:[],insightFieldType:null,chatIds:null,messageTypes:[],chatTypes:[],analyzerId:null,metadataFilters:[],insightField:null};if(p||h){u.isMetaSearch=p,u.isMetaInsights=h,u.profile=o,u.keywords=[],u.phrases=[],u.targets=[],u.filters={},u.nullFilters={},u.notNullFilters={},u.scope=null,u.sortBy=[],u.options={},u.booleanLogic=null,u.codeBlockSearchType=null,u.messageTypes=[],u.chatTypes=[],i&&(s=s.replace(i[0],"").trim());var h=/insight-field:([a-zA-Z0-9_.]+):([a-zA-Z]+)/i,t=/chat-id:([\d,]+)/g,r=/repo:([^"\s]+|"[^"]*")/gi,i=["string","number","boolean","datetime"],l=/meta:([a-zA-Z0-9_]+):([a-zA-Z]+)(=|!=)([^"\s]+|"[^"]*")/gi;let e;if(null!==(e=/analyzer:([a-zA-Z0-9_:-]+)/i.exec(s))&&(u.analyzerId=e[1],s=s.replace(e[0],"").trim(),u.messageTypes.push(u.analyzerId)),!u.messageTypes)throw new Error("No message types defined. Metadata search and insights requires at least one analyzer id");for(var a,d,c=[];null!==(e=l.exec(s));)c.push({fullMatch:e[0],field:e[1],type:e[2],operatorSymbol:e[3],rawValue:e[4]});if("meta-insights"===o){if(null===(e=h.exec(s)))throw new Error("'insight-field:' is mandatory for the 'meta-insights' profile.");u.insightField=e[1];h=e[2].toLowerCase();if(!i.includes(h))throw new Error(`Invalid type "${e[2]}" for 'insight-field:'. Supported types are: ${i.join(", ")}.`);u.insightFieldType=h,s=s.replace(e[0],"").trim()}if(p){for(var m of c){var S=m.field,R=m.type,g=m.operatorSymbol,m=m.rawValue;let e=m.startsWith('"')&&m.endsWith('"')?m.slice(1,-1):m,t="="===g?"is":"is_not";"--null--"===e.toLowerCase()&&("="===g?t="is_null":"!="===g&&(t="is_not_null"),e=null),"meta-search"===o&&u.metadataFilters.push({field:S,type:R,operator:t,value:e})}for(var O of c)s=s.replace(O.fullMatch,"").trim()}for(;null!==(a=t.exec(s));){var f=a[1].split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));0<f.length&&(u.chatIds||(u.chatIds=[]),u.chatIds.push(...f)),s=s.replace(a[0],"").trim()}for(;null!==(e=r.exec(s));){var _=e[1],_=_.startsWith('"')&&_.endsWith('"')?_.slice(1,-1):_;if("null"===_||"not_null"===_)throw new Error("Invalid value for 'repo:'. Cannot use 'null' or 'not_null'.");_=_.replace(/[\\"\s]/g,"").split(",").map(e=>{var e=e.trim(),t=e.split("/");if(2!==t.length||0===t[0].length||0===t[1].length)throw new Error(`Invalid repository name format "${e}". Must be in "owner/name" format.`);return e}).filter(e=>e);if(!(0<_.length))throw new Error("Invalid value for 'repo:'. Must provide at least one repository name.");u.repoFullNames||(u.repoFullNames=[]),u.repoFullNames.push(..._),s=s.replace(e[0],"").trim(),r.lastIndex=0}for(d of[{name:"in",regex:/in:([^"\s]+|"[^"]*")/gi},{name:"scope",regex:/scope:([^"\s]+|"[^"]*")/gi},{name:"option",regex:/option:([^"\s]+|"[^"]*")/gi},{name:"sort",regex:/sort:([^"\s]+|"[^"]*")/gi},{name:"query",regex:/query:([^"\s]+|"[^"]*")/gi},{name:"msg-id",regex:/msg-id:([\d,]+)/gi},{name:"block-id",regex:/block-id:([\d,]+)/gi},{name:"role",regex:/role:([^"\s]+|"[^"]*")/gi},{name:"name",regex:/name:([^"\s]+|"[^"]*")/gi},{name:"git-path",regex:/git-path:([^"\s]+|"[^"]*")/gi},{name:"lang",regex:/lang:([^"\s]+|"[^"]*")/gi},{name:"msg-type",regex:/msg-type:([^"\s]+|"[^"]*")/gi},{name:"chat-type",regex:/chat-type:([^"\s]+|"[^"]*")/gi}]){var w=d.regex;for(w.lastIndex=0;null!==(v=w.exec(s));){var v=v[0];u.warnings.push(`The filter '${v.trim()}' was ignored because it is not supported in the '${o}' search profile.`),s=s.replace(v,"").trim(),w.lastIndex=0}}i=s.replace(/\s+/g,"");if(0<i.length)throw new Error(`Invalid syntax for metadata filter profile. Only 'analyzer:', 'meta:', 'chat-id:', and 'repo:' filters are allowed. Found remaining query "`+i)}else{let e;for(var Z=/([a-zA-Z0-9_-]+):(("([^"]*)")|null|not_null|[^"\s]+)/g;null!==(e=Z.exec(s));){var y=e[1].toLowerCase(),I=e[2];if("chat-id"!==y&&"repo"!==y){let r=void 0!==e[3]?e[3]:I;if(s=s.replace(e[0],`__FILTER_${y}_${r.replace(/[^a-zA-Z0-9]/g,"")}_${Date.now()}__`),"in"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'in:'. Cannot use 'null' or 'not_null'.");u.targets=r.split(",").map(e=>e.trim()).filter(e=>e);let t=["all","chats","messages","code-blocks"];if(!u.targets.every(e=>t.includes(e)))throw new Error("Invalid search target specified in 'in:'. Valid targets are: "+t.join(", "))}else if("scope"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'scope:'. Cannot use 'null' or 'not_null'.");var E=["current-chat","current-chat-and-branches","connected-chats","all-chats"];if(!E.includes(r))throw new Error("Invalid search scope specified in 'scope:'. Valid scopes are: "+E.join(", "));u.scope=r}else if("option"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'option:'. Cannot use 'null' or 'not_null'.");E=["case-sensitive","regex"];if(!E.includes(r))throw new Error("Invalid search option specified in 'option:'. Valid options are: "+E.join(", "));u.options[r]=!0}else if("sort"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'sort:'. Cannot use 'null' or 'not_null'.");var b=r.split(",").map(e=>{var t=e.trim().split(":");if(2!==t.length)throw new Error(`Invalid sort criterion "${e}". Format must be "field:direction".`);var[e,t]=t;if(["asc","desc"].includes(t.toLowerCase()))return{field:this.filterAliasMap[e.toLowerCase()]||e,direction:t.toLowerCase()};throw new Error(`Invalid sort direction "${t}" for field "${e}". Must be "asc" or "desc".`)});u.sortBy=b}else if("profile"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'profile:'. Cannot use 'null' or 'not_null'.");u.profile=r}else if("query"===y)r.startsWith('"')&&r.endsWith('"')?((b=r.substring(1,r.length-1)).includes(" ")?u.phrases:u.keywords).push(b):I.startsWith('"')&&I.endsWith('"')?u.phrases.push(r.replace(/"/g,"")):u.keywords.push(r);else if("msg-id"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'msg-id:'. Cannot use 'null' or 'not_null'.");var N=r.split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));if(!(0<N.length))throw new Error("Invalid value for 'msg-id:'. Must provide at least one valid integer ID.");u.filters["messages.id"]=N}else if("block-id"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'block-id:'. Cannot use 'null' or 'not_null'.");N=r.split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));if(!(0<N.length))throw new Error("Invalid value for 'block-id:'. Must provide at least one valid integer ID.");u.filters["code_blocks.id"]=N}else if("role"===y){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'role:'. Cannot use 'null' or 'not_null'.");var D=I.startsWith('"')&&I.endsWith('"')?[r]:r.split(",").map(e=>e.trim()).filter(e=>e);u.filters["messages.role"]||(u.filters["messages.role"]=[]),u.filters["messages.role"].push(...D)}else{let e;"name"===y?(e="chats.name",r=I.startsWith('"')&&I.endsWith('"')?[r.replace(/"/g,"")]:r.split(",").map(e=>e.trim()).filter(e=>e),u.filters[e]||(u.filters[e]=[]),u.filters[e].push(...r)):"git-path"===y?(e="chats.meta.git_path",r=I.startsWith('"')&&I.endsWith('"')?[r]:r.split(",").map(e=>e.trim()).filter(e=>e),u.filters[e]||(u.filters[e]=[]),u.filters[e].push(...r)):"lang"===y?(e="chats.meta.language",r=I.startsWith('"')&&I.endsWith('"')?[r]:r.split(",").map(e=>e.trim()).filter(e=>e),u.filters[e]||(u.filters[e]=[]),u.filters[e].push(...r)):(e=this.filterAliasMap[y]||y,"null"===r?u.nullFilters[e]=!0:"not_null"===r?u.notNullFilters[e]=!0:u.filters[e]=r)}}}var x=/(repo|msg-type|chat-type|role):(("([^"]*)")|null|not_null|[^"\s]+)/g;for(x.lastIndex=0;null!==(e=x.exec(s));){var T=e[1].toLowerCase(),k=e[2],W=void 0!==e[3]?e[3]:k;if(s=s.replace(e[0],`__FILTER_${T}_${W.replace(/[^a-zA-Z0-9]/g,"")}_${Date.now()}__`),"repo"===T){if("null"===W||"not_null"===W)throw new Error("Invalid value for 'repo:'. Cannot use 'null' or 'not_null'.");var q=W.replace(/[\\"\s]/g,"");if(u.repoFullNames=q.split(",").map(e=>{var e=e.trim(),t=e.split("/");if(2!==t.length||0===t[0].length||0===t[1].length)throw new Error(`Invalid repository name format "${e}". Must be in "owner/name" format.`);return e}).filter(e=>e),0===u.repoFullNames.length)throw new Error("Invalid value for 'repo:'. Must provide at least one repository name.")}else if("msg-type"===T){if("null"===W||"not_null"===W)throw new Error("Invalid value for 'msg-type:'. Cannot use 'null' or 'not_null'.");if(u.messageTypes=k.startsWith('"')&&k.endsWith('"')?[W]:W.split(",").map(e=>e.trim()).filter(e=>e),0===u.messageTypes.length)throw new Error("Invalid value for 'msg-type:'. Must provide at least one message type.")}else if("chat-type"===T){if("null"===W||"not_null"===W)throw new Error("Invalid value for 'chat-type:'. Cannot use 'null' or 'not_null'.");u.chatTypes=k.startsWith('"')&&k.endsWith('"')?[W]:W.split(",").map(e=>e.trim()).filter(e=>e)}}let t=[];var F=/"([^"]*)"/g;for(F.lastIndex=0;null!==(e=F.exec(s));)t.push(e[1]),s=s.replace(e[0],`__PHRASE_${t.length-1}__`);for(var C,P=/chat-id:([\d,]+)/g;null!==(C=P.exec(s));){var A=C[1],L=A.split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));0<L.length&&(u.chatIds=L),s=s.replace(C[0],`__FILTER_chat-id_${A.replace(/[^a-zA-Z0-9]/g,"")}__`)}let r=s.replace(/\s+AND\s+/gi," __AND__ ");h=(r=(r=(r=r.replace(/\s+OR\s+/gi," __OR__ ")).replace(/\s+NOT\s+/gi," __NOT__ ")).replace(/-/g,"__MINUS__")).split(/\s+/).filter(e=>""!==e.trim());let l=new Set;var $,M=[];let a=!1;for($ of h){n=$,z=void 0;var z=n.startsWith("__PHRASE_")&&n.endsWith("__")?(z=parseInt(n.substring(9,n.length-2),10),l.has(z)?null:{type:"phrase",value:t[z]}):n.startsWith("__FILTER_")&&n.endsWith("__")?null:"__AND__"===n?{type:"operator",value:"AND"}:"__OR__"===n?{type:"operator",value:"OR"}:"__NOT__"===n||"__MINUS__"===n?{type:"operator",value:"NOT"}:{type:"keyword",value:n};z&&("operator"===z.type?a="NOT"===z.value||(M.push(z),!1):(a&&(M.push({type:"operator",value:"NOT"}),a=!1),M.push(z)))}u.booleanLogic=M;i=s.replace(/__PHRASE_\d+__|__FILTER_[^_]+_[^_]+__/g,"").trim().split(/\s+/).filter(e=>""!==e.trim()).filter(e=>{var t=e.toLowerCase();return!(this.stopWords.has(t)||t.length<this.minKeywordLength)||(u.warnings.push(`The term '${e}' was ignored as a keyword because it is a common word or too short. To include it, enclose it in double quotes (e.g., "${e}").`),!1)});u.phrases=t.filter((e,t)=>!l.has(t)),u.keywords=[...u.keywords,...i],o&&!p&&(u.profile=o)}h=u.targets.includes("code-blocks"),i=0<u.phrases.length,p=0<u.keywords.length,h&&(i||p)&&(u.codeBlockSearchType="trigram"),h=parseInt(e.resultsPerPage,10),i=parseInt(e.page,10);return u.pagination={},u.pagination.limit=!isNaN(h)&&0<h?h:null,u.pagination.offset=!isNaN(i)&&0<i&&null!==u.pagination.limit?(i-1)*u.pagination.limit:0,u}}module.exports=SearchParser;
