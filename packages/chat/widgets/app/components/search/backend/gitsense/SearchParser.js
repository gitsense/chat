/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

let AnalyzerUtils=require("@gitsense/gsc-utils").AnalyzerUtils,analyzeMessagesBasePath=require("../Dependencies").analyzeMessagesBasePath;class SearchParser{stopWords=new Set(["a","an","the","and","or","not","is","are","was","were","be","been","being","have","has","had","do","does","did","will","would","shall","should","can","could","may","might","must","it","its","of","on","in","for","with","as","at","by","from","up","down","out","off","over","under","again","further","then","once","here","there","when","where","why","how","all","any","both","each","few","more","most","other","some","such","no","nor","only","own","same","so","than","too","very","s","t","can","just","don","should","now","d","ll","m","o","re","ve","y","ain","aren","couldn","didn","doesn","hadn","hasn","haven","isn","ma","mightn","mustn","needn","shan","shouldn","wasn","weren","won","wouldn","term","print","find","get","show","list","me","let","will","that","this","what","how","who","where","when","why"]);minKeywordLength=2;filterAliasMap={"chats.created_at":"chats.created_at","chats.type":"chats.type","chats.meta.git_path":"chats.meta.git_path","chats.meta.language":"chats.meta.language","chats.name":"chats.name","messages.created_at":"messages.created_at","messages.type":"messages.type","messages.meta.published_date":"messages.meta.published_date",fts_rank:"fts_rank","code_blocks.uuid":"code_blocks.uuid","code_blocks.id":"code_blocks.id","messages.id":"messages.id","messages.role":"messages.role","chats.meta.commit.timestamp":"chats.meta.commit.timestamp"};async parse(s,e={}){if(null==s||"string"!=typeof s)throw new Error("No search query defined.");var i,{}=e,n=s.match(/profile:([a-zA-Z0-9_-]+)/i),o=n?n[1].toLowerCase():null,h="meta-search"===o,p="meta-insights"===o;let u={profile:null,keywords:[],phrases:[],targets:[],filters:{},nullFilters:{},notNullFilters:{},scope:null,sortBy:[],options:{},booleanLogic:null,warnings:[],codeBlockSearchType:null,repoFullNames:[],insightFieldType:null,chatIds:null,messageTypes:[],chatTypes:[],analyzerId:null,metadataFilters:[],insightField:null,insightFields:[]};if(h||p){u.isMetaSearch=h,u.isMetaInsights=p,u.profile=o,u.keywords=[],u.phrases=[],u.targets=[],u.filters={},u.nullFilters={},u.notNullFilters={},u.scope=null,u.sortBy=[],u.options={},u.booleanLogic=null,u.codeBlockSearchType=null,u.messageTypes=[],u.chatTypes=[],n&&(s=s.replace(n[0],"").trim());var t=/insight-field:([^"\s]+|"[^"]*")/gi,L=/chat-id:([\d,]+)/g,r=/repo:((?:[^"\s]+|"[^"]*")(?:,(?:[^"\s]+|"[^"]*"))*)/gi,R=["string","number","boolean","datetime"],D=/meta:([a-zA-Z0-9_]+):([a-zA-Z]+)(=|!=)([^"\s]+|"[^"]*")/gi;let e;if(null!==(e=/analyzer:([a-zA-Z0-9_:-]+)/i.exec(s))&&(u.analyzerId=e[1],s=s.replace(e[0],"").trim(),u.messageTypes.push(u.analyzerId),u.analyzerSchema=await AnalyzerUtils.getAnalyzerSchema(analyzeMessagesBasePath,u.analyzerId)),!u.analyzerId)throw new Error("Analyzer ID is mandatory for metadata search and insights profiles.");if(!u.analyzerSchema)throw new Error(`Could not retrieve schema for analyzer ID '${u.analyzerId}'.`);for(var l,a,O,d=[];null!==(e=D.exec(s));)d.push({fullMatch:e[0],field:e[1],type:e[2],operatorSymbol:e[3],rawValue:e[4]});if("meta-insights"===o){for(u.insightFields=[],t.lastIndex=0;null!==(l=t.exec(s));){var c,m=l[1];for(c of(m.startsWith('"')&&m.endsWith('"')?m.slice(1,-1):m).split(",").map(e=>e.trim()).filter(e=>e)){var f=c.split(":");if(2!==f.length)throw new Error(`Invalid format for 'insight-field:' value "${c}". Expected "field:type".`);var g=f[0],_=f[1].toLowerCase();if(!R.includes(_))throw new Error(`Invalid type "${f[1]}" for 'insight-field:' field "${g}". Supported types are: ${R.join(", ")}.`);f=u.analyzerSchema.properties[g];if(!f||f.type!==_)throw new Error(`Invalid 'insight-field:' "${g}:${_}". Field or type mismatch with analyzer schema.`);u.insightFields.push({field:g,type:_})}s=s.replace(l[0],"").trim(),t.lastIndex=0}if(0===u.insightFields.length)throw new Error("'insight-field:' is mandatory for the 'meta-insights' profile.")}if(h){for(var w of d){var y=w.field,v=w.type,I=w.operatorSymbol,w=w.rawValue;let e=w.startsWith('"')&&w.endsWith('"')?w.slice(1,-1):w,t="="===I?"is":"is_not";w=u.analyzerSchema.properties[y];if(!w||w.type!==v)throw new Error(`Invalid 'meta:' filter "${y}:${v}". Field or type mismatch with analyzer schema.`);"--null--"===e.toLowerCase()&&("="===I?t="is_null":"!="===I&&(t="is_not_null"),e=null),"meta-search"===o&&u.metadataFilters.push({field:y,type:v,operator:t,value:e})}for(var P of d)s=s.replace(P.fullMatch,"").trim()}for(;null!==(a=L.exec(s));){var B=a[1].split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));0<B.length&&(u.chatIds||(u.chatIds=[]),u.chatIds.push(...B)),s=s.replace(a[0],"").trim()}for(;null!==(e=r.exec(s));){var E=e[1],E=E.startsWith('"')&&E.endsWith('"')?E.slice(1,-1):E;if("null"===E||"not_null"===E)throw new Error("Invalid value for 'repo:'. Cannot use 'null' or 'not_null'.");E=E.replace(/[\\"\s]/g,"").split(",").map(e=>{var e=e.trim(),t=e.split("/");if(2!==t.length||0===t[0].length||0===t[1].length)throw new Error(`Invalid repository name format "${e}". Must be in "owner/name" format.`);return e}).filter(e=>e);if(!(0<E.length))throw new Error("Invalid value for 'repo:'. Must provide at least one repository name.");u.repoFullNames||(u.repoFullNames=[]),u.repoFullNames.push(...E),s=s.replace(e[0],"").trim(),r.lastIndex=0}for(O of[{name:"in",regex:/in:([^"\s]+|"[^"]*")/gi},{name:"scope",regex:/scope:([^"\s]+|"[^"]*")/gi},{name:"option",regex:/option:([^"\s]+|"[^"]*")/gi},{name:"sort",regex:/sort:([^"\s]+|"[^"]*")/gi},{name:"query",regex:/query:([^"\s]+|"[^"]*")/gi},{name:"msg-id",regex:/msg-id:([\d,]+)/gi},{name:"block-id",regex:/block-id:([\d,]+)/gi},{name:"role",regex:/role:([^"\s]+|"[^"]*")/gi},{name:"name",regex:/name:([^"\s]+|"[^"]*")/gi},{name:"git-path",regex:/git-path:([^"\s]+|"[^"]*")/gi},{name:"lang",regex:/lang:([^"\s]+|"[^"]*")/gi},{name:"msg-type",regex:/msg-type:([^"\s]+|"[^"]*")/gi},{name:"chat-type",regex:/chat-type:([^"\s]+|"[^"]*")/gi}]){var b=O.regex;for(b.lastIndex=0;null!==(x=b.exec(s));){var x=x[0];u.warnings.push(`The filter '${x.trim()}' was ignored because it is not supported in the '${o}' search profile.`),s=s.replace(x,"").trim(),b.lastIndex=0}}p=s.replace(/\s+/g,"");if(0<p.length)throw new Error(`Invalid syntax for metadata filter profile. Only 'analyzer:', 'meta:', 'chat-id:', and 'repo:' filters are allowed. Found remaining query "`+p)}else{let e;for(var q=/([a-zA-Z0-9_-]+):(("([^"]*)")|null|not_null|[^"\s]+)/g;null!==(e=q.exec(s));){var N=e[1].toLowerCase(),z=e[2];if("chat-id"!==N&&"repo"!==N){let r=void 0!==e[3]?e[3]:z;if(s=s.replace(e[0],`__FILTER_${N}_${r.replace(/[^a-zA-Z0-9]/g,"")}_${Date.now()}__`),"in"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'in:'. Cannot use 'null' or 'not_null'.");u.targets=r.split(",").map(e=>e.trim()).filter(e=>e);let t=["all","chats","messages","code-blocks"];if(!u.targets.every(e=>t.includes(e)))throw new Error("Invalid search target specified in 'in:'. Valid targets are: "+t.join(", "))}else if("scope"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'scope:'. Cannot use 'null' or 'not_null'.");var F=["current-chat","current-chat-and-branches","connected-chats","all-chats"];if(!F.includes(r))throw new Error("Invalid search scope specified in 'scope:'. Valid scopes are: "+F.join(", "));u.scope=r}else if("option"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'option:'. Cannot use 'null' or 'not_null'.");F=["case-sensitive","regex"];if(!F.includes(r))throw new Error("Invalid search option specified in 'option:'. Valid options are: "+F.join(", "));u.options[r]=!0}else if("sort"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'sort:'. Cannot use 'null' or 'not_null'.");var W=r.split(",").map(e=>{var t=e.trim().split(":");if(2!==t.length)throw new Error(`Invalid sort criterion "${e}". Format must be "field:direction".`);var[e,t]=t;if(["asc","desc"].includes(t.toLowerCase()))return{field:this.filterAliasMap[e.toLowerCase()]||e,direction:t.toLowerCase()};throw new Error(`Invalid sort direction "${t}" for field "${e}". Must be "asc" or "desc".`)});u.sortBy=W}else if("profile"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'profile:'. Cannot use 'null' or 'not_null'.");u.profile=r}else if("query"===N)r.startsWith('"')&&r.endsWith('"')?((W=r.substring(1,r.length-1)).includes(" ")?u.phrases:u.keywords).push(W):z.startsWith('"')&&z.endsWith('"')?u.phrases.push(r.replace(/"/g,"")):u.keywords.push(r);else if("msg-id"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'msg-id:'. Cannot use 'null' or 'not_null'.");var k=r.split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));if(!(0<k.length))throw new Error("Invalid value for 'msg-id:'. Must provide at least one valid integer ID.");u.filters["messages.id"]=k}else if("block-id"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'block-id:'. Cannot use 'null' or 'not_null'.");k=r.split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));if(!(0<k.length))throw new Error("Invalid value for 'block-id:'. Must provide at least one valid integer ID.");u.filters["code_blocks.id"]=k}else if("role"===N){if("null"===r||"not_null"===r)throw new Error("Invalid value for 'role:'. Cannot use 'null' or 'not_null'.");var Z=z.startsWith('"')&&z.endsWith('"')?[r]:r.split(",").map(e=>e.trim()).filter(e=>e);u.filters["messages.role"]||(u.filters["messages.role"]=[]),u.filters["messages.role"].push(...Z)}else{let e;"name"===N?(e="chats.name",r=z.startsWith('"')&&z.endsWith('"')?[r.replace(/"/g,"")]:r.split(",").map(e=>e.trim()).filter(e=>e),u.filters[e]||(u.filters[e]=[]),u.filters[e].push(...r)):"git-path"===N?(e="chats.meta.git_path",r=z.startsWith('"')&&z.endsWith('"')?[r]:r.split(",").map(e=>e.trim()).filter(e=>e),u.filters[e]||(u.filters[e]=[]),u.filters[e].push(...r)):"lang"===N?(e="chats.meta.language",r=z.startsWith('"')&&z.endsWith('"')?[r]:r.split(",").map(e=>e.trim()).filter(e=>e),u.filters[e]||(u.filters[e]=[]),u.filters[e].push(...r)):(e=this.filterAliasMap[N]||N,"null"===r?u.nullFilters[e]=!0:"not_null"===r?u.notNullFilters[e]=!0:u.filters[e]=r)}}}var j=/(repo|msg-type|chat-type|role):(("([^"]*)")|null|not_null|[^"\s]+)/g;for(j.lastIndex=0;null!==(e=j.exec(s));){var T=e[1].toLowerCase(),$=e[2],A=void 0!==e[3]?e[3]:$;if(s=s.replace(e[0],`__FILTER_${T}_${A.replace(/[^a-zA-Z0-9]/g,"")}_${Date.now()}__`),"repo"===T){if("null"===A||"not_null"===A)throw new Error("Invalid value for 'repo:'. Cannot use 'null' or 'not_null'.");var U=A.replace(/[\\"\s]/g,"");if(u.repoFullNames=U.split(",").map(e=>{var e=e.trim(),t=e.split("/");if(2!==t.length||0===t[0].length||0===t[1].length)throw new Error(`Invalid repository name format "${e}". Must be in "owner/name" format.`);return e}).filter(e=>e),0===u.repoFullNames.length)throw new Error("Invalid value for 'repo:'. Must provide at least one repository name.")}else if("msg-type"===T){if("null"===A||"not_null"===A)throw new Error("Invalid value for 'msg-type:'. Cannot use 'null' or 'not_null'.");if(u.messageTypes=$.startsWith('"')&&$.endsWith('"')?[A]:A.split(",").map(e=>e.trim()).filter(e=>e),0===u.messageTypes.length)throw new Error("Invalid value for 'msg-type:'. Must provide at least one message type.")}else if("chat-type"===T){if("null"===A||"not_null"===A)throw new Error("Invalid value for 'chat-type:'. Cannot use 'null' or 'not_null'.");u.chatTypes=$.startsWith('"')&&$.endsWith('"')?[A]:A.split(",").map(e=>e.trim()).filter(e=>e)}}let t=[];var V=/"([^"]*)"/g;for(V.lastIndex=0;null!==(e=V.exec(s));)t.push(e[1]),s=s.replace(e[0],`__PHRASE_${t.length-1}__`);for(var C,H=/chat-id:([\d,]+)/g;null!==(C=H.exec(s));){var K=C[1],G=K.split(",").map(e=>parseInt(e.trim(),10)).filter(e=>!isNaN(e));0<G.length&&(u.chatIds=G),s=s.replace(C[0],`__FILTER_chat-id_${K.replace(/[^a-zA-Z0-9]/g,"")}__`)}let r=s.replace(/\s+AND\s+/gi," __AND__ ");n=(r=(r=(r=r.replace(/\s+OR\s+/gi," __OR__ ")).replace(/\s+NOT\s+/gi," __NOT__ ")).replace(/-/g,"__MINUS__")).split(/\s+/).filter(e=>""!==e.trim());let l=new Set;var J,S=[];let a=!1;for(J of n){i=J,M=void 0;var M=i.startsWith("__PHRASE_")&&i.endsWith("__")?(M=parseInt(i.substring(9,i.length-2),10),l.has(M)?null:{type:"phrase",value:t[M]}):i.startsWith("__FILTER_")&&i.endsWith("__")?null:"__AND__"===i?{type:"operator",value:"AND"}:"__OR__"===i?{type:"operator",value:"OR"}:"__NOT__"===i||"__MINUS__"===i?{type:"operator",value:"NOT"}:{type:"keyword",value:i};M&&("operator"===M.type?a="NOT"===M.value||(S.push(M),!1):(a&&(S.push({type:"operator",value:"NOT"}),a=!1),S.push(M)))}u.booleanLogic=S;p=s.replace(/__PHRASE_\d+__|__FILTER_[^_]+_[^_]+_[^_]+__/g,"").trim().split(/\s+/).filter(e=>""!==e.trim()).filter(e=>{var t=e.toLowerCase();return!(this.stopWords.has(t)||t.length<this.minKeywordLength)||(u.warnings.push(`The term '${e}' was ignored as a keyword because it is a common word or too short. To include it, enclose it in double quotes (e.g., "${e}").`),!1)});u.phrases=t.filter((e,t)=>!l.has(t)),u.keywords=[...u.keywords,...p],o&&!h&&(u.profile=o)}n=u.targets.includes("code-blocks"),p=0<u.phrases.length,h=0<u.keywords.length,n&&(p||h)&&(u.codeBlockSearchType="trigram"),n=parseInt(e.resultsPerPage,10),p=parseInt(e.page,10);return u.pagination={},u.pagination.limit=!isNaN(n)&&0<n?n:null,u.pagination.offset=!isNaN(p)&&0<p&&null!==u.pagination.limit?(p-1)*u.pagination.limit:0,u}}module.exports=SearchParser;
