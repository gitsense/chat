/*
 * GitSense Chat - Minified Distribution File
 *
 * This JavaScript file is part of the minified distribution of GitSense Chat.
 * It has been optimized (minified) for performance and efficient delivery.
 *
 * This software is permitted for internal use and modification.
 * Copying for profit or redistribution is strictly not permitted.
 *
 * The Fair License, which formalizes these terms, will be adopted as the official license in the future.
 * Once finalized, the unminified source code will be freely available for internal use for non-
 * commercial purposes.
 *
 * This software may not be used to develop or enhance any product or service that competes
 * directly or indirectly with GitSense Chat without explicit permission.
 *
 * Copyright (c) 2025 GitSense. All rights reserved.
 */

function set(e,t=!1){return setChat(e,t)}function setChat(e,t=!1){var a,s,{uuid:e,main_model:n}=e,{pathname:r,search:o}=window.location,o=new URLSearchParams(o),t=(t?(a=o.get("chats").split(","),s=o.get("models").split(","),a[t="left"===t?0:1]=e,s[t]=n,o.set("chats",a.join(",")),o.set("models",s.join(","))):o.set("chat",e),(""===r?"/":r)+"?"+o.toString());window.location.assign(t)}async function get(e,t,a,s,n){return getChat(e,t,a,s,n)}async function getChat(e,t,a,s,n){e=e.dataURL;let r=null,o=null;"object"==typeof t?(r=t.uuid,a=t.model,s=t.groupId,n=t.systemMessageName,o=t.maxDepth):r=t;t=new URLSearchParams;t.set("action","get-chat"),a&&t.set("model",a),r&&t.set("uuid",r),s&&t.set("group-id",s),n&&t.set("system-message-name",n),o&&t.set("max-depth",o);var{status:a,data:s}=await(await fetch(e+"?"+t.toString())).json();if("success"===a)return s.chat;if(s.match(/not found/i))return null;throw new Error("FIXME: Implement")}async function getByMessageId(e,t){var e=e.dataURL,a=new URLSearchParams;a.set("action","get-chat-by-message-id"),a.set("message-id",t);var{status:t,data:e}=await(await fetch(e+"?"+a.toString())).json();if("success"===t)return e.chat;if(e.match(/not found/i))return null;throw new Error("FIXME: Implement")}async function getGitRefChatByFamilyMember(e,t){var a="getGitRefChatByFamilyMember",s=(global.GSCHAT_CHAT_API[a]||(global.GSCHAT_CHAT_API[a]={lock:{},cache:{}}),global.GSCHAT_CHAT_API[a].lock),a=global.GSCHAT_CHAT_API[a].cache,{id:t,uuid:n}=t,r=new URLSearchParams,t=(r.set("action","get-git-ref-chat-by-family-member"),t&&r.set("id",t),n&&r.set("uuid",n),e.dataURL+"?"+r.toString());if(a[t]){var{expiresAt:n,result:o}=a[t];if((new Date).getTime()<n)return console.log("using cache for "+t),o}if(s[t]){n=s[t];if((new Date).getTime()<n&&await sleep(2e3),a[t]){var{expiresAt:o,result:n}=a[t];if((new Date).getTime()<o)return console.log("using cache for "+t),n}}s[t]||(s[t]=(new Date).getTime()+2e3);try{var i=await fetch(e.dataURL+"?"+r.toString());if(i.ok){var{status:c,data:l}=await i.json();if("failed"!==c)return a[t]={expiresAt:(new Date).getTime()+5e3,result:l},l;if(l.match(/API/))return`No API key defined. Unable to ask ${model}.`}throw new Error("Implement me")}finally{delete s[t]}}async function getChatTitleSuggestion(e,t,a){var s=new URLSearchParams,t=(s.set("action","get-chat-title-suggestion"),s.set("uuid",t),s.set("model",a),await fetch(e.dataURL+"?"+s.toString()));if(t.ok){var{status:e,data:s}=await t.json();if("failed"!==e)return s.title;if(s.match(/API/))return`No API key defined. Unable to ask ${a}.`}throw new Error("Implement me")}async function getGitBlobChatMessagesByChatIds(e,t,a=!1){var s=new URLSearchParams,t=(s.set("action","get-git-blob-chat-messages"),s.set("id-type","chat"),s.set("ids",t.join(",")),s.set("working-directory",a),await fetch(e.dataURL+"?"+s.toString()));if(t.ok){var{status:a,data:e}=await t.json();if("failed"!==a)return e.chat2Result;if(e.match(/API/))return`No API key defined. Unable to ask ${model}.`}throw new Error("Implement me")}async function getTinyChatOverviewPurpose(e,t,a){var s=new URLSearchParams,t=(s.set("action","get-tiny-overview-chat-purpose"),s.set("ids",t.join(",")),await fetch(e.dataURL+"?"+s.toString()));if(t.ok){var{status:e,data:s}=await t.json();if("failed"!==e)return s.chat2Result;if(s.match(/API/))return`No API key defined. Unable to ask ${model}.`}throw new Error("Implement me")}async function getChatAnalysisMessagesByChatIds(e,t,a){var s=new URLSearchParams,t=(s.set("action","get-chat-analysis-messages"),s.set("id-type","chat"),s.set("ids",t.join(",")),s.set("type",a),await fetch(e.dataURL+"?"+s.toString()));if(t.ok){var{status:a,data:e}=await t.json();if("failed"!==a)return e.chat2Result;if(e.match(/API/))return`No API key defined. Unable to ask ${model}.`}throw new Error("Implement me")}async function getAnalyzeBatchDetails(e,t){var a,s=new URLSearchParams,t=(s.set("action","get-analyze-batch-details"),s.set("batch-job-id",t),await fetch(e.dataURL+"?"+s.toString()));if(t.ok)return{status:a,data:e}=await t.json(),e;console.log("FIXME: Implement")}async function getAnalyzeChatMessagesForBatchGroup(e,t,a){var s=new URLSearchParams,t=(s.set("action","get-analyze-chat-messages-for-batch-group"),s.set("batch-job-id",t),s.set("group-number",a),await fetch(e.dataURL+"?"+s.toString()));if(t.ok){var{status:a,data:e}=await t.json();if("success"!==a)throw new Error(e);return e}console.log("FIXME: Implement")}async function getAnalyzeChatMenuOptions(e,t){var a,s=new URLSearchParams,e=(s.set("action","get-analyze-chat-menu-options"),await fetch(e.dataURL+"?"+s.toString()));if(e.ok)return{status:a,data:s}=await e.json(),s;console.log("FIXME: Implement")}async function getAnalyzers(e,t){var a,s=new URLSearchParams,t=(s.set("action","get-analyzers"),t&&s.set("include-description",!0),await fetch(e.dataURL+"?"+s.toString()));if(t.ok)return{status:a,data:e}=await t.json(),e;console.log("FIXME: Implement")}async function getAnalyzerSchema(e,t){var a,s=new URLSearchParams,t=(s.set("action","get-analyzer-schema"),s.set("analyzer-id",t),await fetch(e.dataURL+"?"+s.toString()));if(t.ok)return{status:a,data:e}=await t.json(),e;console.log("FIXME: Implement")}async function getChatTemplateMessages(e,t){var a,s=new URLSearchParams,t=(s.set("action","get-chat-template-messages"),s.set("type",t),await fetch(e.dataURL+"?"+s.toString()));if(t.ok)return{status:a,data:e}=await t.json(),e.messages;console.log("FIXME: Implement")}async function getScheduledBatchProviders(e){var t,a=new URLSearchParams,e=(a.set("action","get-scheduled-batch-providers"),await fetch(e.dataURL+"?"+a.toString()));if(e.ok)return{status:a,data:e,error:t}=await e.json(),"success"===a?{providers:e}:{error:t};console.log("FIXME: Implement")}async function newChat(e,t){var{stream:t=!1,type:a="regular",model:s=null,temperature:n=0,prompt:r=null,message:o=null,messages:i=null,analysis:c=null,name:l=null,parentId:d=null,groupId:u=null,realModel:h=null,forkedFromMessageId:m=null,systemMessage:g=null,systemMessageName:f=null}=t,e=await fetch(e.dataURL,{method:"POST",body:JSON.stringify({action:"new-chat",stream:t,type:a,"group-id":u,"parent-id":d,name:l,model:s,temperature:n,"system-message-name":r||f,"system-message":g,"user-message":o,messages:i,analysis:c,"real-model":h,"forked-from-message-id":m},(e,t)=>{if(null!=t)return t}),headers:{"Content-Type":"application/json"}});if(e.ok){var{status:t,data:a}=await e.json();if("failed"!==t)return a.chat}console.log("FIXME: Implement")}async function newChatMessage(e,t,a,s,n,r,o={}){let i=a,{realModel:c=null,temperature:l=0,stream:d=!0,refMsgId:u,insert:h}=o||{},m=null,g=null,f=null;if("object"==typeof a&&(i=a.parentId,s=a.model,n=a.role,r=a.message,c=a.realModel,l=a.temperature||0,d=null==a.stream||a.stream,u=a.refMsgId,h=a.insert,m=a.meta,g=a.type,f=a.visibility),null==i)throw new Error("No parent id defined");if(!s)throw new Error("No model defined");if(!n)throw new Error("No role defined");if(void 0===r)throw new Error("No message defined");o={action:"new-chat-message","chat-id":t,"parent-id":i,temperature:l,role:n,model:s,"real-model":c,message:r,stream:d,"reference-message-id":u,insert:h,meta:m,type:g,visibility:f},a=await fetch(e.dataURL,{method:"POST",body:JSON.stringify(o),headers:{"Content-Type":"application/json"}});if(!a.ok)throw new Error("FIXME: Implement");var{status:t,data:n}=await a.json();if("success"!==t)throw new Error("FIXME: Implement");return n}async function newChatTree(e,t,a,s=0,n,r){var o,e=await fetch(e.dataURL,{method:"POST",body:JSON.stringify({action:"new-chat-tree",tree:t,name:a,"parent-id":s,"system-message-name":n,model:r},(e,t)=>{if(null!=t)return t}),headers:{"Content-Type":"application/json"}});if(e.ok)return{status:o,data:t}=await e.json(),t.chat;console.log("FIXME: Implement")}async function cancelBatchJob(e,t){var a,e=await fetch(e.dataURL,{method:"POST",body:JSON.stringify({action:"cancel-batch-job","batch-job-id":t}),headers:{"Content-Type":"application/json"}});if(e.ok)return{status:t,data:e,error:a}=await e.json(),"success"===t?e:{error:a};console.log("FIXME: Implement")}async function createAnalyzeBatchJob(e,t){var a,t=JSON.parse(JSON.stringify(t)),e=(t.action="create-analyze-batch-job",await fetch(e.dataURL,{method:"POST",body:JSON.stringify(t,(e,t)=>{if(null!=t)return t}),headers:{"Content-Type":"application/json"}}));if(e.ok)return{status:t,data:e,error:a}=await e.json(),"success"===t?e:{error:a};console.log("FIXME: Implement")}async function deleteAnalyzer(e,t){var e=e.dataURL,a=new URLSearchParams;a.set("action","delete-analyzer"),a.set("analyzer-id",t);var{status:t,data:e}=await(await fetch(e+"?"+a.toString(),{method:"DELETE"})).json();return"success"!==t?{success:!1,error:e}:{success:!0}}async function deleteChat(e,t){var e=e.dataURL,t=t.uuid,a=new URLSearchParams;a.set("action","delete-chat"),a.set("uuid",t);var{status:t,data:e}=await(await fetch(e+"?"+a.toString(),{method:"DELETE"})).json();if("success"===t)return e;if(e.match(/not found/i))return null;throw new Error("FIXME: Implement")}async function deleteChatMessage(e,t,a){var e=e.dataURL,s=new URLSearchParams;s.set("action","delete-chat-message"),s.set("id",t),s.set("includes-children",a);var{status:t,data:a}=await(await fetch(e+"?"+s.toString(),{method:"DELETE"})).json();if("success"===t)return a;if(a.match(/not found/i))return null;throw new Error("FIXME: Implement")}async function resetBatchGroup(e,t,a){e=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify({action:"reset-batch-group","batch-job-id":t,"group-number":a}),headers:{"Content-Type":"application/json"}});return e.ok?e.json():(t=await e.json(),{success:!1,message:`Error ${e.status}: `+(t.message||"Unknown error")})}async function resetChatMessage(e,t){var e=e.dataURL,{status:e,data:t}=await(await fetch(e,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:"reset-chat-message",id:t})})).json();if("success"===e)return!0;if(t.match(/not found/i))return null;throw new Error("FIXME: Implement")}async function updateBatchGroupAnalyzeChatUuid(e,t,a,s){e=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify({action:"update-batch-group-analyze-chat-uuid","batch-job-id":t,"group-number":a,"analyze-chat-uuid":s}),headers:{"Content-Type":"application/json"}});if(e.ok)return{status:t,error:a}=await e.json(),"success"!==t?{success:!1,error:a}:{success:!0};console.log("FIXME: Implement")}async function updateChats(e,t){let a=[];t.map(e=>{e={...e};null!=e.parentId&&(e.parent_id=e.parentId,delete e.parentId),a.push(e)});var t={action:"update-chats",chats:a},e=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify(t),headers:{"Content-Type":"application/json"}});if(e.ok)return{status:t,data:e}=await e.json(),"success"!==t?{success:!1,error:e}:{success:!0};console.log("FIXME: Implement")}async function updateChatAnalyzer(e,t,a){e=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify({action:"update-chat-analyzer",analyzerId:t,instructionsContent:a}),headers:{"Content-Type":"application/json"}});return e.ok?e.json():(t=await e.json(),{status:"failed",data:`Error ${e.status}: `+(t.message||"Unknown error")})}async function updateChatMessage(e,t,a,s){let n=a,r=null,o=null,i=null;a&&"object"==typeof a&&(n=a.oldMessage,s=a.newMessage,r=a.newVisibility,o=a.newType,i=a.newMeta);a={action:"update-chat-message",id:t,"old-message":n,"new-message":s,"new-type":o||void 0,"new-visibility":r||void 0,"new-meta":i||void 0},t=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify(a),headers:{"Content-Type":"application/json"}});if(t.ok){var{status:s,data:e}=await t.json();if("failed"!==s)return e}console.log("FIXME: Implement")}async function updateChatAnalysisMessages(e,t,a){e=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify({action:"update-chat-analysis-messages","analyzer-id":t,analyses:a}),headers:{"Content-Type":"application/json"}});return e.ok?e.json():(t=await e.json(),{status:"failed",data:`Error ${e.status}: `+(t.message||"Unknown error")})}async function updateChatName(e,t,a,s,n,r){e=await fetch(e.dataURL,{method:"PUT",body:JSON.stringify({action:"update-chat-name","old-name":a,"new-name":s,uuid:t,model:r,suggest:n}),headers:{"Content-Type":"application/json"}});if(e.ok){var{status:a,data:s}=await e.json();if("failed"!==a)return s}console.log("FIXME: Implement")}async function search(e,t){var a,s=new URLSearchParams,t=(s.set("action","search"),s.set("query",t),await fetch(e.dataURL+"?"+s.toString()));if(t.ok)return{status:a,data:e}=await t.json(),e;console.log("FIXME: Implement")}function getUniqueModels(e,a){return e.forEach(e=>{var{model:e,kids:t}=e;if(e&&a.add(e),t.length)return getUniqueModels(t,a)}),Array.from(a)}function sleep(t){return new Promise(e=>setTimeout(e,t))}global.GSCHAT_CHAT_API={},module.exports={cancelBatchJob:cancelBatchJob,createAnalyzeBatchJob:createAnalyzeBatchJob,deleteAnalyzer:deleteAnalyzer,deleteChat:deleteChat,deleteChatMessage:deleteChatMessage,set:set,setChat:setChat,get:get,getChat:getChat,getAnalyzeBatchDetails:getAnalyzeBatchDetails,getAnalyzeChatMessagesForBatchGroup:getAnalyzeChatMessagesForBatchGroup,getAnalyzeChatMenuOptions:getAnalyzeChatMenuOptions,getAnalyzers:getAnalyzers,getAnalyzerSchema:getAnalyzerSchema,getChatAnalysisMessagesByChatIds:getChatAnalysisMessagesByChatIds,getChatTitleSuggestion:getChatTitleSuggestion,getChatTemplateMessages:getChatTemplateMessages,getScheduledBatchProviders:getScheduledBatchProviders,getTinyChatOverviewPurpose:getTinyChatOverviewPurpose,getGitBlobChatMessagesByChatIds:getGitBlobChatMessagesByChatIds,getGitRefChatByFamilyMember:getGitRefChatByFamilyMember,getUniqueModels:getUniqueModels,newChat:newChat,newChatMessage:newChatMessage,newChatTree:newChatTree,resetBatchGroup:resetBatchGroup,resetChatMessage:resetChatMessage,search:search,updateBatchGroupAnalyzeChatUuid:updateBatchGroupAnalyzeChatUuid,updateChatAnalyzer:updateChatAnalyzer,updateChatAnalysisMessages:updateChatAnalysisMessages,updateChatMessage:updateChatMessage,updateChatName:updateChatName,updateChats:updateChats};
